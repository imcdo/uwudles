// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "uwudlesProjectile-Compiled" {
Properties {
 _Intensity ("Intensity", Float) = 0.000000
 _Color ("Color", Color) = (0.000000,0.000000,0.000000,0.000000)
[HideInInspector] [NoScaleOffset]  unity_Lightmaps ("unity_Lightmaps", 2DArray) = "" { }
[HideInInspector] [NoScaleOffset]  unity_LightmapsInd ("unity_LightmapsInd", 2DArray) = "" { }
[HideInInspector] [NoScaleOffset]  unity_ShadowMasks ("unity_ShadowMasks", 2DArray) = "" { }
}
SubShader { 
 Tags { "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }


 // Stats for Vertex shader:
 //        d3d11: 32 avg math (24..51), 0 avg branch (0..1)
 // Stats for Fragment shader:
 //        d3d11: 78 avg math (35..211), 0 avg texture (0..1), 0 avg branch (0..1)
 Pass {
  Name "Universal Forward"
  Tags { "LIGHTMODE"="UniversalForward" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
// Global Keywords: _ADDITIONAL_LIGHTS_VERTEX 
// Local Keywords: <none>
// -- Hardware tier variant: Tier 1
// -- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t1.xxxx, s1, r7.z
  73:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
  74:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
  75:   ge r7.x, l(0.000000), r7.z
  76:   ge r7.y, r7.z, l(1.000000)
  77:   or r7.x, r7.y, r7.x
  78:   movc r6.w, r7.x, l(1.000000), r6.w
  79:   add r7.x, -r6.w, l(1.000000)
  80:   mad r6.w, r1.w, r7.x, r6.w
  81:   mul r4.w, r4.w, r6.w
  82:   dp3_sat r6.w, r1.xyzx, r6.xyzx
  83:   mul r4.w, r4.w, r6.w
  84:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
  85:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  86:   dp3 r3.w, r5.xyzx, r5.xyzx
  87:   max r3.w, r3.w, l(0.000000)
  88:   rsq r3.w, r3.w
  89:   mul r5.xyz, r3.wwww, r5.xyzx
  90:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  91:   mul r3.w, r3.w, r3.w
  92:   max r3.w, r3.w, l(0.100000)
  93:   mul r3.w, r3.w, l(6.000120)
  94:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  95:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  96:   iadd r2.w, r2.w, l(1)
  97: endloop 
  98: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  73:   round_ni r8.xy, r8.xyxx
  74:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  75:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  76:   mul r10.xyzw, r9.xxzz, r9.xxzz
  77:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  78:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  79:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  81:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  82:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  83:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  84:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  85:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  86:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  87:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  88:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  89:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  90:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  91:   mov r11.z, r10.x
  92:   mov r11.w, r7.x
  93:   mov r12.z, r13.x
  94:   mov r12.w, r8.z
  95:   add r9.xyzw, r11.zwxz, r12.zwxz
  96:   mov r10.z, r11.y
  97:   mov r10.w, r7.y
  98:   mov r13.z, r12.y
  99:   mov r13.w, r8.w
 100:   add r7.xyw, r10.zyzw, r13.zyzw
 101:   div r10.xyz, r12.xzwx, r9.zwyz
 102:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 103:   div r11.xyz, r13.zywz, r7.xywx
 104:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 105:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 106:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 107:   mov r10.w, r11.x
 108:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 109:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 110:   mov r11.w, r10.y
 111:   mov r10.yw, r11.yyyz
 112:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 113:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 114:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 115:   mul r14.xyzw, r7.xxxy, r9.zwyz
 116:   mul r15.xyzw, r7.yyww, r9.xyzw
 117:   mul r6.w, r7.w, r9.y
 118:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t1.xxxx, s1, r7.z
 119:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t1.xxxx, s1, r7.z
 120:   mul r7.y, r7.y, r14.y
 121:   mad r7.x, r14.x, r7.x, r7.y
 122:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t1.xxxx, s1, r7.z
 123:   mad r7.x, r14.z, r7.y, r7.x
 124:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t1.xxxx, s1, r7.z
 125:   mad r7.x, r14.w, r7.y, r7.x
 126:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t1.xxxx, s1, r7.z
 127:   mad r7.x, r15.x, r7.y, r7.x
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t1.xxxx, s1, r7.z
 129:   mad r7.x, r15.y, r7.y, r7.x
 130:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t1.xxxx, s1, r7.z
 131:   mad r7.x, r15.z, r7.y, r7.x
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t1.xxxx, s1, r7.z
 133:   mad r7.x, r15.w, r7.y, r7.x
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t1.xxxx, s1, r7.z
 135:   mad r6.w, r6.w, r7.y, r7.x
 136:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 137:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 138:   ge r7.x, l(0.000000), r7.z
 139:   ge r7.y, r7.z, l(1.000000)
 140:   or r7.x, r7.y, r7.x
 141:   movc r6.w, r7.x, l(1.000000), r6.w
 142:   add r7.x, -r6.w, l(1.000000)
 143:   mad r6.w, r1.w, r7.x, r6.w
 144:   mul r4.w, r4.w, r6.w
 145:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 146:   mul r4.w, r4.w, r6.w
 147:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 148:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 149:   dp3 r3.w, r5.xyzx, r5.xyzx
 150:   max r3.w, r3.w, l(0.000000)
 151:   rsq r3.w, r3.w
 152:   mul r5.xyz, r3.wwww, r5.xyzx
 153:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 154:   mul r3.w, r3.w, r3.w
 155:   max r3.w, r3.w, l(0.100000)
 156:   mul r3.w, r3.w, l(6.000120)
 157:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 158:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 159:   iadd r2.w, r2.w, l(1)
 160: endloop 
 161: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 162: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t1.xxxx, s1, r7.z
  73:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
  74:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
  75:   ge r7.x, l(0.000000), r7.z
  76:   ge r7.y, r7.z, l(1.000000)
  77:   or r7.x, r7.y, r7.x
  78:   movc r6.w, r7.x, l(1.000000), r6.w
  79:   add r7.x, -r6.w, l(1.000000)
  80:   mad r6.w, r1.w, r7.x, r6.w
  81:   mul r4.w, r4.w, r6.w
  82:   dp3_sat r6.w, r1.xyzx, r6.xyzx
  83:   mul r4.w, r4.w, r6.w
  84:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
  85:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  86:   dp3 r3.w, r5.xyzx, r5.xyzx
  87:   max r3.w, r3.w, l(0.000000)
  88:   rsq r3.w, r3.w
  89:   mul r5.xyz, r3.wwww, r5.xyzx
  90:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  91:   mul r3.w, r3.w, r3.w
  92:   max r3.w, r3.w, l(0.100000)
  93:   mul r3.w, r3.w, l(6.000120)
  94:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  95:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  96:   iadd r2.w, r2.w, l(1)
  97: endloop 
  98: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  73:   round_ni r8.xy, r8.xyxx
  74:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  75:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  76:   mul r10.xyzw, r9.xxzz, r9.xxzz
  77:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  78:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  79:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  81:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  82:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  83:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  84:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  85:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  86:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  87:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  88:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  89:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  90:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  91:   mov r11.z, r10.x
  92:   mov r11.w, r7.x
  93:   mov r12.z, r13.x
  94:   mov r12.w, r8.z
  95:   add r9.xyzw, r11.zwxz, r12.zwxz
  96:   mov r10.z, r11.y
  97:   mov r10.w, r7.y
  98:   mov r13.z, r12.y
  99:   mov r13.w, r8.w
 100:   add r7.xyw, r10.zyzw, r13.zyzw
 101:   div r10.xyz, r12.xzwx, r9.zwyz
 102:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 103:   div r11.xyz, r13.zywz, r7.xywx
 104:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 105:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 106:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 107:   mov r10.w, r11.x
 108:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 109:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 110:   mov r11.w, r10.y
 111:   mov r10.yw, r11.yyyz
 112:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 113:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 114:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 115:   mul r14.xyzw, r7.xxxy, r9.zwyz
 116:   mul r15.xyzw, r7.yyww, r9.xyzw
 117:   mul r6.w, r7.w, r9.y
 118:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t1.xxxx, s1, r7.z
 119:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t1.xxxx, s1, r7.z
 120:   mul r7.y, r7.y, r14.y
 121:   mad r7.x, r14.x, r7.x, r7.y
 122:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t1.xxxx, s1, r7.z
 123:   mad r7.x, r14.z, r7.y, r7.x
 124:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t1.xxxx, s1, r7.z
 125:   mad r7.x, r14.w, r7.y, r7.x
 126:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t1.xxxx, s1, r7.z
 127:   mad r7.x, r15.x, r7.y, r7.x
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t1.xxxx, s1, r7.z
 129:   mad r7.x, r15.y, r7.y, r7.x
 130:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t1.xxxx, s1, r7.z
 131:   mad r7.x, r15.z, r7.y, r7.x
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t1.xxxx, s1, r7.z
 133:   mad r7.x, r15.w, r7.y, r7.x
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t1.xxxx, s1, r7.z
 135:   mad r6.w, r6.w, r7.y, r7.x
 136:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 137:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 138:   ge r7.x, l(0.000000), r7.z
 139:   ge r7.y, r7.z, l(1.000000)
 140:   or r7.x, r7.y, r7.x
 141:   movc r6.w, r7.x, l(1.000000), r6.w
 142:   add r7.x, -r6.w, l(1.000000)
 143:   mad r6.w, r1.w, r7.x, r6.w
 144:   mul r4.w, r4.w, r6.w
 145:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 146:   mul r4.w, r4.w, r6.w
 147:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 148:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 149:   dp3 r3.w, r5.xyzx, r5.xyzx
 150:   max r3.w, r3.w, l(0.000000)
 151:   rsq r3.w, r3.w
 152:   mul r5.xyz, r3.wwww, r5.xyzx
 153:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 154:   mul r3.w, r3.w, r3.w
 155:   max r3.w, r3.w, l(0.100000)
 156:   mul r3.w, r3.w, l(6.000120)
 157:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 158:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 159:   iadd r2.w, r2.w, l(1)
 160: endloop 
 161: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 162: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb4[1].w
   9: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  10: add r2.w, -cb3[29].x, l(1.000000)
  11: mad r1.w, r1.w, cb3[29].x, r2.w
  12: ge r2.w, l(0.000000), v7.z
  13: ge r3.x, v7.z, l(1.000000)
  14: or r2.w, r2.w, r3.x
  15: movc r1.w, r2.w, l(1.000000), r1.w
  16: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  17: dp3 r2.w, r3.xyzx, r3.xyzx
  18: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  19: mul r2.w, r2.w, r2.w
  20: add r3.x, -r1.w, l(1.000000)
  21: mad r1.w, r2.w, r3.x, r1.w
  22: dp3 r2.w, -r2.xyzx, r1.xyzx
  23: add r2.w, r2.w, r2.w
  24: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  25: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  26: add r2.w, r3.w, l(-1.000000)
  27: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  28: max r2.w, r2.w, l(0.000000)
  29: log r2.w, r2.w
  30: mul r2.w, r2.w, cb2[14].y
  31: exp r2.w, r2.w
  32: mul r2.w, r2.w, cb2[14].x
  33: mul r3.xyz, r3.xyzx, r2.wwww
  34: mul r1.w, r1.w, cb2[10].z
  35: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  36: mul r1.w, r1.w, r2.w
  37: mul r4.xyz, r1.wwww, cb0[4].xyzx
  38: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  39: dp3 r0.w, r5.xyzx, r5.xyzx
  40: max r0.w, r0.w, l(0.000000)
  41: rsq r0.w, r0.w
  42: mul r5.xyz, r0.wwww, r5.xyzx
  43: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  44: mul r0.w, r0.w, r0.w
  45: max r0.w, r0.w, l(0.100000)
  46: mul r0.w, r0.w, l(6.000120)
  47: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  48: mul r4.xyz, r4.xyzx, r0.wwww
  49: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  50: min r0.w, cb0[7].x, cb2[10].y
  51: ftoi r0.w, r0.w
  52: mov r4.xyz, r3.xyzx
  53: mov r1.w, l(0)
  54: loop 
  55:   uge r2.w, r1.w, r0.w
  56:   breakc_nz r2.w
  57:   and r2.w, r1.w, l(3)
  58:   ushr r3.w, r1.w, l(2)
  59:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  60:   ftoi r2.w, r2.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  62:   dp3 r3.w, r5.xyzx, r5.xyzx
  63:   max r3.w, r3.w, l(0.000061)
  64:   rsq r4.w, r3.w
  65:   mul r6.xyz, r4.wwww, r5.xyzx
  66:   rcp r5.w, r3.w
  67:   mul r3.w, r3.w, cb1[r2.w + 512].x
  68:   mad r3.w, -r3.w, r3.w, l(1.000000)
  69:   max r3.w, r3.w, l(0.000000)
  70:   mul r3.w, r3.w, r3.w
  71:   mul r3.w, r3.w, r5.w
  72:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  73:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  74:   mul r5.w, r5.w, r5.w
  75:   mul r3.w, r3.w, r5.w
  76:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  77:   mul r3.w, r3.w, r5.w
  78:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  79:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  80:   dp3 r2.w, r5.xyzx, r5.xyzx
  81:   max r2.w, r2.w, l(0.000000)
  82:   rsq r2.w, r2.w
  83:   mul r5.xyz, r2.wwww, r5.xyzx
  84:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  85:   mul r2.w, r2.w, r2.w
  86:   max r2.w, r2.w, l(0.100000)
  87:   mul r2.w, r2.w, l(6.000120)
  88:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  89:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  90:   iadd r1.w, r1.w, l(1)
  91: endloop 
  92: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 12 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb4[1].w
   9: mad r3.xy, v7.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: round_ni r3.xy, r3.xyxx
  11: mad r3.zw, v7.xxxy, cb3[30].zzzw, -r3.xxxy
  12: add r4.xyzw, r3.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  13: mul r5.xyzw, r4.xxzz, r4.xxzz
  14: mul r4.xz, r5.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  15: mad r5.xy, r5.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.zwzz
  16: add r5.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  17: min r6.xy, r3.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  18: mad r6.xy, -r6.xyxx, r6.xyxx, r5.zwzz
  19: max r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  20: mad r3.zw, -r3.zzzw, r3.zzzw, r4.yyyw
  21: add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  22: add r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  23: mul r7.xy, r5.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  24: mul r5.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  25: mul r6.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  26: mul r8.xy, r3.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  27: mul r3.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  28: mov r7.z, r6.x
  29: mov r7.w, r3.z
  30: mov r5.z, r8.x
  31: mov r5.w, r4.x
  32: add r9.xyzw, r5.zwxz, r7.zwxz
  33: mov r6.z, r7.y
  34: mov r6.w, r3.w
  35: mov r8.z, r5.y
  36: mov r8.w, r4.z
  37: add r4.xyz, r6.zywz, r8.zywz
  38: div r5.xyz, r5.xzwx, r9.zwyz
  39: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  40: div r6.xyz, r8.zywz, r4.xyzx
  41: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  42: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  43: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  44: mov r5.w, r6.x
  45: mad r7.xyzw, r3.xyxy, cb3[30].xyxy, r5.ywxw
  46: mad r3.zw, r3.xxxy, cb3[30].xxxy, r5.zzzw
  47: mov r6.w, r5.y
  48: mov r5.yw, r6.yyyz
  49: mad r8.xyzw, r3.xyxy, cb3[30].xyxy, r5.xyzy
  50: mad r6.xyzw, r3.xyxy, cb3[30].xyxy, r6.wywz
  51: mad r5.xyzw, r3.xyxy, cb3[30].xyxy, r5.xwzw
  52: mul r10.xyzw, r4.xxxy, r9.zwyz
  53: mul r11.xyzw, r4.yyzz, r9.xyzw
  54: mul r1.w, r4.z, r9.y
  55: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, v7.z
  56: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, v7.z
  57: mul r3.x, r3.x, r10.y
  58: mad r2.w, r10.x, r2.w, r3.x
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r2.w, r10.z, r3.x, r2.w
  61: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, v7.z
  62: mad r2.w, r10.w, r3.x, r2.w
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.x, r3.x, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.y, r3.x, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, v7.z
  68: mad r2.w, r11.z, r3.x, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, v7.z
  70: mad r2.w, r11.w, r3.x, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, v7.z
  72: mad r1.w, r1.w, r3.x, r2.w
  73: add r2.w, -cb3[29].x, l(1.000000)
  74: mad r1.w, r1.w, cb3[29].x, r2.w
  75: ge r2.w, l(0.000000), v7.z
  76: ge r3.x, v7.z, l(1.000000)
  77: or r2.w, r2.w, r3.x
  78: movc r1.w, r2.w, l(1.000000), r1.w
  79: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  80: dp3 r2.w, r3.xyzx, r3.xyzx
  81: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  82: mul r2.w, r2.w, r2.w
  83: add r3.x, -r1.w, l(1.000000)
  84: mad r1.w, r2.w, r3.x, r1.w
  85: dp3 r2.w, -r2.xyzx, r1.xyzx
  86: add r2.w, r2.w, r2.w
  87: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  88: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  89: add r2.w, r3.w, l(-1.000000)
  90: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  91: max r2.w, r2.w, l(0.000000)
  92: log r2.w, r2.w
  93: mul r2.w, r2.w, cb2[14].y
  94: exp r2.w, r2.w
  95: mul r2.w, r2.w, cb2[14].x
  96: mul r3.xyz, r3.xyzx, r2.wwww
  97: mul r1.w, r1.w, cb2[10].z
  98: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  99: mul r1.w, r1.w, r2.w
 100: mul r4.xyz, r1.wwww, cb0[4].xyzx
 101: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 102: dp3 r0.w, r5.xyzx, r5.xyzx
 103: max r0.w, r0.w, l(0.000000)
 104: rsq r0.w, r0.w
 105: mul r5.xyz, r0.wwww, r5.xyzx
 106: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 107: mul r0.w, r0.w, r0.w
 108: max r0.w, r0.w, l(0.100000)
 109: mul r0.w, r0.w, l(6.000120)
 110: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 111: mul r4.xyz, r4.xyzx, r0.wwww
 112: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 113: min r0.w, cb0[7].x, cb2[10].y
 114: ftoi r0.w, r0.w
 115: mov r4.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.w
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r5.xyzx, r5.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r6.xyz, r4.wwww, r5.xyzx
 129:   rcp r5.w, r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   dp3_sat r5.w, r1.xyzx, r6.xyzx
 140:   mul r3.w, r3.w, r5.w
 141:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 142:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
 143:   dp3 r2.w, r5.xyzx, r5.xyzx
 144:   max r2.w, r2.w, l(0.000000)
 145:   rsq r2.w, r2.w
 146:   mul r5.xyz, r2.wwww, r5.xyzx
 147:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 148:   mul r2.w, r2.w, r2.w
 149:   max r2.w, r2.w, l(0.100000)
 150:   mul r2.w, r2.w, l(6.000120)
 151:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 152:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 153:   iadd r1.w, r1.w, l(1)
 154: endloop 
 155: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 95 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  10: add r2.w, -cb3[29].x, l(1.000000)
  11: mad r1.w, r1.w, cb3[29].x, r2.w
  12: ge r2.w, l(0.000000), v7.z
  13: ge r3.x, v7.z, l(1.000000)
  14: or r2.w, r2.w, r3.x
  15: movc r1.w, r2.w, l(1.000000), r1.w
  16: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  17: dp3 r2.w, r3.xyzx, r3.xyzx
  18: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  19: mul r2.w, r2.w, r2.w
  20: add r3.x, -r1.w, l(1.000000)
  21: mad r1.w, r2.w, r3.x, r1.w
  22: dp3 r3.x, -r2.xyzx, r1.xyzx
  23: add r3.x, r3.x, r3.x
  24: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  25: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  26: add r3.w, r3.w, l(-1.000000)
  27: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  28: max r3.w, r3.w, l(0.000000)
  29: log r3.w, r3.w
  30: mul r3.w, r3.w, cb2[14].y
  31: exp r3.w, r3.w
  32: mul r3.w, r3.w, cb2[14].x
  33: mul r3.xyz, r3.xyzx, r3.wwww
  34: mul r1.w, r1.w, cb2[10].z
  35: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
  36: mul r1.w, r1.w, r3.w
  37: mul r4.xyz, r1.wwww, cb0[4].xyzx
  38: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  39: dp3 r0.w, r5.xyzx, r5.xyzx
  40: max r0.w, r0.w, l(0.000000)
  41: rsq r0.w, r0.w
  42: mul r5.xyz, r0.wwww, r5.xyzx
  43: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  44: mul r0.w, r0.w, r0.w
  45: max r0.w, r0.w, l(0.100000)
  46: mul r0.w, r0.w, l(6.000120)
  47: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  48: mul r4.xyz, r4.xyzx, r0.wwww
  49: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  50: min r0.w, cb0[7].x, cb2[10].y
  51: ftoi r0.w, r0.w
  52: mov r4.xyz, r3.xyzx
  53: mov r1.w, l(0)
  54: loop 
  55:   uge r3.w, r1.w, r0.w
  56:   breakc_nz r3.w
  57:   and r3.w, r1.w, l(3)
  58:   ushr r4.w, r1.w, l(2)
  59:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  60:   ftoi r3.w, r3.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  62:   dp3 r4.w, r5.xyzx, r5.xyzx
  63:   max r4.w, r4.w, l(0.000061)
  64:   rsq r5.w, r4.w
  65:   mul r6.xyz, r5.wwww, r5.xyzx
  66:   rcp r6.w, r4.w
  67:   mul r4.w, r4.w, cb1[r3.w + 512].x
  68:   mad r4.w, -r4.w, r4.w, l(1.000000)
  69:   max r4.w, r4.w, l(0.000000)
  70:   mul r4.w, r4.w, r4.w
  71:   mul r4.w, r4.w, r6.w
  72:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  73:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  74:   mul r6.w, r6.w, r6.w
  75:   mul r4.w, r4.w, r6.w
  76:   ishl r6.w, r3.w, l(2)
  77:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  78:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  79:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  80:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t2.xxxx, s2, r7.z
  83:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
  84:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
  85:   ge r7.x, l(0.000000), r7.z
  86:   ge r7.y, r7.z, l(1.000000)
  87:   or r7.x, r7.y, r7.x
  88:   movc r6.w, r7.x, l(1.000000), r6.w
  89:   add r7.x, -r6.w, l(1.000000)
  90:   mad r6.w, r2.w, r7.x, r6.w
  91:   mul r4.w, r4.w, r6.w
  92:   dp3_sat r6.w, r1.xyzx, r6.xyzx
  93:   mul r4.w, r4.w, r6.w
  94:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
  95:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  96:   dp3 r3.w, r5.xyzx, r5.xyzx
  97:   max r3.w, r3.w, l(0.000000)
  98:   rsq r3.w, r3.w
  99:   mul r5.xyz, r3.wwww, r5.xyzx
 100:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 101:   mul r3.w, r3.w, r3.w
 102:   max r3.w, r3.w, l(0.100000)
 103:   mul r3.w, r3.w, l(6.000120)
 104:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 105:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 106:   iadd r1.w, r1.w, l(1)
 107: endloop 
 108: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 183 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: mad r3.xy, v7.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: round_ni r3.xy, r3.xyxx
  11: mad r3.zw, v7.xxxy, cb3[30].zzzw, -r3.xxxy
  12: add r4.xyzw, r3.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  13: mul r5.xyzw, r4.xxzz, r4.xxzz
  14: mul r4.xz, r5.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  15: mad r5.xy, r5.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.zwzz
  16: add r5.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  17: min r6.xy, r3.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  18: mad r6.xy, -r6.xyxx, r6.xyxx, r5.zwzz
  19: max r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  20: mad r3.zw, -r3.zzzw, r3.zzzw, r4.yyyw
  21: add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  22: add r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  23: mul r7.xy, r5.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  24: mul r5.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  25: mul r6.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  26: mul r8.xy, r3.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  27: mul r3.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  28: mov r7.z, r6.x
  29: mov r7.w, r3.z
  30: mov r5.z, r8.x
  31: mov r5.w, r4.x
  32: add r9.xyzw, r5.zwxz, r7.zwxz
  33: mov r6.z, r7.y
  34: mov r6.w, r3.w
  35: mov r8.z, r5.y
  36: mov r8.w, r4.z
  37: add r4.xyz, r6.zywz, r8.zywz
  38: div r5.xyz, r5.xzwx, r9.zwyz
  39: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  40: div r6.xyz, r8.zywz, r4.xyzx
  41: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  42: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  43: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  44: mov r5.w, r6.x
  45: mad r7.xyzw, r3.xyxy, cb3[30].xyxy, r5.ywxw
  46: mad r3.zw, r3.xxxy, cb3[30].xxxy, r5.zzzw
  47: mov r6.w, r5.y
  48: mov r5.yw, r6.yyyz
  49: mad r8.xyzw, r3.xyxy, cb3[30].xyxy, r5.xyzy
  50: mad r6.xyzw, r3.xyxy, cb3[30].xyxy, r6.wywz
  51: mad r5.xyzw, r3.xyxy, cb3[30].xyxy, r5.xwzw
  52: mul r10.xyzw, r4.xxxy, r9.zwyz
  53: mul r11.xyzw, r4.yyzz, r9.xyzw
  54: mul r1.w, r4.z, r9.y
  55: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, v7.z
  56: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, v7.z
  57: mul r3.x, r3.x, r10.y
  58: mad r2.w, r10.x, r2.w, r3.x
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r2.w, r10.z, r3.x, r2.w
  61: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, v7.z
  62: mad r2.w, r10.w, r3.x, r2.w
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.x, r3.x, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.y, r3.x, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, v7.z
  68: mad r2.w, r11.z, r3.x, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, v7.z
  70: mad r2.w, r11.w, r3.x, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, v7.z
  72: mad r1.w, r1.w, r3.x, r2.w
  73: add r2.w, -cb3[29].x, l(1.000000)
  74: mad r1.w, r1.w, cb3[29].x, r2.w
  75: ge r2.w, l(0.000000), v7.z
  76: ge r3.x, v7.z, l(1.000000)
  77: or r2.w, r2.w, r3.x
  78: movc r1.w, r2.w, l(1.000000), r1.w
  79: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  80: dp3 r2.w, r3.xyzx, r3.xyzx
  81: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  82: mul r2.w, r2.w, r2.w
  83: add r3.x, -r1.w, l(1.000000)
  84: mad r1.w, r2.w, r3.x, r1.w
  85: dp3 r3.x, -r2.xyzx, r1.xyzx
  86: add r3.x, r3.x, r3.x
  87: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  88: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  89: add r3.w, r3.w, l(-1.000000)
  90: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  91: max r3.w, r3.w, l(0.000000)
  92: log r3.w, r3.w
  93: mul r3.w, r3.w, cb2[14].y
  94: exp r3.w, r3.w
  95: mul r3.w, r3.w, cb2[14].x
  96: mul r3.xyz, r3.xyzx, r3.wwww
  97: mul r1.w, r1.w, cb2[10].z
  98: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
  99: mul r1.w, r1.w, r3.w
 100: mul r4.xyz, r1.wwww, cb0[4].xyzx
 101: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 102: dp3 r0.w, r5.xyzx, r5.xyzx
 103: max r0.w, r0.w, l(0.000000)
 104: rsq r0.w, r0.w
 105: mul r5.xyz, r0.wwww, r5.xyzx
 106: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 107: mul r0.w, r0.w, r0.w
 108: max r0.w, r0.w, l(0.100000)
 109: mul r0.w, r0.w, l(6.000120)
 110: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 111: mul r4.xyz, r4.xyzx, r0.wwww
 112: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 113: min r0.w, cb0[7].x, cb2[10].y
 114: ftoi r0.w, r0.w
 115: mov r4.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r3.w, r1.w, r0.w
 119:   breakc_nz r3.w
 120:   and r3.w, r1.w, l(3)
 121:   ushr r4.w, r1.w, l(2)
 122:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
 123:   ftoi r3.w, r3.w
 124:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
 125:   dp3 r4.w, r5.xyzx, r5.xyzx
 126:   max r4.w, r4.w, l(0.000061)
 127:   rsq r5.w, r4.w
 128:   mul r6.xyz, r5.wwww, r5.xyzx
 129:   rcp r6.w, r4.w
 130:   mul r4.w, r4.w, cb1[r3.w + 512].x
 131:   mad r4.w, -r4.w, r4.w, l(1.000000)
 132:   max r4.w, r4.w, l(0.000000)
 133:   mul r4.w, r4.w, r4.w
 134:   mul r4.w, r4.w, r6.w
 135:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
 136:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
 137:   mul r6.w, r6.w, r6.w
 138:   mul r4.w, r4.w, r6.w
 139:   ishl r6.w, r3.w, l(2)
 140:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
 141:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
 142:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
 143:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
 144:   div r7.xyz, r7.xyzx, r7.wwww
 145:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 146:   round_ni r8.xy, r8.xyxx
 147:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 148:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 149:   mul r10.xyzw, r9.xxzz, r9.xxzz
 150:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 151:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 152:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 153:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 154:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 155:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 156:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 157:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 158:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 159:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 160:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 161:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 162:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 163:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 164:   mov r11.z, r10.x
 165:   mov r11.w, r7.x
 166:   mov r12.z, r13.x
 167:   mov r12.w, r8.z
 168:   add r9.xyzw, r11.zwxz, r12.zwxz
 169:   mov r10.z, r11.y
 170:   mov r10.w, r7.y
 171:   mov r13.z, r12.y
 172:   mov r13.w, r8.w
 173:   add r7.xyw, r10.zyzw, r13.zyzw
 174:   div r10.xyz, r12.xzwx, r9.zwyz
 175:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 176:   div r11.xyz, r13.zywz, r7.xywx
 177:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 178:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 179:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 180:   mov r10.w, r11.x
 181:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 182:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 183:   mov r11.w, r10.y
 184:   mov r10.yw, r11.yyyz
 185:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 186:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 187:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 188:   mul r14.xyzw, r7.xxxy, r9.zwyz
 189:   mul r15.xyzw, r7.yyww, r9.xyzw
 190:   mul r6.w, r7.w, r9.y
 191:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t2.xxxx, s2, r7.z
 192:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t2.xxxx, s2, r7.z
 193:   mul r7.y, r7.y, r14.y
 194:   mad r7.x, r14.x, r7.x, r7.y
 195:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t2.xxxx, s2, r7.z
 196:   mad r7.x, r14.z, r7.y, r7.x
 197:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t2.xxxx, s2, r7.z
 198:   mad r7.x, r14.w, r7.y, r7.x
 199:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t2.xxxx, s2, r7.z
 200:   mad r7.x, r15.x, r7.y, r7.x
 201:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t2.xxxx, s2, r7.z
 202:   mad r7.x, r15.y, r7.y, r7.x
 203:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t2.xxxx, s2, r7.z
 204:   mad r7.x, r15.z, r7.y, r7.x
 205:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t2.xxxx, s2, r7.z
 206:   mad r7.x, r15.w, r7.y, r7.x
 207:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t2.xxxx, s2, r7.z
 208:   mad r6.w, r6.w, r7.y, r7.x
 209:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 210:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 211:   ge r7.x, l(0.000000), r7.z
 212:   ge r7.y, r7.z, l(1.000000)
 213:   or r7.x, r7.y, r7.x
 214:   movc r6.w, r7.x, l(1.000000), r6.w
 215:   add r7.x, -r6.w, l(1.000000)
 216:   mad r6.w, r2.w, r7.x, r6.w
 217:   mul r4.w, r4.w, r6.w
 218:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 219:   mul r4.w, r4.w, r6.w
 220:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 221:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 222:   dp3 r3.w, r5.xyzx, r5.xyzx
 223:   max r3.w, r3.w, l(0.000000)
 224:   rsq r3.w, r3.w
 225:   mul r5.xyz, r3.wwww, r5.xyzx
 226:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 227:   mul r3.w, r3.w, r3.w
 228:   max r3.w, r3.w, l(0.100000)
 229:   mul r3.w, r3.w, l(6.000120)
 230:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 231:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 232:   iadd r1.w, r1.w, l(1)
 233: endloop 
 234: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 235: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb4[1].w
  30: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  31: add r2.w, -cb3[29].x, l(1.000000)
  32: mad r1.w, r1.w, cb3[29].x, r2.w
  33: ge r2.w, l(0.000000), r3.z
  34: ge r3.x, r3.z, l(1.000000)
  35: or r2.w, r2.w, r3.x
  36: movc r1.w, r2.w, l(1.000000), r1.w
  37: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  38: dp3 r2.w, r3.xyzx, r3.xyzx
  39: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  40: mul r2.w, r2.w, r2.w
  41: add r3.x, -r1.w, l(1.000000)
  42: mad r1.w, r2.w, r3.x, r1.w
  43: dp3 r2.w, -r2.xyzx, r1.xyzx
  44: add r2.w, r2.w, r2.w
  45: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  46: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  47: add r2.w, r3.w, l(-1.000000)
  48: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  49: max r2.w, r2.w, l(0.000000)
  50: log r2.w, r2.w
  51: mul r2.w, r2.w, cb2[14].y
  52: exp r2.w, r2.w
  53: mul r2.w, r2.w, cb2[14].x
  54: mul r3.xyz, r3.xyzx, r2.wwww
  55: mul r1.w, r1.w, cb2[10].z
  56: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  57: mul r1.w, r1.w, r2.w
  58: mul r4.xyz, r1.wwww, cb0[4].xyzx
  59: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  60: dp3 r0.w, r5.xyzx, r5.xyzx
  61: max r0.w, r0.w, l(0.000000)
  62: rsq r0.w, r0.w
  63: mul r5.xyz, r0.wwww, r5.xyzx
  64: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  65: mul r0.w, r0.w, r0.w
  66: max r0.w, r0.w, l(0.100000)
  67: mul r0.w, r0.w, l(6.000120)
  68: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  69: mul r4.xyz, r4.xyzx, r0.wwww
  70: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  71: min r0.w, cb0[7].x, cb2[10].y
  72: ftoi r0.w, r0.w
  73: mov r4.xyz, r3.xyzx
  74: mov r1.w, l(0)
  75: loop 
  76:   uge r2.w, r1.w, r0.w
  77:   breakc_nz r2.w
  78:   and r2.w, r1.w, l(3)
  79:   ushr r3.w, r1.w, l(2)
  80:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  81:   ftoi r2.w, r2.w
  82:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  83:   dp3 r3.w, r5.xyzx, r5.xyzx
  84:   max r3.w, r3.w, l(0.000061)
  85:   rsq r4.w, r3.w
  86:   mul r6.xyz, r4.wwww, r5.xyzx
  87:   rcp r5.w, r3.w
  88:   mul r3.w, r3.w, cb1[r2.w + 512].x
  89:   mad r3.w, -r3.w, r3.w, l(1.000000)
  90:   max r3.w, r3.w, l(0.000000)
  91:   mul r3.w, r3.w, r3.w
  92:   mul r3.w, r3.w, r5.w
  93:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  94:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  95:   mul r5.w, r5.w, r5.w
  96:   mul r3.w, r3.w, r5.w
  97:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  98:   mul r3.w, r3.w, r5.w
  99:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 100:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
 101:   dp3 r2.w, r5.xyzx, r5.xyzx
 102:   max r2.w, r2.w, l(0.000000)
 103:   rsq r2.w, r2.w
 104:   mul r5.xyz, r2.wwww, r5.xyzx
 105:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 106:   mul r2.w, r2.w, r2.w
 107:   max r2.w, r2.w, l(0.100000)
 108:   mul r2.w, r2.w, l(6.000120)
 109:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 110:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 111:   iadd r1.w, r1.w, l(1)
 112: endloop 
 113: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 114: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 12 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb4[1].w
  30: mad r4.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  31: round_ni r4.xy, r4.xyxx
  32: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.xyxx
  33: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  34: mul r6.xyzw, r5.xxzz, r5.xxzz
  35: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  36: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  37: add r6.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  38: min r6.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  40: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  42: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  43: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  44: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  45: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  46: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  47: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  48: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mov r7.z, r6.x
  50: mov r7.w, r3.x
  51: mov r8.z, r9.x
  52: mov r8.w, r4.z
  53: add r5.xyzw, r7.zwxz, r8.zwxz
  54: mov r6.z, r7.y
  55: mov r6.w, r3.y
  56: mov r9.z, r8.y
  57: mov r9.w, r4.w
  58: add r3.xyw, r6.zyzw, r9.zyzw
  59: div r6.xyz, r8.xzwx, r5.zwyz
  60: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  61: div r7.xyz, r9.zywz, r3.xywx
  62: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  63: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  64: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  65: mov r6.w, r7.x
  66: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  67: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  68: mov r7.w, r6.y
  69: mov r6.yw, r7.yyyz
  70: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  71: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  72: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  73: mul r10.xyzw, r3.xxxy, r5.zwyz
  74: mul r11.xyzw, r3.yyww, r5.xyzw
  75: mul r1.w, r3.w, r5.y
  76: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, r3.z
  77: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, r3.z
  78: mul r3.x, r3.x, r10.y
  79: mad r2.w, r10.x, r2.w, r3.x
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t1.xxxx, s1, r3.z
  81: mad r2.w, r10.z, r3.x, r2.w
  82: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.xyxx, t1.xxxx, s1, r3.z
  83: mad r2.w, r10.w, r3.x, r2.w
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.x, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.y, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  89: mad r2.w, r11.z, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  91: mad r2.w, r11.w, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r1.w, r1.w, r3.x, r2.w
  94: add r2.w, -cb3[29].x, l(1.000000)
  95: mad r1.w, r1.w, cb3[29].x, r2.w
  96: ge r2.w, l(0.000000), r3.z
  97: ge r3.x, r3.z, l(1.000000)
  98: or r2.w, r2.w, r3.x
  99: movc r1.w, r2.w, l(1.000000), r1.w
 100: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 101: dp3 r2.w, r3.xyzx, r3.xyzx
 102: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 103: mul r2.w, r2.w, r2.w
 104: add r3.x, -r1.w, l(1.000000)
 105: mad r1.w, r2.w, r3.x, r1.w
 106: dp3 r2.w, -r2.xyzx, r1.xyzx
 107: add r2.w, r2.w, r2.w
 108: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 109: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
 110: add r2.w, r3.w, l(-1.000000)
 111: mad r2.w, cb2[14].w, r2.w, l(1.000000)
 112: max r2.w, r2.w, l(0.000000)
 113: log r2.w, r2.w
 114: mul r2.w, r2.w, cb2[14].y
 115: exp r2.w, r2.w
 116: mul r2.w, r2.w, cb2[14].x
 117: mul r3.xyz, r3.xyzx, r2.wwww
 118: mul r1.w, r1.w, cb2[10].z
 119: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 120: mul r1.w, r1.w, r2.w
 121: mul r4.xyz, r1.wwww, cb0[4].xyzx
 122: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 123: dp3 r0.w, r5.xyzx, r5.xyzx
 124: max r0.w, r0.w, l(0.000000)
 125: rsq r0.w, r0.w
 126: mul r5.xyz, r0.wwww, r5.xyzx
 127: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 128: mul r0.w, r0.w, r0.w
 129: max r0.w, r0.w, l(0.100000)
 130: mul r0.w, r0.w, l(6.000120)
 131: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 132: mul r4.xyz, r4.xyzx, r0.wwww
 133: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 134: min r0.w, cb0[7].x, cb2[10].y
 135: ftoi r0.w, r0.w
 136: mov r4.xyz, r3.xyzx
 137: mov r1.w, l(0)
 138: loop 
 139:   uge r2.w, r1.w, r0.w
 140:   breakc_nz r2.w
 141:   and r2.w, r1.w, l(3)
 142:   ushr r3.w, r1.w, l(2)
 143:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 144:   ftoi r2.w, r2.w
 145:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 146:   dp3 r3.w, r5.xyzx, r5.xyzx
 147:   max r3.w, r3.w, l(0.000061)
 148:   rsq r4.w, r3.w
 149:   mul r6.xyz, r4.wwww, r5.xyzx
 150:   rcp r5.w, r3.w
 151:   mul r3.w, r3.w, cb1[r2.w + 512].x
 152:   mad r3.w, -r3.w, r3.w, l(1.000000)
 153:   max r3.w, r3.w, l(0.000000)
 154:   mul r3.w, r3.w, r3.w
 155:   mul r3.w, r3.w, r5.w
 156:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
 157:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 158:   mul r5.w, r5.w, r5.w
 159:   mul r3.w, r3.w, r5.w
 160:   dp3_sat r5.w, r1.xyzx, r6.xyzx
 161:   mul r3.w, r3.w, r5.w
 162:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 163:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
 164:   dp3 r2.w, r5.xyzx, r5.xyzx
 165:   max r2.w, r2.w, l(0.000000)
 166:   rsq r2.w, r2.w
 167:   mul r5.xyz, r2.wwww, r5.xyzx
 168:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 169:   mul r2.w, r2.w, r2.w
 170:   max r2.w, r2.w, l(0.100000)
 171:   mul r2.w, r2.w, l(6.000120)
 172:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 173:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 174:   iadd r1.w, r1.w, l(1)
 175: endloop 
 176: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb5[1].w
  30: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  31: add r2.w, -cb3[29].x, l(1.000000)
  32: mad r1.w, r1.w, cb3[29].x, r2.w
  33: ge r2.w, l(0.000000), r3.z
  34: ge r3.x, r3.z, l(1.000000)
  35: or r2.w, r2.w, r3.x
  36: movc r1.w, r2.w, l(1.000000), r1.w
  37: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  38: dp3 r2.w, r3.xyzx, r3.xyzx
  39: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  40: mul r2.w, r2.w, r2.w
  41: add r3.x, -r1.w, l(1.000000)
  42: mad r1.w, r2.w, r3.x, r1.w
  43: dp3 r3.x, -r2.xyzx, r1.xyzx
  44: add r3.x, r3.x, r3.x
  45: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  46: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  47: add r3.w, r3.w, l(-1.000000)
  48: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  49: max r3.w, r3.w, l(0.000000)
  50: log r3.w, r3.w
  51: mul r3.w, r3.w, cb2[14].y
  52: exp r3.w, r3.w
  53: mul r3.w, r3.w, cb2[14].x
  54: mul r3.xyz, r3.xyzx, r3.wwww
  55: mul r1.w, r1.w, cb2[10].z
  56: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
  57: mul r1.w, r1.w, r3.w
  58: mul r4.xyz, r1.wwww, cb0[4].xyzx
  59: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  60: dp3 r0.w, r5.xyzx, r5.xyzx
  61: max r0.w, r0.w, l(0.000000)
  62: rsq r0.w, r0.w
  63: mul r5.xyz, r0.wwww, r5.xyzx
  64: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  65: mul r0.w, r0.w, r0.w
  66: max r0.w, r0.w, l(0.100000)
  67: mul r0.w, r0.w, l(6.000120)
  68: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  69: mul r4.xyz, r4.xyzx, r0.wwww
  70: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  71: min r0.w, cb0[7].x, cb2[10].y
  72: ftoi r0.w, r0.w
  73: mov r4.xyz, r3.xyzx
  74: mov r1.w, l(0)
  75: loop 
  76:   uge r3.w, r1.w, r0.w
  77:   breakc_nz r3.w
  78:   and r3.w, r1.w, l(3)
  79:   ushr r4.w, r1.w, l(2)
  80:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  81:   ftoi r3.w, r3.w
  82:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  83:   dp3 r4.w, r5.xyzx, r5.xyzx
  84:   max r4.w, r4.w, l(0.000061)
  85:   rsq r5.w, r4.w
  86:   mul r6.xyz, r5.wwww, r5.xyzx
  87:   rcp r6.w, r4.w
  88:   mul r4.w, r4.w, cb1[r3.w + 512].x
  89:   mad r4.w, -r4.w, r4.w, l(1.000000)
  90:   max r4.w, r4.w, l(0.000000)
  91:   mul r4.w, r4.w, r4.w
  92:   mul r4.w, r4.w, r6.w
  93:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  94:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  95:   mul r6.w, r6.w, r6.w
  96:   mul r4.w, r4.w, r6.w
  97:   ishl r6.w, r3.w, l(2)
  98:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  99:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
 100:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
 101:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
 102:   div r7.xyz, r7.xyzx, r7.wwww
 103:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t2.xxxx, s2, r7.z
 104:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 105:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 106:   ge r7.x, l(0.000000), r7.z
 107:   ge r7.y, r7.z, l(1.000000)
 108:   or r7.x, r7.y, r7.x
 109:   movc r6.w, r7.x, l(1.000000), r6.w
 110:   add r7.x, -r6.w, l(1.000000)
 111:   mad r6.w, r2.w, r7.x, r6.w
 112:   mul r4.w, r4.w, r6.w
 113:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 114:   mul r4.w, r4.w, r6.w
 115:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 116:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 117:   dp3 r3.w, r5.xyzx, r5.xyzx
 118:   max r3.w, r3.w, l(0.000000)
 119:   rsq r3.w, r3.w
 120:   mul r5.xyz, r3.wwww, r5.xyzx
 121:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 122:   mul r3.w, r3.w, r3.w
 123:   max r3.w, r3.w, l(0.100000)
 124:   mul r3.w, r3.w, l(6.000120)
 125:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 126:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 127:   iadd r1.w, r1.w, l(1)
 128: endloop 
 129: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 202 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb5[1].w
  30: mad r4.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  31: round_ni r4.xy, r4.xyxx
  32: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.xyxx
  33: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  34: mul r6.xyzw, r5.xxzz, r5.xxzz
  35: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  36: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  37: add r6.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  38: min r6.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  40: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  42: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  43: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  44: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  45: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  46: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  47: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  48: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mov r7.z, r6.x
  50: mov r7.w, r3.x
  51: mov r8.z, r9.x
  52: mov r8.w, r4.z
  53: add r5.xyzw, r7.zwxz, r8.zwxz
  54: mov r6.z, r7.y
  55: mov r6.w, r3.y
  56: mov r9.z, r8.y
  57: mov r9.w, r4.w
  58: add r3.xyw, r6.zyzw, r9.zyzw
  59: div r6.xyz, r8.xzwx, r5.zwyz
  60: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  61: div r7.xyz, r9.zywz, r3.xywx
  62: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  63: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  64: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  65: mov r6.w, r7.x
  66: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  67: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  68: mov r7.w, r6.y
  69: mov r6.yw, r7.yyyz
  70: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  71: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  72: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  73: mul r10.xyzw, r3.xxxy, r5.zwyz
  74: mul r11.xyzw, r3.yyww, r5.xyzw
  75: mul r1.w, r3.w, r5.y
  76: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, r3.z
  77: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, r3.z
  78: mul r3.x, r3.x, r10.y
  79: mad r2.w, r10.x, r2.w, r3.x
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t1.xxxx, s1, r3.z
  81: mad r2.w, r10.z, r3.x, r2.w
  82: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.xyxx, t1.xxxx, s1, r3.z
  83: mad r2.w, r10.w, r3.x, r2.w
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.x, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.y, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  89: mad r2.w, r11.z, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  91: mad r2.w, r11.w, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r1.w, r1.w, r3.x, r2.w
  94: add r2.w, -cb3[29].x, l(1.000000)
  95: mad r1.w, r1.w, cb3[29].x, r2.w
  96: ge r2.w, l(0.000000), r3.z
  97: ge r3.x, r3.z, l(1.000000)
  98: or r2.w, r2.w, r3.x
  99: movc r1.w, r2.w, l(1.000000), r1.w
 100: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 101: dp3 r2.w, r3.xyzx, r3.xyzx
 102: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 103: mul r2.w, r2.w, r2.w
 104: add r3.x, -r1.w, l(1.000000)
 105: mad r1.w, r2.w, r3.x, r1.w
 106: dp3 r3.x, -r2.xyzx, r1.xyzx
 107: add r3.x, r3.x, r3.x
 108: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 109: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
 110: add r3.w, r3.w, l(-1.000000)
 111: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 112: max r3.w, r3.w, l(0.000000)
 113: log r3.w, r3.w
 114: mul r3.w, r3.w, cb2[14].y
 115: exp r3.w, r3.w
 116: mul r3.w, r3.w, cb2[14].x
 117: mul r3.xyz, r3.xyzx, r3.wwww
 118: mul r1.w, r1.w, cb2[10].z
 119: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
 120: mul r1.w, r1.w, r3.w
 121: mul r4.xyz, r1.wwww, cb0[4].xyzx
 122: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 123: dp3 r0.w, r5.xyzx, r5.xyzx
 124: max r0.w, r0.w, l(0.000000)
 125: rsq r0.w, r0.w
 126: mul r5.xyz, r0.wwww, r5.xyzx
 127: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 128: mul r0.w, r0.w, r0.w
 129: max r0.w, r0.w, l(0.100000)
 130: mul r0.w, r0.w, l(6.000120)
 131: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 132: mul r4.xyz, r4.xyzx, r0.wwww
 133: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 134: min r0.w, cb0[7].x, cb2[10].y
 135: ftoi r0.w, r0.w
 136: mov r4.xyz, r3.xyzx
 137: mov r1.w, l(0)
 138: loop 
 139:   uge r3.w, r1.w, r0.w
 140:   breakc_nz r3.w
 141:   and r3.w, r1.w, l(3)
 142:   ushr r4.w, r1.w, l(2)
 143:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
 144:   ftoi r3.w, r3.w
 145:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
 146:   dp3 r4.w, r5.xyzx, r5.xyzx
 147:   max r4.w, r4.w, l(0.000061)
 148:   rsq r5.w, r4.w
 149:   mul r6.xyz, r5.wwww, r5.xyzx
 150:   rcp r6.w, r4.w
 151:   mul r4.w, r4.w, cb1[r3.w + 512].x
 152:   mad r4.w, -r4.w, r4.w, l(1.000000)
 153:   max r4.w, r4.w, l(0.000000)
 154:   mul r4.w, r4.w, r4.w
 155:   mul r4.w, r4.w, r6.w
 156:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
 157:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
 158:   mul r6.w, r6.w, r6.w
 159:   mul r4.w, r4.w, r6.w
 160:   ishl r6.w, r3.w, l(2)
 161:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
 162:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
 163:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
 164:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
 165:   div r7.xyz, r7.xyzx, r7.wwww
 166:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 167:   round_ni r8.xy, r8.xyxx
 168:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 169:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 170:   mul r10.xyzw, r9.xxzz, r9.xxzz
 171:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 172:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 173:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 174:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 175:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 176:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 177:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 178:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 179:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 180:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 181:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 182:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 183:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 184:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 185:   mov r11.z, r10.x
 186:   mov r11.w, r7.x
 187:   mov r12.z, r13.x
 188:   mov r12.w, r8.z
 189:   add r9.xyzw, r11.zwxz, r12.zwxz
 190:   mov r10.z, r11.y
 191:   mov r10.w, r7.y
 192:   mov r13.z, r12.y
 193:   mov r13.w, r8.w
 194:   add r7.xyw, r10.zyzw, r13.zyzw
 195:   div r10.xyz, r12.xzwx, r9.zwyz
 196:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 197:   div r11.xyz, r13.zywz, r7.xywx
 198:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 199:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 200:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 201:   mov r10.w, r11.x
 202:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 203:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 204:   mov r11.w, r10.y
 205:   mov r10.yw, r11.yyyz
 206:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 207:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 208:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 209:   mul r14.xyzw, r7.xxxy, r9.zwyz
 210:   mul r15.xyzw, r7.yyww, r9.xyzw
 211:   mul r6.w, r7.w, r9.y
 212:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t2.xxxx, s2, r7.z
 213:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t2.xxxx, s2, r7.z
 214:   mul r7.y, r7.y, r14.y
 215:   mad r7.x, r14.x, r7.x, r7.y
 216:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t2.xxxx, s2, r7.z
 217:   mad r7.x, r14.z, r7.y, r7.x
 218:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t2.xxxx, s2, r7.z
 219:   mad r7.x, r14.w, r7.y, r7.x
 220:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t2.xxxx, s2, r7.z
 221:   mad r7.x, r15.x, r7.y, r7.x
 222:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t2.xxxx, s2, r7.z
 223:   mad r7.x, r15.y, r7.y, r7.x
 224:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t2.xxxx, s2, r7.z
 225:   mad r7.x, r15.z, r7.y, r7.x
 226:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t2.xxxx, s2, r7.z
 227:   mad r7.x, r15.w, r7.y, r7.x
 228:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t2.xxxx, s2, r7.z
 229:   mad r6.w, r6.w, r7.y, r7.x
 230:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 231:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 232:   ge r7.x, l(0.000000), r7.z
 233:   ge r7.y, r7.z, l(1.000000)
 234:   or r7.x, r7.y, r7.x
 235:   movc r6.w, r7.x, l(1.000000), r6.w
 236:   add r7.x, -r6.w, l(1.000000)
 237:   mad r6.w, r2.w, r7.x, r6.w
 238:   mul r4.w, r4.w, r6.w
 239:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 240:   mul r4.w, r4.w, r6.w
 241:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 242:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 243:   dp3 r3.w, r5.xyzx, r5.xyzx
 244:   max r3.w, r3.w, l(0.000000)
 245:   rsq r3.w, r3.w
 246:   mul r5.xyz, r3.wwww, r5.xyzx
 247:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 248:   mul r3.w, r3.w, r3.w
 249:   max r3.w, r3.w, l(0.100000)
 250:   mul r3.w, r3.w, l(6.000120)
 251:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 252:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 253:   iadd r1.w, r1.w, l(1)
 254: endloop 
 255: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 256: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t1.xxxx, s1, r7.z
  73:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
  74:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
  75:   ge r7.x, l(0.000000), r7.z
  76:   ge r7.y, r7.z, l(1.000000)
  77:   or r7.x, r7.y, r7.x
  78:   movc r6.w, r7.x, l(1.000000), r6.w
  79:   add r7.x, -r6.w, l(1.000000)
  80:   mad r6.w, r1.w, r7.x, r6.w
  81:   mul r4.w, r4.w, r6.w
  82:   dp3_sat r6.w, r1.xyzx, r6.xyzx
  83:   mul r4.w, r4.w, r6.w
  84:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
  85:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  86:   dp3 r3.w, r5.xyzx, r5.xyzx
  87:   max r3.w, r3.w, l(0.000000)
  88:   rsq r3.w, r3.w
  89:   mul r5.xyz, r3.wwww, r5.xyzx
  90:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  91:   mul r3.w, r3.w, r3.w
  92:   max r3.w, r3.w, l(0.100000)
  93:   mul r3.w, r3.w, l(6.000120)
  94:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  95:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  96:   iadd r2.w, r2.w, l(1)
  97: endloop 
  98: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  73:   round_ni r8.xy, r8.xyxx
  74:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  75:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  76:   mul r10.xyzw, r9.xxzz, r9.xxzz
  77:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  78:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  79:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  81:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  82:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  83:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  84:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  85:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  86:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  87:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  88:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  89:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  90:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  91:   mov r11.z, r10.x
  92:   mov r11.w, r7.x
  93:   mov r12.z, r13.x
  94:   mov r12.w, r8.z
  95:   add r9.xyzw, r11.zwxz, r12.zwxz
  96:   mov r10.z, r11.y
  97:   mov r10.w, r7.y
  98:   mov r13.z, r12.y
  99:   mov r13.w, r8.w
 100:   add r7.xyw, r10.zyzw, r13.zyzw
 101:   div r10.xyz, r12.xzwx, r9.zwyz
 102:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 103:   div r11.xyz, r13.zywz, r7.xywx
 104:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 105:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 106:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 107:   mov r10.w, r11.x
 108:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 109:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 110:   mov r11.w, r10.y
 111:   mov r10.yw, r11.yyyz
 112:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 113:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 114:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 115:   mul r14.xyzw, r7.xxxy, r9.zwyz
 116:   mul r15.xyzw, r7.yyww, r9.xyzw
 117:   mul r6.w, r7.w, r9.y
 118:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t1.xxxx, s1, r7.z
 119:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t1.xxxx, s1, r7.z
 120:   mul r7.y, r7.y, r14.y
 121:   mad r7.x, r14.x, r7.x, r7.y
 122:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t1.xxxx, s1, r7.z
 123:   mad r7.x, r14.z, r7.y, r7.x
 124:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t1.xxxx, s1, r7.z
 125:   mad r7.x, r14.w, r7.y, r7.x
 126:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t1.xxxx, s1, r7.z
 127:   mad r7.x, r15.x, r7.y, r7.x
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t1.xxxx, s1, r7.z
 129:   mad r7.x, r15.y, r7.y, r7.x
 130:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t1.xxxx, s1, r7.z
 131:   mad r7.x, r15.z, r7.y, r7.x
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t1.xxxx, s1, r7.z
 133:   mad r7.x, r15.w, r7.y, r7.x
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t1.xxxx, s1, r7.z
 135:   mad r6.w, r6.w, r7.y, r7.x
 136:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 137:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 138:   ge r7.x, l(0.000000), r7.z
 139:   ge r7.y, r7.z, l(1.000000)
 140:   or r7.x, r7.y, r7.x
 141:   movc r6.w, r7.x, l(1.000000), r6.w
 142:   add r7.x, -r6.w, l(1.000000)
 143:   mad r6.w, r1.w, r7.x, r6.w
 144:   mul r4.w, r4.w, r6.w
 145:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 146:   mul r4.w, r4.w, r6.w
 147:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 148:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 149:   dp3 r3.w, r5.xyzx, r5.xyzx
 150:   max r3.w, r3.w, l(0.000000)
 151:   rsq r3.w, r3.w
 152:   mul r5.xyz, r3.wwww, r5.xyzx
 153:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 154:   mul r3.w, r3.w, r3.w
 155:   max r3.w, r3.w, l(0.100000)
 156:   mul r3.w, r3.w, l(6.000120)
 157:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 158:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 159:   iadd r2.w, r2.w, l(1)
 160: endloop 
 161: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 162: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb3[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r4.xyz, r3.xyzx
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.w, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.w, r3.w
  51:   mul r6.xyz, r4.wwww, r5.xyzx
  52:   rcp r5.w, r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r5.w
  58:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  59:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r5.w, r5.w, r5.w
  61:   mul r3.w, r3.w, r5.w
  62:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  63:   mul r3.w, r3.w, r5.w
  64:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  65:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   max r2.w, r2.w, l(0.000000)
  68:   rsq r2.w, r2.w
  69:   mul r5.xyz, r2.wwww, r5.xyzx
  70:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  71:   mul r2.w, r2.w, r2.w
  72:   max r2.w, r2.w, l(0.100000)
  73:   mul r2.w, r2.w, l(6.000120)
  74:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  75:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  76:   iadd r1.w, r1.w, l(1)
  77: endloop 
  78: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t1.xxxx, s1, r7.z
  73:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
  74:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
  75:   ge r7.x, l(0.000000), r7.z
  76:   ge r7.y, r7.z, l(1.000000)
  77:   or r7.x, r7.y, r7.x
  78:   movc r6.w, r7.x, l(1.000000), r6.w
  79:   add r7.x, -r6.w, l(1.000000)
  80:   mad r6.w, r1.w, r7.x, r6.w
  81:   mul r4.w, r4.w, r6.w
  82:   dp3_sat r6.w, r1.xyzx, r6.xyzx
  83:   mul r4.w, r4.w, r6.w
  84:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
  85:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  86:   dp3 r3.w, r5.xyzx, r5.xyzx
  87:   max r3.w, r3.w, l(0.000000)
  88:   rsq r3.w, r3.w
  89:   mul r5.xyz, r3.wwww, r5.xyzx
  90:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  91:   mul r3.w, r3.w, r3.w
  92:   max r3.w, r3.w, l(0.100000)
  93:   mul r3.w, r3.w, l(6.000120)
  94:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  95:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  96:   iadd r2.w, r2.w, l(1)
  97: endloop 
  98: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: dp3 r1.w, -r2.xyzx, r1.xyzx
  10: add r1.w, r1.w, r1.w
  11: mad r3.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  12: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  13: add r1.w, r3.w, l(-1.000000)
  14: mad r1.w, cb2[14].w, r1.w, l(1.000000)
  15: max r1.w, r1.w, l(0.000000)
  16: log r1.w, r1.w
  17: mul r1.w, r1.w, cb2[14].y
  18: exp r1.w, r1.w
  19: mul r1.w, r1.w, cb2[14].x
  20: mul r3.xyz, r3.xyzx, r1.wwww
  21: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  22: mul r1.w, r1.w, cb2[10].z
  23: mul r4.xyz, r1.wwww, cb0[4].xyzx
  24: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  25: dp3 r0.w, r5.xyzx, r5.xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: rsq r0.w, r0.w
  28: mul r5.xyz, r0.wwww, r5.xyzx
  29: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  30: mul r0.w, r0.w, r0.w
  31: max r0.w, r0.w, l(0.100000)
  32: mul r0.w, r0.w, l(6.000120)
  33: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  34: mul r4.xyz, r4.xyzx, r0.wwww
  35: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  36: min r0.w, cb0[7].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  39: dp3 r1.w, r4.xyzx, r4.xyzx
  40: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  41: mul r1.w, r1.w, r1.w
  42: mov r4.xyz, r3.xyzx
  43: mov r2.w, l(0)
  44: loop 
  45:   uge r3.w, r2.w, r0.w
  46:   breakc_nz r3.w
  47:   and r3.w, r2.w, l(3)
  48:   ushr r4.w, r2.w, l(2)
  49:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  50:   ftoi r3.w, r3.w
  51:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  52:   dp3 r4.w, r5.xyzx, r5.xyzx
  53:   max r4.w, r4.w, l(0.000061)
  54:   rsq r5.w, r4.w
  55:   mul r6.xyz, r5.wwww, r5.xyzx
  56:   rcp r6.w, r4.w
  57:   mul r4.w, r4.w, cb1[r3.w + 512].x
  58:   mad r4.w, -r4.w, r4.w, l(1.000000)
  59:   max r4.w, r4.w, l(0.000000)
  60:   mul r4.w, r4.w, r4.w
  61:   mul r4.w, r4.w, r6.w
  62:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  63:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  64:   mul r6.w, r6.w, r6.w
  65:   mul r4.w, r4.w, r6.w
  66:   ishl r6.w, r3.w, l(2)
  67:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  68:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  69:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  70:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  71:   div r7.xyz, r7.xyzx, r7.wwww
  72:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  73:   round_ni r8.xy, r8.xyxx
  74:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  75:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  76:   mul r10.xyzw, r9.xxzz, r9.xxzz
  77:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  78:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  79:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  81:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  82:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  83:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  84:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  85:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  86:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  87:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  88:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  89:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  90:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  91:   mov r11.z, r10.x
  92:   mov r11.w, r7.x
  93:   mov r12.z, r13.x
  94:   mov r12.w, r8.z
  95:   add r9.xyzw, r11.zwxz, r12.zwxz
  96:   mov r10.z, r11.y
  97:   mov r10.w, r7.y
  98:   mov r13.z, r12.y
  99:   mov r13.w, r8.w
 100:   add r7.xyw, r10.zyzw, r13.zyzw
 101:   div r10.xyz, r12.xzwx, r9.zwyz
 102:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 103:   div r11.xyz, r13.zywz, r7.xywx
 104:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 105:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 106:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 107:   mov r10.w, r11.x
 108:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 109:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 110:   mov r11.w, r10.y
 111:   mov r10.yw, r11.yyyz
 112:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 113:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 114:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 115:   mul r14.xyzw, r7.xxxy, r9.zwyz
 116:   mul r15.xyzw, r7.yyww, r9.xyzw
 117:   mul r6.w, r7.w, r9.y
 118:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t1.xxxx, s1, r7.z
 119:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t1.xxxx, s1, r7.z
 120:   mul r7.y, r7.y, r14.y
 121:   mad r7.x, r14.x, r7.x, r7.y
 122:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t1.xxxx, s1, r7.z
 123:   mad r7.x, r14.z, r7.y, r7.x
 124:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t1.xxxx, s1, r7.z
 125:   mad r7.x, r14.w, r7.y, r7.x
 126:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t1.xxxx, s1, r7.z
 127:   mad r7.x, r15.x, r7.y, r7.x
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t1.xxxx, s1, r7.z
 129:   mad r7.x, r15.y, r7.y, r7.x
 130:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t1.xxxx, s1, r7.z
 131:   mad r7.x, r15.z, r7.y, r7.x
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t1.xxxx, s1, r7.z
 133:   mad r7.x, r15.w, r7.y, r7.x
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t1.xxxx, s1, r7.z
 135:   mad r6.w, r6.w, r7.y, r7.x
 136:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 137:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 138:   ge r7.x, l(0.000000), r7.z
 139:   ge r7.y, r7.z, l(1.000000)
 140:   or r7.x, r7.y, r7.x
 141:   movc r6.w, r7.x, l(1.000000), r6.w
 142:   add r7.x, -r6.w, l(1.000000)
 143:   mad r6.w, r1.w, r7.x, r6.w
 144:   mul r4.w, r4.w, r6.w
 145:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 146:   mul r4.w, r4.w, r6.w
 147:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 148:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 149:   dp3 r3.w, r5.xyzx, r5.xyzx
 150:   max r3.w, r3.w, l(0.000000)
 151:   rsq r3.w, r3.w
 152:   mul r5.xyz, r3.wwww, r5.xyzx
 153:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 154:   mul r3.w, r3.w, r3.w
 155:   max r3.w, r3.w, l(0.100000)
 156:   mul r3.w, r3.w, l(6.000120)
 157:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 158:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 159:   iadd r2.w, r2.w, l(1)
 160: endloop 
 161: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 162: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 35 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: mul r2.xyz, r0.wwww, cb0[4].xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb1[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb1[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  28: mul r0.w, r0.w, r0.w
  29: max r0.w, r0.w, l(0.100000)
  30: mul r0.w, r0.w, l(6.000120)
  31: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  32: mul r1.xyz, r2.xyzx, r0.wwww
  33: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  34: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  35: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  36: mov_sat o0.w, cb2[1].w
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb4[1].w
   9: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  10: add r2.w, -cb3[29].x, l(1.000000)
  11: mad r1.w, r1.w, cb3[29].x, r2.w
  12: ge r2.w, l(0.000000), v7.z
  13: ge r3.x, v7.z, l(1.000000)
  14: or r2.w, r2.w, r3.x
  15: movc r1.w, r2.w, l(1.000000), r1.w
  16: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  17: dp3 r2.w, r3.xyzx, r3.xyzx
  18: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  19: mul r2.w, r2.w, r2.w
  20: add r3.x, -r1.w, l(1.000000)
  21: mad r1.w, r2.w, r3.x, r1.w
  22: dp3 r2.w, -r2.xyzx, r1.xyzx
  23: add r2.w, r2.w, r2.w
  24: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  25: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  26: add r2.w, r3.w, l(-1.000000)
  27: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  28: max r2.w, r2.w, l(0.000000)
  29: log r2.w, r2.w
  30: mul r2.w, r2.w, cb2[14].y
  31: exp r2.w, r2.w
  32: mul r2.w, r2.w, cb2[14].x
  33: mul r3.xyz, r3.xyzx, r2.wwww
  34: mul r1.w, r1.w, cb2[10].z
  35: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  36: mul r1.w, r1.w, r2.w
  37: mul r4.xyz, r1.wwww, cb0[4].xyzx
  38: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  39: dp3 r0.w, r5.xyzx, r5.xyzx
  40: max r0.w, r0.w, l(0.000000)
  41: rsq r0.w, r0.w
  42: mul r5.xyz, r0.wwww, r5.xyzx
  43: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  44: mul r0.w, r0.w, r0.w
  45: max r0.w, r0.w, l(0.100000)
  46: mul r0.w, r0.w, l(6.000120)
  47: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  48: mul r4.xyz, r4.xyzx, r0.wwww
  49: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  50: min r0.w, cb0[7].x, cb2[10].y
  51: ftoi r0.w, r0.w
  52: mov r4.xyz, r3.xyzx
  53: mov r1.w, l(0)
  54: loop 
  55:   uge r2.w, r1.w, r0.w
  56:   breakc_nz r2.w
  57:   and r2.w, r1.w, l(3)
  58:   ushr r3.w, r1.w, l(2)
  59:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  60:   ftoi r2.w, r2.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  62:   dp3 r3.w, r5.xyzx, r5.xyzx
  63:   max r3.w, r3.w, l(0.000061)
  64:   rsq r4.w, r3.w
  65:   mul r6.xyz, r4.wwww, r5.xyzx
  66:   rcp r5.w, r3.w
  67:   mul r3.w, r3.w, cb1[r2.w + 512].x
  68:   mad r3.w, -r3.w, r3.w, l(1.000000)
  69:   max r3.w, r3.w, l(0.000000)
  70:   mul r3.w, r3.w, r3.w
  71:   mul r3.w, r3.w, r5.w
  72:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  73:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  74:   mul r5.w, r5.w, r5.w
  75:   mul r3.w, r3.w, r5.w
  76:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  77:   mul r3.w, r3.w, r5.w
  78:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  79:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
  80:   dp3 r2.w, r5.xyzx, r5.xyzx
  81:   max r2.w, r2.w, l(0.000000)
  82:   rsq r2.w, r2.w
  83:   mul r5.xyz, r2.wwww, r5.xyzx
  84:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  85:   mul r2.w, r2.w, r2.w
  86:   max r2.w, r2.w, l(0.100000)
  87:   mul r2.w, r2.w, l(6.000120)
  88:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  89:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
  90:   iadd r1.w, r1.w, l(1)
  91: endloop 
  92: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 12 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb4[1].w
   9: mad r3.xy, v7.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: round_ni r3.xy, r3.xyxx
  11: mad r3.zw, v7.xxxy, cb3[30].zzzw, -r3.xxxy
  12: add r4.xyzw, r3.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  13: mul r5.xyzw, r4.xxzz, r4.xxzz
  14: mul r4.xz, r5.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  15: mad r5.xy, r5.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.zwzz
  16: add r5.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  17: min r6.xy, r3.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  18: mad r6.xy, -r6.xyxx, r6.xyxx, r5.zwzz
  19: max r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  20: mad r3.zw, -r3.zzzw, r3.zzzw, r4.yyyw
  21: add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  22: add r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  23: mul r7.xy, r5.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  24: mul r5.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  25: mul r6.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  26: mul r8.xy, r3.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  27: mul r3.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  28: mov r7.z, r6.x
  29: mov r7.w, r3.z
  30: mov r5.z, r8.x
  31: mov r5.w, r4.x
  32: add r9.xyzw, r5.zwxz, r7.zwxz
  33: mov r6.z, r7.y
  34: mov r6.w, r3.w
  35: mov r8.z, r5.y
  36: mov r8.w, r4.z
  37: add r4.xyz, r6.zywz, r8.zywz
  38: div r5.xyz, r5.xzwx, r9.zwyz
  39: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  40: div r6.xyz, r8.zywz, r4.xyzx
  41: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  42: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  43: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  44: mov r5.w, r6.x
  45: mad r7.xyzw, r3.xyxy, cb3[30].xyxy, r5.ywxw
  46: mad r3.zw, r3.xxxy, cb3[30].xxxy, r5.zzzw
  47: mov r6.w, r5.y
  48: mov r5.yw, r6.yyyz
  49: mad r8.xyzw, r3.xyxy, cb3[30].xyxy, r5.xyzy
  50: mad r6.xyzw, r3.xyxy, cb3[30].xyxy, r6.wywz
  51: mad r5.xyzw, r3.xyxy, cb3[30].xyxy, r5.xwzw
  52: mul r10.xyzw, r4.xxxy, r9.zwyz
  53: mul r11.xyzw, r4.yyzz, r9.xyzw
  54: mul r1.w, r4.z, r9.y
  55: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, v7.z
  56: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, v7.z
  57: mul r3.x, r3.x, r10.y
  58: mad r2.w, r10.x, r2.w, r3.x
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r2.w, r10.z, r3.x, r2.w
  61: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, v7.z
  62: mad r2.w, r10.w, r3.x, r2.w
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.x, r3.x, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.y, r3.x, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, v7.z
  68: mad r2.w, r11.z, r3.x, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, v7.z
  70: mad r2.w, r11.w, r3.x, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, v7.z
  72: mad r1.w, r1.w, r3.x, r2.w
  73: add r2.w, -cb3[29].x, l(1.000000)
  74: mad r1.w, r1.w, cb3[29].x, r2.w
  75: ge r2.w, l(0.000000), v7.z
  76: ge r3.x, v7.z, l(1.000000)
  77: or r2.w, r2.w, r3.x
  78: movc r1.w, r2.w, l(1.000000), r1.w
  79: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  80: dp3 r2.w, r3.xyzx, r3.xyzx
  81: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  82: mul r2.w, r2.w, r2.w
  83: add r3.x, -r1.w, l(1.000000)
  84: mad r1.w, r2.w, r3.x, r1.w
  85: dp3 r2.w, -r2.xyzx, r1.xyzx
  86: add r2.w, r2.w, r2.w
  87: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  88: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  89: add r2.w, r3.w, l(-1.000000)
  90: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  91: max r2.w, r2.w, l(0.000000)
  92: log r2.w, r2.w
  93: mul r2.w, r2.w, cb2[14].y
  94: exp r2.w, r2.w
  95: mul r2.w, r2.w, cb2[14].x
  96: mul r3.xyz, r3.xyzx, r2.wwww
  97: mul r1.w, r1.w, cb2[10].z
  98: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  99: mul r1.w, r1.w, r2.w
 100: mul r4.xyz, r1.wwww, cb0[4].xyzx
 101: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 102: dp3 r0.w, r5.xyzx, r5.xyzx
 103: max r0.w, r0.w, l(0.000000)
 104: rsq r0.w, r0.w
 105: mul r5.xyz, r0.wwww, r5.xyzx
 106: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 107: mul r0.w, r0.w, r0.w
 108: max r0.w, r0.w, l(0.100000)
 109: mul r0.w, r0.w, l(6.000120)
 110: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 111: mul r4.xyz, r4.xyzx, r0.wwww
 112: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 113: min r0.w, cb0[7].x, cb2[10].y
 114: ftoi r0.w, r0.w
 115: mov r4.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.w
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r5.xyzx, r5.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r6.xyz, r4.wwww, r5.xyzx
 129:   rcp r5.w, r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   dp3_sat r5.w, r1.xyzx, r6.xyzx
 140:   mul r3.w, r3.w, r5.w
 141:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 142:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
 143:   dp3 r2.w, r5.xyzx, r5.xyzx
 144:   max r2.w, r2.w, l(0.000000)
 145:   rsq r2.w, r2.w
 146:   mul r5.xyz, r2.wwww, r5.xyzx
 147:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 148:   mul r2.w, r2.w, r2.w
 149:   max r2.w, r2.w, l(0.100000)
 150:   mul r2.w, r2.w, l(6.000120)
 151:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 152:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 153:   iadd r1.w, r1.w, l(1)
 154: endloop 
 155: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 95 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  10: add r2.w, -cb3[29].x, l(1.000000)
  11: mad r1.w, r1.w, cb3[29].x, r2.w
  12: ge r2.w, l(0.000000), v7.z
  13: ge r3.x, v7.z, l(1.000000)
  14: or r2.w, r2.w, r3.x
  15: movc r1.w, r2.w, l(1.000000), r1.w
  16: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  17: dp3 r2.w, r3.xyzx, r3.xyzx
  18: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  19: mul r2.w, r2.w, r2.w
  20: add r3.x, -r1.w, l(1.000000)
  21: mad r1.w, r2.w, r3.x, r1.w
  22: dp3 r3.x, -r2.xyzx, r1.xyzx
  23: add r3.x, r3.x, r3.x
  24: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  25: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  26: add r3.w, r3.w, l(-1.000000)
  27: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  28: max r3.w, r3.w, l(0.000000)
  29: log r3.w, r3.w
  30: mul r3.w, r3.w, cb2[14].y
  31: exp r3.w, r3.w
  32: mul r3.w, r3.w, cb2[14].x
  33: mul r3.xyz, r3.xyzx, r3.wwww
  34: mul r1.w, r1.w, cb2[10].z
  35: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
  36: mul r1.w, r1.w, r3.w
  37: mul r4.xyz, r1.wwww, cb0[4].xyzx
  38: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  39: dp3 r0.w, r5.xyzx, r5.xyzx
  40: max r0.w, r0.w, l(0.000000)
  41: rsq r0.w, r0.w
  42: mul r5.xyz, r0.wwww, r5.xyzx
  43: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  44: mul r0.w, r0.w, r0.w
  45: max r0.w, r0.w, l(0.100000)
  46: mul r0.w, r0.w, l(6.000120)
  47: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  48: mul r4.xyz, r4.xyzx, r0.wwww
  49: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  50: min r0.w, cb0[7].x, cb2[10].y
  51: ftoi r0.w, r0.w
  52: mov r4.xyz, r3.xyzx
  53: mov r1.w, l(0)
  54: loop 
  55:   uge r3.w, r1.w, r0.w
  56:   breakc_nz r3.w
  57:   and r3.w, r1.w, l(3)
  58:   ushr r4.w, r1.w, l(2)
  59:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  60:   ftoi r3.w, r3.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  62:   dp3 r4.w, r5.xyzx, r5.xyzx
  63:   max r4.w, r4.w, l(0.000061)
  64:   rsq r5.w, r4.w
  65:   mul r6.xyz, r5.wwww, r5.xyzx
  66:   rcp r6.w, r4.w
  67:   mul r4.w, r4.w, cb1[r3.w + 512].x
  68:   mad r4.w, -r4.w, r4.w, l(1.000000)
  69:   max r4.w, r4.w, l(0.000000)
  70:   mul r4.w, r4.w, r4.w
  71:   mul r4.w, r4.w, r6.w
  72:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  73:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  74:   mul r6.w, r6.w, r6.w
  75:   mul r4.w, r4.w, r6.w
  76:   ishl r6.w, r3.w, l(2)
  77:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  78:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
  79:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
  80:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t2.xxxx, s2, r7.z
  83:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
  84:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
  85:   ge r7.x, l(0.000000), r7.z
  86:   ge r7.y, r7.z, l(1.000000)
  87:   or r7.x, r7.y, r7.x
  88:   movc r6.w, r7.x, l(1.000000), r6.w
  89:   add r7.x, -r6.w, l(1.000000)
  90:   mad r6.w, r2.w, r7.x, r6.w
  91:   mul r4.w, r4.w, r6.w
  92:   dp3_sat r6.w, r1.xyzx, r6.xyzx
  93:   mul r4.w, r4.w, r6.w
  94:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
  95:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  96:   dp3 r3.w, r5.xyzx, r5.xyzx
  97:   max r3.w, r3.w, l(0.000000)
  98:   rsq r3.w, r3.w
  99:   mul r5.xyz, r3.wwww, r5.xyzx
 100:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 101:   mul r3.w, r3.w, r3.w
 102:   max r3.w, r3.w, l(0.100000)
 103:   mul r3.w, r3.w, l(6.000120)
 104:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 105:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 106:   iadd r1.w, r1.w, l(1)
 107: endloop 
 108: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 183 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: mov_sat o0.w, cb5[1].w
   9: mad r3.xy, v7.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: round_ni r3.xy, r3.xyxx
  11: mad r3.zw, v7.xxxy, cb3[30].zzzw, -r3.xxxy
  12: add r4.xyzw, r3.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  13: mul r5.xyzw, r4.xxzz, r4.xxzz
  14: mul r4.xz, r5.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  15: mad r5.xy, r5.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.zwzz
  16: add r5.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  17: min r6.xy, r3.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  18: mad r6.xy, -r6.xyxx, r6.xyxx, r5.zwzz
  19: max r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  20: mad r3.zw, -r3.zzzw, r3.zzzw, r4.yyyw
  21: add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  22: add r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  23: mul r7.xy, r5.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  24: mul r5.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  25: mul r6.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  26: mul r8.xy, r3.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  27: mul r3.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  28: mov r7.z, r6.x
  29: mov r7.w, r3.z
  30: mov r5.z, r8.x
  31: mov r5.w, r4.x
  32: add r9.xyzw, r5.zwxz, r7.zwxz
  33: mov r6.z, r7.y
  34: mov r6.w, r3.w
  35: mov r8.z, r5.y
  36: mov r8.w, r4.z
  37: add r4.xyz, r6.zywz, r8.zywz
  38: div r5.xyz, r5.xzwx, r9.zwyz
  39: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  40: div r6.xyz, r8.zywz, r4.xyzx
  41: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  42: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  43: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  44: mov r5.w, r6.x
  45: mad r7.xyzw, r3.xyxy, cb3[30].xyxy, r5.ywxw
  46: mad r3.zw, r3.xxxy, cb3[30].xxxy, r5.zzzw
  47: mov r6.w, r5.y
  48: mov r5.yw, r6.yyyz
  49: mad r8.xyzw, r3.xyxy, cb3[30].xyxy, r5.xyzy
  50: mad r6.xyzw, r3.xyxy, cb3[30].xyxy, r6.wywz
  51: mad r5.xyzw, r3.xyxy, cb3[30].xyxy, r5.xwzw
  52: mul r10.xyzw, r4.xxxy, r9.zwyz
  53: mul r11.xyzw, r4.yyzz, r9.xyzw
  54: mul r1.w, r4.z, r9.y
  55: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, v7.z
  56: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, v7.z
  57: mul r3.x, r3.x, r10.y
  58: mad r2.w, r10.x, r2.w, r3.x
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r2.w, r10.z, r3.x, r2.w
  61: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, v7.z
  62: mad r2.w, r10.w, r3.x, r2.w
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.x, r3.x, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.y, r3.x, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, v7.z
  68: mad r2.w, r11.z, r3.x, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, v7.z
  70: mad r2.w, r11.w, r3.x, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, v7.z
  72: mad r1.w, r1.w, r3.x, r2.w
  73: add r2.w, -cb3[29].x, l(1.000000)
  74: mad r1.w, r1.w, cb3[29].x, r2.w
  75: ge r2.w, l(0.000000), v7.z
  76: ge r3.x, v7.z, l(1.000000)
  77: or r2.w, r2.w, r3.x
  78: movc r1.w, r2.w, l(1.000000), r1.w
  79: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  80: dp3 r2.w, r3.xyzx, r3.xyzx
  81: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  82: mul r2.w, r2.w, r2.w
  83: add r3.x, -r1.w, l(1.000000)
  84: mad r1.w, r2.w, r3.x, r1.w
  85: dp3 r3.x, -r2.xyzx, r1.xyzx
  86: add r3.x, r3.x, r3.x
  87: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  88: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  89: add r3.w, r3.w, l(-1.000000)
  90: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  91: max r3.w, r3.w, l(0.000000)
  92: log r3.w, r3.w
  93: mul r3.w, r3.w, cb2[14].y
  94: exp r3.w, r3.w
  95: mul r3.w, r3.w, cb2[14].x
  96: mul r3.xyz, r3.xyzx, r3.wwww
  97: mul r1.w, r1.w, cb2[10].z
  98: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
  99: mul r1.w, r1.w, r3.w
 100: mul r4.xyz, r1.wwww, cb0[4].xyzx
 101: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 102: dp3 r0.w, r5.xyzx, r5.xyzx
 103: max r0.w, r0.w, l(0.000000)
 104: rsq r0.w, r0.w
 105: mul r5.xyz, r0.wwww, r5.xyzx
 106: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 107: mul r0.w, r0.w, r0.w
 108: max r0.w, r0.w, l(0.100000)
 109: mul r0.w, r0.w, l(6.000120)
 110: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 111: mul r4.xyz, r4.xyzx, r0.wwww
 112: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 113: min r0.w, cb0[7].x, cb2[10].y
 114: ftoi r0.w, r0.w
 115: mov r4.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r3.w, r1.w, r0.w
 119:   breakc_nz r3.w
 120:   and r3.w, r1.w, l(3)
 121:   ushr r4.w, r1.w, l(2)
 122:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
 123:   ftoi r3.w, r3.w
 124:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
 125:   dp3 r4.w, r5.xyzx, r5.xyzx
 126:   max r4.w, r4.w, l(0.000061)
 127:   rsq r5.w, r4.w
 128:   mul r6.xyz, r5.wwww, r5.xyzx
 129:   rcp r6.w, r4.w
 130:   mul r4.w, r4.w, cb1[r3.w + 512].x
 131:   mad r4.w, -r4.w, r4.w, l(1.000000)
 132:   max r4.w, r4.w, l(0.000000)
 133:   mul r4.w, r4.w, r4.w
 134:   mul r4.w, r4.w, r6.w
 135:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
 136:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
 137:   mul r6.w, r6.w, r6.w
 138:   mul r4.w, r4.w, r6.w
 139:   ishl r6.w, r3.w, l(2)
 140:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
 141:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
 142:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
 143:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
 144:   div r7.xyz, r7.xyzx, r7.wwww
 145:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 146:   round_ni r8.xy, r8.xyxx
 147:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 148:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 149:   mul r10.xyzw, r9.xxzz, r9.xxzz
 150:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 151:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 152:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 153:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 154:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 155:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 156:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 157:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 158:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 159:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 160:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 161:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 162:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 163:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 164:   mov r11.z, r10.x
 165:   mov r11.w, r7.x
 166:   mov r12.z, r13.x
 167:   mov r12.w, r8.z
 168:   add r9.xyzw, r11.zwxz, r12.zwxz
 169:   mov r10.z, r11.y
 170:   mov r10.w, r7.y
 171:   mov r13.z, r12.y
 172:   mov r13.w, r8.w
 173:   add r7.xyw, r10.zyzw, r13.zyzw
 174:   div r10.xyz, r12.xzwx, r9.zwyz
 175:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 176:   div r11.xyz, r13.zywz, r7.xywx
 177:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 178:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 179:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 180:   mov r10.w, r11.x
 181:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 182:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 183:   mov r11.w, r10.y
 184:   mov r10.yw, r11.yyyz
 185:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 186:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 187:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 188:   mul r14.xyzw, r7.xxxy, r9.zwyz
 189:   mul r15.xyzw, r7.yyww, r9.xyzw
 190:   mul r6.w, r7.w, r9.y
 191:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t2.xxxx, s2, r7.z
 192:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t2.xxxx, s2, r7.z
 193:   mul r7.y, r7.y, r14.y
 194:   mad r7.x, r14.x, r7.x, r7.y
 195:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t2.xxxx, s2, r7.z
 196:   mad r7.x, r14.z, r7.y, r7.x
 197:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t2.xxxx, s2, r7.z
 198:   mad r7.x, r14.w, r7.y, r7.x
 199:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t2.xxxx, s2, r7.z
 200:   mad r7.x, r15.x, r7.y, r7.x
 201:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t2.xxxx, s2, r7.z
 202:   mad r7.x, r15.y, r7.y, r7.x
 203:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t2.xxxx, s2, r7.z
 204:   mad r7.x, r15.z, r7.y, r7.x
 205:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t2.xxxx, s2, r7.z
 206:   mad r7.x, r15.w, r7.y, r7.x
 207:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t2.xxxx, s2, r7.z
 208:   mad r6.w, r6.w, r7.y, r7.x
 209:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 210:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 211:   ge r7.x, l(0.000000), r7.z
 212:   ge r7.y, r7.z, l(1.000000)
 213:   or r7.x, r7.y, r7.x
 214:   movc r6.w, r7.x, l(1.000000), r6.w
 215:   add r7.x, -r6.w, l(1.000000)
 216:   mad r6.w, r2.w, r7.x, r6.w
 217:   mul r4.w, r4.w, r6.w
 218:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 219:   mul r4.w, r4.w, r6.w
 220:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 221:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 222:   dp3 r3.w, r5.xyzx, r5.xyzx
 223:   max r3.w, r3.w, l(0.000000)
 224:   rsq r3.w, r3.w
 225:   mul r5.xyz, r3.wwww, r5.xyzx
 226:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 227:   mul r3.w, r3.w, r3.w
 228:   max r3.w, r3.w, l(0.100000)
 229:   mul r3.w, r3.w, l(6.000120)
 230:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 231:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 232:   iadd r1.w, r1.w, l(1)
 233: endloop 
 234: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 235: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  20: dp3 r0.x, v4.xyzx, v4.xyzx
  21: max r0.x, r0.x, l(0.000000)
  22: rsq r0.x, r0.x
  23: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  24: mul r3.xyz, r0.xxxx, v4.xyzx
  25: dp3 r0.x, r2.xyzx, r2.xyzx
  26: max r0.x, r0.x, l(0.000000)
  27: rsq r0.x, r0.x
  28: mul r2.xyz, r0.xxxx, r2.xyzx
  29: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  30: mul r0.x, r0.x, r0.x
  31: max r0.x, r0.x, l(0.100000)
  32: mul r0.x, r0.x, l(6.000120)
  33: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  34: mul r1.xyz, r1.xyzx, r0.xxxx
  35: dp3 r0.x, -r3.xyzx, r0.yzwy
  36: add r0.x, r0.x, r0.x
  37: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  38: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  39: add r0.w, r0.w, l(-1.000000)
  40: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  41: max r0.w, r0.w, l(0.000000)
  42: log r0.w, r0.w
  43: mul r0.w, r0.w, cb1[14].y
  44: exp r0.w, r0.w
  45: mul r0.w, r0.w, cb1[14].x
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  48: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  49: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  50: mov_sat o0.w, cb3[1].w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  81: dp3 r0.x, v4.xyzx, v4.xyzx
  82: max r0.x, r0.x, l(0.000000)
  83: rsq r0.x, r0.x
  84: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  85: mul r3.xyz, r0.xxxx, v4.xyzx
  86: dp3 r0.x, r2.xyzx, r2.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r2.xyz, r0.xxxx, r2.xyzx
  90: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  91: mul r0.x, r0.x, r0.x
  92: max r0.x, r0.x, l(0.100000)
  93: mul r0.x, r0.x, l(6.000120)
  94: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  95: mul r1.xyz, r1.xyzx, r0.xxxx
  96: dp3 r0.x, -r3.xyzx, r0.yzwy
  97: add r0.x, r0.x, r0.x
  98: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  99: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 100: add r0.w, r0.w, l(-1.000000)
 101: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 102: max r0.w, r0.w, l(0.000000)
 103: log r0.w, r0.w
 104: mul r0.w, r0.w, cb1[14].y
 105: exp r0.w, r0.w
 106: mul r0.w, r0.w, cb1[14].x
 107: mul r0.xyz, r0.xyzx, r0.wwww
 108: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 109: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 110: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 111: mov_sat o0.w, cb3[1].w
 112: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb4[1].w
  30: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  31: add r2.w, -cb3[29].x, l(1.000000)
  32: mad r1.w, r1.w, cb3[29].x, r2.w
  33: ge r2.w, l(0.000000), r3.z
  34: ge r3.x, r3.z, l(1.000000)
  35: or r2.w, r2.w, r3.x
  36: movc r1.w, r2.w, l(1.000000), r1.w
  37: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  38: dp3 r2.w, r3.xyzx, r3.xyzx
  39: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  40: mul r2.w, r2.w, r2.w
  41: add r3.x, -r1.w, l(1.000000)
  42: mad r1.w, r2.w, r3.x, r1.w
  43: dp3 r2.w, -r2.xyzx, r1.xyzx
  44: add r2.w, r2.w, r2.w
  45: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  46: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  47: add r2.w, r3.w, l(-1.000000)
  48: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  49: max r2.w, r2.w, l(0.000000)
  50: log r2.w, r2.w
  51: mul r2.w, r2.w, cb2[14].y
  52: exp r2.w, r2.w
  53: mul r2.w, r2.w, cb2[14].x
  54: mul r3.xyz, r3.xyzx, r2.wwww
  55: mul r1.w, r1.w, cb2[10].z
  56: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  57: mul r1.w, r1.w, r2.w
  58: mul r4.xyz, r1.wwww, cb0[4].xyzx
  59: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  60: dp3 r0.w, r5.xyzx, r5.xyzx
  61: max r0.w, r0.w, l(0.000000)
  62: rsq r0.w, r0.w
  63: mul r5.xyz, r0.wwww, r5.xyzx
  64: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  65: mul r0.w, r0.w, r0.w
  66: max r0.w, r0.w, l(0.100000)
  67: mul r0.w, r0.w, l(6.000120)
  68: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  69: mul r4.xyz, r4.xyzx, r0.wwww
  70: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  71: min r0.w, cb0[7].x, cb2[10].y
  72: ftoi r0.w, r0.w
  73: mov r4.xyz, r3.xyzx
  74: mov r1.w, l(0)
  75: loop 
  76:   uge r2.w, r1.w, r0.w
  77:   breakc_nz r2.w
  78:   and r2.w, r1.w, l(3)
  79:   ushr r3.w, r1.w, l(2)
  80:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  81:   ftoi r2.w, r2.w
  82:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  83:   dp3 r3.w, r5.xyzx, r5.xyzx
  84:   max r3.w, r3.w, l(0.000061)
  85:   rsq r4.w, r3.w
  86:   mul r6.xyz, r4.wwww, r5.xyzx
  87:   rcp r5.w, r3.w
  88:   mul r3.w, r3.w, cb1[r2.w + 512].x
  89:   mad r3.w, -r3.w, r3.w, l(1.000000)
  90:   max r3.w, r3.w, l(0.000000)
  91:   mul r3.w, r3.w, r3.w
  92:   mul r3.w, r3.w, r5.w
  93:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
  94:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  95:   mul r5.w, r5.w, r5.w
  96:   mul r3.w, r3.w, r5.w
  97:   dp3_sat r5.w, r1.xyzx, r6.xyzx
  98:   mul r3.w, r3.w, r5.w
  99:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 100:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
 101:   dp3 r2.w, r5.xyzx, r5.xyzx
 102:   max r2.w, r2.w, l(0.000000)
 103:   rsq r2.w, r2.w
 104:   mul r5.xyz, r2.wwww, r5.xyzx
 105:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 106:   mul r2.w, r2.w, r2.w
 107:   max r2.w, r2.w, l(0.100000)
 108:   mul r2.w, r2.w, l(6.000120)
 109:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 110:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 111:   iadd r1.w, r1.w, l(1)
 112: endloop 
 113: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 114: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 12 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb4[1].w
  30: mad r4.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  31: round_ni r4.xy, r4.xyxx
  32: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.xyxx
  33: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  34: mul r6.xyzw, r5.xxzz, r5.xxzz
  35: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  36: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  37: add r6.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  38: min r6.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  40: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  42: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  43: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  44: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  45: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  46: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  47: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  48: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mov r7.z, r6.x
  50: mov r7.w, r3.x
  51: mov r8.z, r9.x
  52: mov r8.w, r4.z
  53: add r5.xyzw, r7.zwxz, r8.zwxz
  54: mov r6.z, r7.y
  55: mov r6.w, r3.y
  56: mov r9.z, r8.y
  57: mov r9.w, r4.w
  58: add r3.xyw, r6.zyzw, r9.zyzw
  59: div r6.xyz, r8.xzwx, r5.zwyz
  60: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  61: div r7.xyz, r9.zywz, r3.xywx
  62: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  63: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  64: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  65: mov r6.w, r7.x
  66: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  67: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  68: mov r7.w, r6.y
  69: mov r6.yw, r7.yyyz
  70: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  71: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  72: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  73: mul r10.xyzw, r3.xxxy, r5.zwyz
  74: mul r11.xyzw, r3.yyww, r5.xyzw
  75: mul r1.w, r3.w, r5.y
  76: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, r3.z
  77: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, r3.z
  78: mul r3.x, r3.x, r10.y
  79: mad r2.w, r10.x, r2.w, r3.x
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t1.xxxx, s1, r3.z
  81: mad r2.w, r10.z, r3.x, r2.w
  82: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.xyxx, t1.xxxx, s1, r3.z
  83: mad r2.w, r10.w, r3.x, r2.w
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.x, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.y, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  89: mad r2.w, r11.z, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  91: mad r2.w, r11.w, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r1.w, r1.w, r3.x, r2.w
  94: add r2.w, -cb3[29].x, l(1.000000)
  95: mad r1.w, r1.w, cb3[29].x, r2.w
  96: ge r2.w, l(0.000000), r3.z
  97: ge r3.x, r3.z, l(1.000000)
  98: or r2.w, r2.w, r3.x
  99: movc r1.w, r2.w, l(1.000000), r1.w
 100: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 101: dp3 r2.w, r3.xyzx, r3.xyzx
 102: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 103: mul r2.w, r2.w, r2.w
 104: add r3.x, -r1.w, l(1.000000)
 105: mad r1.w, r2.w, r3.x, r1.w
 106: dp3 r2.w, -r2.xyzx, r1.xyzx
 107: add r2.w, r2.w, r2.w
 108: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 109: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
 110: add r2.w, r3.w, l(-1.000000)
 111: mad r2.w, cb2[14].w, r2.w, l(1.000000)
 112: max r2.w, r2.w, l(0.000000)
 113: log r2.w, r2.w
 114: mul r2.w, r2.w, cb2[14].y
 115: exp r2.w, r2.w
 116: mul r2.w, r2.w, cb2[14].x
 117: mul r3.xyz, r3.xyzx, r2.wwww
 118: mul r1.w, r1.w, cb2[10].z
 119: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 120: mul r1.w, r1.w, r2.w
 121: mul r4.xyz, r1.wwww, cb0[4].xyzx
 122: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 123: dp3 r0.w, r5.xyzx, r5.xyzx
 124: max r0.w, r0.w, l(0.000000)
 125: rsq r0.w, r0.w
 126: mul r5.xyz, r0.wwww, r5.xyzx
 127: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 128: mul r0.w, r0.w, r0.w
 129: max r0.w, r0.w, l(0.100000)
 130: mul r0.w, r0.w, l(6.000120)
 131: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 132: mul r4.xyz, r4.xyzx, r0.wwww
 133: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 134: min r0.w, cb0[7].x, cb2[10].y
 135: ftoi r0.w, r0.w
 136: mov r4.xyz, r3.xyzx
 137: mov r1.w, l(0)
 138: loop 
 139:   uge r2.w, r1.w, r0.w
 140:   breakc_nz r2.w
 141:   and r2.w, r1.w, l(3)
 142:   ushr r3.w, r1.w, l(2)
 143:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 144:   ftoi r2.w, r2.w
 145:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 146:   dp3 r3.w, r5.xyzx, r5.xyzx
 147:   max r3.w, r3.w, l(0.000061)
 148:   rsq r4.w, r3.w
 149:   mul r6.xyz, r4.wwww, r5.xyzx
 150:   rcp r5.w, r3.w
 151:   mul r3.w, r3.w, cb1[r2.w + 512].x
 152:   mad r3.w, -r3.w, r3.w, l(1.000000)
 153:   max r3.w, r3.w, l(0.000000)
 154:   mul r3.w, r3.w, r3.w
 155:   mul r3.w, r3.w, r5.w
 156:   dp3 r5.w, cb1[r2.w + 768].xyzx, r6.xyzx
 157:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 158:   mul r5.w, r5.w, r5.w
 159:   mul r3.w, r3.w, r5.w
 160:   dp3_sat r5.w, r1.xyzx, r6.xyzx
 161:   mul r3.w, r3.w, r5.w
 162:   mul r7.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 163:   mad r5.xyz, r5.xyzx, r4.wwww, r2.xyzx
 164:   dp3 r2.w, r5.xyzx, r5.xyzx
 165:   max r2.w, r2.w, l(0.000000)
 166:   rsq r2.w, r2.w
 167:   mul r5.xyz, r2.wwww, r5.xyzx
 168:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 169:   mul r2.w, r2.w, r2.w
 170:   max r2.w, r2.w, l(0.100000)
 171:   mul r2.w, r2.w, l(6.000120)
 172:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 173:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 174:   iadd r1.w, r1.w, l(1)
 175: endloop 
 176: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 8 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb5[1].w
  30: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  31: add r2.w, -cb3[29].x, l(1.000000)
  32: mad r1.w, r1.w, cb3[29].x, r2.w
  33: ge r2.w, l(0.000000), r3.z
  34: ge r3.x, r3.z, l(1.000000)
  35: or r2.w, r2.w, r3.x
  36: movc r1.w, r2.w, l(1.000000), r1.w
  37: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  38: dp3 r2.w, r3.xyzx, r3.xyzx
  39: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  40: mul r2.w, r2.w, r2.w
  41: add r3.x, -r1.w, l(1.000000)
  42: mad r1.w, r2.w, r3.x, r1.w
  43: dp3 r3.x, -r2.xyzx, r1.xyzx
  44: add r3.x, r3.x, r3.x
  45: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  46: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
  47: add r3.w, r3.w, l(-1.000000)
  48: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  49: max r3.w, r3.w, l(0.000000)
  50: log r3.w, r3.w
  51: mul r3.w, r3.w, cb2[14].y
  52: exp r3.w, r3.w
  53: mul r3.w, r3.w, cb2[14].x
  54: mul r3.xyz, r3.xyzx, r3.wwww
  55: mul r1.w, r1.w, cb2[10].z
  56: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
  57: mul r1.w, r1.w, r3.w
  58: mul r4.xyz, r1.wwww, cb0[4].xyzx
  59: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  60: dp3 r0.w, r5.xyzx, r5.xyzx
  61: max r0.w, r0.w, l(0.000000)
  62: rsq r0.w, r0.w
  63: mul r5.xyz, r0.wwww, r5.xyzx
  64: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  65: mul r0.w, r0.w, r0.w
  66: max r0.w, r0.w, l(0.100000)
  67: mul r0.w, r0.w, l(6.000120)
  68: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  69: mul r4.xyz, r4.xyzx, r0.wwww
  70: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
  71: min r0.w, cb0[7].x, cb2[10].y
  72: ftoi r0.w, r0.w
  73: mov r4.xyz, r3.xyzx
  74: mov r1.w, l(0)
  75: loop 
  76:   uge r3.w, r1.w, r0.w
  77:   breakc_nz r3.w
  78:   and r3.w, r1.w, l(3)
  79:   ushr r4.w, r1.w, l(2)
  80:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  81:   ftoi r3.w, r3.w
  82:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  83:   dp3 r4.w, r5.xyzx, r5.xyzx
  84:   max r4.w, r4.w, l(0.000061)
  85:   rsq r5.w, r4.w
  86:   mul r6.xyz, r5.wwww, r5.xyzx
  87:   rcp r6.w, r4.w
  88:   mul r4.w, r4.w, cb1[r3.w + 512].x
  89:   mad r4.w, -r4.w, r4.w, l(1.000000)
  90:   max r4.w, r4.w, l(0.000000)
  91:   mul r4.w, r4.w, r4.w
  92:   mul r4.w, r4.w, r6.w
  93:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  94:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  95:   mul r6.w, r6.w, r6.w
  96:   mul r4.w, r4.w, r6.w
  97:   ishl r6.w, r3.w, l(2)
  98:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
  99:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
 100:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
 101:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
 102:   div r7.xyz, r7.xyzx, r7.wwww
 103:   sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t2.xxxx, s2, r7.z
 104:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 105:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 106:   ge r7.x, l(0.000000), r7.z
 107:   ge r7.y, r7.z, l(1.000000)
 108:   or r7.x, r7.y, r7.x
 109:   movc r6.w, r7.x, l(1.000000), r6.w
 110:   add r7.x, -r6.w, l(1.000000)
 111:   mad r6.w, r2.w, r7.x, r6.w
 112:   mul r4.w, r4.w, r6.w
 113:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 114:   mul r4.w, r4.w, r6.w
 115:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 116:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 117:   dp3 r3.w, r5.xyzx, r5.xyzx
 118:   max r3.w, r3.w, l(0.000000)
 119:   rsq r3.w, r3.w
 120:   mul r5.xyz, r3.wwww, r5.xyzx
 121:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 122:   mul r3.w, r3.w, r3.w
 123:   max r3.w, r3.w, l(0.100000)
 124:   mul r3.w, r3.w, l(6.000120)
 125:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 126:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 127:   iadd r1.w, r1.w, l(1)
 128: endloop 
 129: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 202 math, 16 temp registers, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: mov_sat o0.w, cb5[1].w
  30: mad r4.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  31: round_ni r4.xy, r4.xyxx
  32: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.xyxx
  33: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  34: mul r6.xyzw, r5.xxzz, r5.xxzz
  35: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  36: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  37: add r6.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  38: min r6.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  40: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  42: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  43: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  44: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  45: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  46: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  47: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  48: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mov r7.z, r6.x
  50: mov r7.w, r3.x
  51: mov r8.z, r9.x
  52: mov r8.w, r4.z
  53: add r5.xyzw, r7.zwxz, r8.zwxz
  54: mov r6.z, r7.y
  55: mov r6.w, r3.y
  56: mov r9.z, r8.y
  57: mov r9.w, r4.w
  58: add r3.xyw, r6.zyzw, r9.zyzw
  59: div r6.xyz, r8.xzwx, r5.zwyz
  60: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  61: div r7.xyz, r9.zywz, r3.xywx
  62: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  63: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  64: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  65: mov r6.w, r7.x
  66: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  67: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  68: mov r7.w, r6.y
  69: mov r6.yw, r7.yyyz
  70: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  71: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  72: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  73: mul r10.xyzw, r3.xxxy, r5.zwyz
  74: mul r11.xyzw, r3.yyww, r5.xyzw
  75: mul r1.w, r3.w, r5.y
  76: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, r3.z
  77: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.zwzz, t1.xxxx, s1, r3.z
  78: mul r3.x, r3.x, r10.y
  79: mad r2.w, r10.x, r2.w, r3.x
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t1.xxxx, s1, r3.z
  81: mad r2.w, r10.z, r3.x, r2.w
  82: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.xyxx, t1.xxxx, s1, r3.z
  83: mad r2.w, r10.w, r3.x, r2.w
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.x, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.y, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  89: mad r2.w, r11.z, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  91: mad r2.w, r11.w, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r1.w, r1.w, r3.x, r2.w
  94: add r2.w, -cb3[29].x, l(1.000000)
  95: mad r1.w, r1.w, cb3[29].x, r2.w
  96: ge r2.w, l(0.000000), r3.z
  97: ge r3.x, r3.z, l(1.000000)
  98: or r2.w, r2.w, r3.x
  99: movc r1.w, r2.w, l(1.000000), r1.w
 100: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 101: dp3 r2.w, r3.xyzx, r3.xyzx
 102: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 103: mul r2.w, r2.w, r2.w
 104: add r3.x, -r1.w, l(1.000000)
 105: mad r1.w, r2.w, r3.x, r1.w
 106: dp3 r3.x, -r2.xyzx, r1.xyzx
 107: add r3.x, r3.x, r3.x
 108: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 109: sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0, l(6.000000)
 110: add r3.w, r3.w, l(-1.000000)
 111: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 112: max r3.w, r3.w, l(0.000000)
 113: log r3.w, r3.w
 114: mul r3.w, r3.w, cb2[14].y
 115: exp r3.w, r3.w
 116: mul r3.w, r3.w, cb2[14].x
 117: mul r3.xyz, r3.xyzx, r3.wwww
 118: mul r1.w, r1.w, cb2[10].z
 119: dp3_sat r3.w, r1.xyzx, cb0[3].xyzx
 120: mul r1.w, r1.w, r3.w
 121: mul r4.xyz, r1.wwww, cb0[4].xyzx
 122: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 123: dp3 r0.w, r5.xyzx, r5.xyzx
 124: max r0.w, r0.w, l(0.000000)
 125: rsq r0.w, r0.w
 126: mul r5.xyz, r0.wwww, r5.xyzx
 127: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 128: mul r0.w, r0.w, r0.w
 129: max r0.w, r0.w, l(0.100000)
 130: mul r0.w, r0.w, l(6.000120)
 131: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 132: mul r4.xyz, r4.xyzx, r0.wwww
 133: mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
 134: min r0.w, cb0[7].x, cb2[10].y
 135: ftoi r0.w, r0.w
 136: mov r4.xyz, r3.xyzx
 137: mov r1.w, l(0)
 138: loop 
 139:   uge r3.w, r1.w, r0.w
 140:   breakc_nz r3.w
 141:   and r3.w, r1.w, l(3)
 142:   ushr r4.w, r1.w, l(2)
 143:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
 144:   ftoi r3.w, r3.w
 145:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
 146:   dp3 r4.w, r5.xyzx, r5.xyzx
 147:   max r4.w, r4.w, l(0.000061)
 148:   rsq r5.w, r4.w
 149:   mul r6.xyz, r5.wwww, r5.xyzx
 150:   rcp r6.w, r4.w
 151:   mul r4.w, r4.w, cb1[r3.w + 512].x
 152:   mad r4.w, -r4.w, r4.w, l(1.000000)
 153:   max r4.w, r4.w, l(0.000000)
 154:   mul r4.w, r4.w, r4.w
 155:   mul r4.w, r4.w, r6.w
 156:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
 157:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
 158:   mul r6.w, r6.w, r6.w
 159:   mul r4.w, r4.w, r6.w
 160:   ishl r6.w, r3.w, l(2)
 161:   mul r7.xyzw, v1.yyyy, cb4[r6.w + 1].xyzw
 162:   mad r7.xyzw, cb4[r6.w + 0].xyzw, v1.xxxx, r7.xyzw
 163:   mad r7.xyzw, cb4[r6.w + 2].xyzw, v1.zzzz, r7.xyzw
 164:   add r7.xyzw, r7.xyzw, cb4[r6.w + 3].xyzw
 165:   div r7.xyz, r7.xyzx, r7.wwww
 166:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 167:   round_ni r8.xy, r8.xyxx
 168:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 169:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 170:   mul r10.xyzw, r9.xxzz, r9.xxzz
 171:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 172:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 173:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 174:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 175:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 176:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 177:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 178:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 179:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 180:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 181:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 182:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 183:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 184:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 185:   mov r11.z, r10.x
 186:   mov r11.w, r7.x
 187:   mov r12.z, r13.x
 188:   mov r12.w, r8.z
 189:   add r9.xyzw, r11.zwxz, r12.zwxz
 190:   mov r10.z, r11.y
 191:   mov r10.w, r7.y
 192:   mov r13.z, r12.y
 193:   mov r13.w, r8.w
 194:   add r7.xyw, r10.zyzw, r13.zyzw
 195:   div r10.xyz, r12.xzwx, r9.zwyz
 196:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 197:   div r11.xyz, r13.zywz, r7.xywx
 198:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 199:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 200:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 201:   mov r10.w, r11.x
 202:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 203:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 204:   mov r11.w, r10.y
 205:   mov r10.yw, r11.yyyz
 206:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 207:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 208:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 209:   mul r14.xyzw, r7.xxxy, r9.zwyz
 210:   mul r15.xyzw, r7.yyww, r9.xyzw
 211:   mul r6.w, r7.w, r9.y
 212:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r12.xyxx, t2.xxxx, s2, r7.z
 213:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.zwzz, t2.xxxx, s2, r7.z
 214:   mul r7.y, r7.y, r14.y
 215:   mad r7.x, r14.x, r7.x, r7.y
 216:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.zwzz, t2.xxxx, s2, r7.z
 217:   mad r7.x, r14.z, r7.y, r7.x
 218:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.xyxx, t2.xxxx, s2, r7.z
 219:   mad r7.x, r14.w, r7.y, r7.x
 220:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.xyxx, t2.xxxx, s2, r7.z
 221:   mad r7.x, r15.x, r7.y, r7.x
 222:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r13.zwzz, t2.xxxx, s2, r7.z
 223:   mad r7.x, r15.y, r7.y, r7.x
 224:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r11.zwzz, t2.xxxx, s2, r7.z
 225:   mad r7.x, r15.z, r7.y, r7.x
 226:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.xyxx, t2.xxxx, s2, r7.z
 227:   mad r7.x, r15.w, r7.y, r7.x
 228:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r10.zwzz, t2.xxxx, s2, r7.z
 229:   mad r6.w, r6.w, r7.y, r7.x
 230:   add r7.x, l(1.000000), -cb4[r3.w + 1024].x
 231:   mad r6.w, r6.w, cb4[r3.w + 1024].x, r7.x
 232:   ge r7.x, l(0.000000), r7.z
 233:   ge r7.y, r7.z, l(1.000000)
 234:   or r7.x, r7.y, r7.x
 235:   movc r6.w, r7.x, l(1.000000), r6.w
 236:   add r7.x, -r6.w, l(1.000000)
 237:   mad r6.w, r2.w, r7.x, r6.w
 238:   mul r4.w, r4.w, r6.w
 239:   dp3_sat r6.w, r1.xyzx, r6.xyzx
 240:   mul r4.w, r4.w, r6.w
 241:   mul r7.xyz, r4.wwww, cb1[r3.w + 256].xyzx
 242:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 243:   dp3 r3.w, r5.xyzx, r5.xyzx
 244:   max r3.w, r3.w, l(0.000000)
 245:   rsq r3.w, r3.w
 246:   mul r5.xyz, r3.wwww, r5.xyzx
 247:   dp3_sat r3.w, r6.xyzx, r5.xyzx
 248:   mul r3.w, r3.w, r3.w
 249:   max r3.w, r3.w, l(0.100000)
 250:   mul r3.w, r3.w, l(6.000120)
 251:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 252:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
 253:   iadd r1.w, r1.w, l(1)
 254: endloop 
 255: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 256: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 66 math, 4 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: mul r1.xyz, r0.xxxx, cb0[4].xyzx
  41: dp3 r0.x, v4.xyzx, v4.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: rsq r0.x, r0.x
  44: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  45: mul r3.xyz, r0.xxxx, v4.xyzx
  46: dp3 r0.x, r2.xyzx, r2.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: rsq r0.x, r0.x
  49: mul r2.xyz, r0.xxxx, r2.xyzx
  50: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  51: mul r0.x, r0.x, r0.x
  52: max r0.x, r0.x, l(0.100000)
  53: mul r0.x, r0.x, l(6.000120)
  54: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  55: mul r1.xyz, r1.xyzx, r0.xxxx
  56: dp3 r0.x, -r3.xyzx, r0.yzwy
  57: add r0.x, r0.x, r0.x
  58: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  59: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  60: add r0.w, r0.w, l(-1.000000)
  61: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  62: max r0.w, r0.w, l(0.000000)
  63: log r0.w, r0.w
  64: mul r0.w, r0.w, cb1[14].y
  65: exp r0.w, r0.w
  66: mul r0.w, r0.w, cb1[14].x
  67: mul r0.xyz, r0.xyzx, r0.wwww
  68: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  69: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  70: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  71: mov_sat o0.w, cb3[1].w
  72: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 7 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: mul r1.xyz, r0.xxxx, cb0[4].xyzx
 102: dp3 r0.x, v4.xyzx, v4.xyzx
 103: max r0.x, r0.x, l(0.000000)
 104: rsq r0.x, r0.x
 105: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 106: mul r3.xyz, r0.xxxx, v4.xyzx
 107: dp3 r0.x, r2.xyzx, r2.xyzx
 108: max r0.x, r0.x, l(0.000000)
 109: rsq r0.x, r0.x
 110: mul r2.xyz, r0.xxxx, r2.xyzx
 111: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 112: mul r0.x, r0.x, r0.x
 113: max r0.x, r0.x, l(0.100000)
 114: mul r0.x, r0.x, l(6.000120)
 115: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 116: mul r1.xyz, r1.xyzx, r0.xxxx
 117: dp3 r0.x, -r3.xyzx, r0.yzwy
 118: add r0.x, r0.x, r0.x
 119: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 120: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 121: add r0.w, r0.w, l(-1.000000)
 122: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 123: max r0.w, r0.w, l(0.000000)
 124: log r0.w, r0.w
 125: mul r0.w, r0.w, cb1[14].y
 126: exp r0.w, r0.w
 127: mul r0.w, r0.w, cb1[14].x
 128: mul r0.xyz, r0.xyzx, r0.wwww
 129: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
 130: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 131: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 132: mov_sat o0.w, cb3[1].w
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 96 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.xxxx, s1, r7.z
  83:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
  84:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
  85:   ge r7.y, l(0.000000), r7.z
  86:   ge r7.z, r7.z, l(1.000000)
  87:   or r7.y, r7.z, r7.y
  88:   movc r7.x, r7.y, l(1.000000), r7.x
  89:   add r7.y, -r7.x, l(1.000000)
  90:   mad r7.x, r1.w, r7.y, r7.x
  91:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
  92:   mul r4.w, r5.w, r7.x
  93:   dp3_sat r5.w, r1.xyzx, r6.yzwy
  94:   mul r4.w, r4.w, r5.w
  95:   mul r7.xyz, r4.wwww, r7.yzwy
  96:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
  97:   dp3 r4.w, r5.xyzx, r5.xyzx
  98:   max r4.w, r4.w, l(0.000000)
  99:   rsq r4.w, r4.w
 100:   mul r5.xyz, r4.wwww, r5.xyzx
 101:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 102:   mul r4.w, r4.w, r4.w
 103:   max r4.w, r4.w, l(0.100000)
 104:   mul r4.w, r4.w, l(6.000120)
 105:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 106:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 107:   iadd r3.w, r3.w, l(1)
 108: endloop 
 109: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 140 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  83:   round_ni r8.xy, r8.xyxx
  84:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  85:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  86:   mul r10.xyzw, r9.xxzz, r9.xxzz
  87:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  88:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  89:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  90:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  91:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  92:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  94:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  95:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  96:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  98:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  99:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 100:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 101:   mov r11.z, r10.x
 102:   mov r11.w, r7.x
 103:   mov r12.z, r13.x
 104:   mov r12.w, r8.z
 105:   add r9.xyzw, r11.zwxz, r12.zwxz
 106:   mov r10.z, r11.y
 107:   mov r10.w, r7.y
 108:   mov r13.z, r12.y
 109:   mov r13.w, r8.w
 110:   add r7.xyw, r10.zyzw, r13.zyzw
 111:   div r10.xyz, r12.xzwx, r9.zwyz
 112:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 113:   div r11.xyz, r13.zywz, r7.xywx
 114:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 115:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 116:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 117:   mov r10.w, r11.x
 118:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 119:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 120:   mov r11.w, r10.y
 121:   mov r10.yw, r11.yyyz
 122:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 123:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 124:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 125:   mul r14.xyzw, r7.xxxy, r9.zwyz
 126:   mul r15.xyzw, r7.yyww, r9.xyzw
 127:   mul r7.x, r7.w, r9.y
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t1.xxxx, s1, r7.z
 129:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t1.xxxx, s1, r7.z
 130:   mul r7.w, r7.w, r14.y
 131:   mad r7.y, r14.x, r7.y, r7.w
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t1.xxxx, s1, r7.z
 133:   mad r7.y, r14.z, r7.w, r7.y
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t1.xxxx, s1, r7.z
 135:   mad r7.y, r14.w, r7.w, r7.y
 136:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t1.xxxx, s1, r7.z
 137:   mad r7.y, r15.x, r7.w, r7.y
 138:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t1.xxxx, s1, r7.z
 139:   mad r7.y, r15.y, r7.w, r7.y
 140:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t1.xxxx, s1, r7.z
 141:   mad r7.y, r15.z, r7.w, r7.y
 142:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t1.xxxx, s1, r7.z
 143:   mad r7.y, r15.w, r7.w, r7.y
 144:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t1.xxxx, s1, r7.z
 145:   mad r7.x, r7.x, r7.w, r7.y
 146:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 147:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 148:   ge r7.y, l(0.000000), r7.z
 149:   ge r7.z, r7.z, l(1.000000)
 150:   or r7.y, r7.z, r7.y
 151:   movc r7.x, r7.y, l(1.000000), r7.x
 152:   add r7.y, -r7.x, l(1.000000)
 153:   mad r7.x, r1.w, r7.y, r7.x
 154:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
 155:   mul r4.w, r5.w, r7.x
 156:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 157:   mul r4.w, r4.w, r5.w
 158:   mul r7.xyz, r4.wwww, r7.yzwy
 159:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 160:   dp3 r4.w, r5.xyzx, r5.xyzx
 161:   max r4.w, r4.w, l(0.000000)
 162:   rsq r4.w, r4.w
 163:   mul r5.xyz, r4.wwww, r5.xyzx
 164:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 165:   mul r4.w, r4.w, r4.w
 166:   max r4.w, r4.w, l(0.100000)
 167:   mul r4.w, r4.w, l(6.000120)
 168:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 169:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 170:   iadd r3.w, r3.w, l(1)
 171: endloop 
 172: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 173: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 96 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.xxxx, s1, r7.z
  83:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
  84:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
  85:   ge r7.y, l(0.000000), r7.z
  86:   ge r7.z, r7.z, l(1.000000)
  87:   or r7.y, r7.z, r7.y
  88:   movc r7.x, r7.y, l(1.000000), r7.x
  89:   add r7.y, -r7.x, l(1.000000)
  90:   mad r7.x, r1.w, r7.y, r7.x
  91:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
  92:   mul r4.w, r5.w, r7.x
  93:   dp3_sat r5.w, r1.xyzx, r6.yzwy
  94:   mul r4.w, r4.w, r5.w
  95:   mul r7.xyz, r4.wwww, r7.yzwy
  96:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
  97:   dp3 r4.w, r5.xyzx, r5.xyzx
  98:   max r4.w, r4.w, l(0.000000)
  99:   rsq r4.w, r4.w
 100:   mul r5.xyz, r4.wwww, r5.xyzx
 101:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 102:   mul r4.w, r4.w, r4.w
 103:   max r4.w, r4.w, l(0.100000)
 104:   mul r4.w, r4.w, l(6.000120)
 105:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 106:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 107:   iadd r3.w, r3.w, l(1)
 108: endloop 
 109: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 140 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  83:   round_ni r8.xy, r8.xyxx
  84:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  85:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  86:   mul r10.xyzw, r9.xxzz, r9.xxzz
  87:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  88:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  89:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  90:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  91:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  92:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  94:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  95:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  96:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  98:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  99:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 100:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 101:   mov r11.z, r10.x
 102:   mov r11.w, r7.x
 103:   mov r12.z, r13.x
 104:   mov r12.w, r8.z
 105:   add r9.xyzw, r11.zwxz, r12.zwxz
 106:   mov r10.z, r11.y
 107:   mov r10.w, r7.y
 108:   mov r13.z, r12.y
 109:   mov r13.w, r8.w
 110:   add r7.xyw, r10.zyzw, r13.zyzw
 111:   div r10.xyz, r12.xzwx, r9.zwyz
 112:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 113:   div r11.xyz, r13.zywz, r7.xywx
 114:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 115:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 116:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 117:   mov r10.w, r11.x
 118:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 119:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 120:   mov r11.w, r10.y
 121:   mov r10.yw, r11.yyyz
 122:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 123:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 124:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 125:   mul r14.xyzw, r7.xxxy, r9.zwyz
 126:   mul r15.xyzw, r7.yyww, r9.xyzw
 127:   mul r7.x, r7.w, r9.y
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t1.xxxx, s1, r7.z
 129:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t1.xxxx, s1, r7.z
 130:   mul r7.w, r7.w, r14.y
 131:   mad r7.y, r14.x, r7.y, r7.w
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t1.xxxx, s1, r7.z
 133:   mad r7.y, r14.z, r7.w, r7.y
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t1.xxxx, s1, r7.z
 135:   mad r7.y, r14.w, r7.w, r7.y
 136:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t1.xxxx, s1, r7.z
 137:   mad r7.y, r15.x, r7.w, r7.y
 138:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t1.xxxx, s1, r7.z
 139:   mad r7.y, r15.y, r7.w, r7.y
 140:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t1.xxxx, s1, r7.z
 141:   mad r7.y, r15.z, r7.w, r7.y
 142:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t1.xxxx, s1, r7.z
 143:   mad r7.y, r15.w, r7.w, r7.y
 144:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t1.xxxx, s1, r7.z
 145:   mad r7.x, r7.x, r7.w, r7.y
 146:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 147:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 148:   ge r7.y, l(0.000000), r7.z
 149:   ge r7.z, r7.z, l(1.000000)
 150:   or r7.y, r7.z, r7.y
 151:   movc r7.x, r7.y, l(1.000000), r7.x
 152:   add r7.y, -r7.x, l(1.000000)
 153:   mad r7.x, r1.w, r7.y, r7.x
 154:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
 155:   mul r4.w, r5.w, r7.x
 156:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 157:   mul r4.w, r4.w, r5.w
 158:   mul r7.xyz, r4.wwww, r7.yzwy
 159:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 160:   dp3 r4.w, r5.xyzx, r5.xyzx
 161:   max r4.w, r4.w, l(0.000000)
 162:   rsq r4.w, r4.w
 163:   mul r5.xyz, r4.wwww, r5.xyzx
 164:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 165:   mul r4.w, r4.w, r4.w
 166:   max r4.w, r4.w, l(0.100000)
 167:   mul r4.w, r4.w, l(6.000120)
 168:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 169:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 170:   iadd r3.w, r3.w, l(1)
 171: endloop 
 172: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 173: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 90 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb4[1].w
  13: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  14: add r2.w, -cb3[29].x, l(1.000000)
  15: mad r1.w, r1.w, cb3[29].x, r2.w
  16: ge r2.w, l(0.000000), v7.z
  17: ge r3.y, v7.z, l(1.000000)
  18: or r2.w, r2.w, r3.y
  19: movc r1.w, r2.w, l(1.000000), r1.w
  20: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  21: dp3 r2.w, r4.xyzx, r4.xyzx
  22: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  23: mul r2.w, r2.w, r2.w
  24: add r3.y, -r1.w, l(1.000000)
  25: mad r1.w, r2.w, r3.y, r1.w
  26: sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xzxx, t2.yzwx, s2
  27: add r3.x, r2.w, l(-1.000000)
  28: mad r3.x, cb0[6].w, r3.x, l(1.000000)
  29: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  30: min r2.w, r2.w, l(1.000000)
  31: dp3 r4.x, -r2.xyzx, r1.xyzx
  32: add r4.x, r4.x, r4.x
  33: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  34: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  35: add r4.w, r4.w, l(-1.000000)
  36: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  37: max r4.w, r4.w, l(0.000000)
  38: log r4.w, r4.w
  39: mul r4.w, r4.w, cb2[14].y
  40: exp r4.w, r4.w
  41: mul r4.w, r4.w, cb2[14].x
  42: mul r4.xyz, r4.xyzx, r4.wwww
  43: mul r4.xyz, r2.wwww, r4.xyzx
  44: mul r1.w, r1.w, cb2[10].z
  45: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  46: mul r1.w, r1.w, r2.w
  47: mul r3.yzw, r1.wwww, r3.yyzw
  48: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  49: dp3 r0.w, r5.xyzx, r5.xyzx
  50: max r0.w, r0.w, l(0.000000)
  51: rsq r0.w, r0.w
  52: mul r5.xyz, r0.wwww, r5.xyzx
  53: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  54: mul r0.w, r0.w, r0.w
  55: max r0.w, r0.w, l(0.100000)
  56: mul r0.w, r0.w, l(6.000120)
  57: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  58: mul r3.yzw, r3.yyzw, r0.wwww
  59: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
  60: min r0.w, cb0[7].x, cb2[10].y
  61: ftoi r0.w, r0.w
  62: mov r4.xyz, r3.yzwy
  63: mov r1.w, l(0)
  64: loop 
  65:   uge r2.w, r1.w, r0.w
  66:   breakc_nz r2.w
  67:   and r2.w, r1.w, l(3)
  68:   ushr r4.w, r1.w, l(2)
  69:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
  70:   ftoi r2.w, r2.w
  71:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  72:   dp3 r4.w, r5.xyzx, r5.xyzx
  73:   max r4.w, r4.w, l(0.000061)
  74:   rsq r5.w, r4.w
  75:   mul r6.xyz, r5.wwww, r5.xyzx
  76:   rcp r6.w, r4.w
  77:   mul r4.w, r4.w, cb1[r2.w + 512].x
  78:   mad r4.w, -r4.w, r4.w, l(1.000000)
  79:   max r4.w, r4.w, l(0.000000)
  80:   mul r4.w, r4.w, r4.w
  81:   mul r4.w, r4.w, r6.w
  82:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
  83:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  84:   mul r6.w, r6.w, r6.w
  85:   mul r4.w, r4.w, r6.w
  86:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
  87:   dp3_sat r2.w, r1.xyzx, r6.xyzx
  88:   mul r2.w, r2.w, r4.w
  89:   mul r7.xyz, r2.wwww, r7.xyzx
  90:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  91:   dp3 r2.w, r5.xyzx, r5.xyzx
  92:   max r2.w, r2.w, l(0.000000)
  93:   rsq r2.w, r2.w
  94:   mul r5.xyz, r2.wwww, r5.xyzx
  95:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  96:   mul r2.w, r2.w, r2.w
  97:   max r2.w, r2.w, l(0.100000)
  98:   mul r2.w, r2.w, l(6.000120)
  99:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 100:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 101:   iadd r1.w, r1.w, l(1)
 102: endloop 
 103: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 134 math, 13 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb4[1].w
  13: mad r3.yw, v7.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  14: round_ni r3.yw, r3.yyyw
  15: mad r4.xy, v7.xyxx, cb3[30].zwzz, -r3.ywyy
  16: add r5.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  17: mul r6.xyzw, r5.xxzz, r5.xxzz
  18: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  19: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r4.xxyx
  20: add r6.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  21: min r6.zw, r4.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  22: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  23: max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  24: mad r4.xy, -r4.xyxx, r4.xyxx, r5.ywyy
  25: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  26: add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  27: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  29: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: mul r9.xy, r4.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  31: mul r4.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  32: mov r7.z, r6.x
  33: mov r7.w, r4.x
  34: mov r8.z, r9.x
  35: mov r8.w, r4.z
  36: add r5.xyzw, r7.zwxz, r8.zwxz
  37: mov r6.z, r7.y
  38: mov r6.w, r4.y
  39: mov r9.z, r8.y
  40: mov r9.w, r4.w
  41: add r4.xyz, r6.zywz, r9.zywz
  42: div r6.xyz, r8.xzwx, r5.zwyz
  43: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  44: div r7.xyz, r9.zywz, r4.xyzx
  45: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  46: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  47: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  48: mov r6.w, r7.x
  49: mad r8.xyzw, r3.ywyw, cb3[30].xyxy, r6.ywxw
  50: mad r9.xy, r3.ywyy, cb3[30].xyxx, r6.zwzz
  51: mov r7.w, r6.y
  52: mov r6.yw, r7.yyyz
  53: mad r10.xyzw, r3.ywyw, cb3[30].xyxy, r6.xyzy
  54: mad r7.xyzw, r3.ywyw, cb3[30].xyxy, r7.wywz
  55: mad r6.xyzw, r3.ywyw, cb3[30].xyxy, r6.xwzw
  56: mul r11.xyzw, r4.xxxy, r5.zwyz
  57: mul r12.xyzw, r4.yyzz, r5.xyzw
  58: mul r1.w, r4.z, r5.y
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, v7.z
  60: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r8.zwzz, t1.xxxx, s1, v7.z
  61: mul r3.y, r3.y, r11.y
  62: mad r2.w, r11.x, r2.w, r3.y
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r9.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.z, r3.y, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.xyxx, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.w, r3.y, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.xyxx, t1.xxxx, s1, v7.z
  68: mad r2.w, r12.x, r3.y, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.zwzz, t1.xxxx, s1, v7.z
  70: mad r2.w, r12.y, r3.y, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.zwzz, t1.xxxx, s1, v7.z
  72: mad r2.w, r12.z, r3.y, r2.w
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t1.xxxx, s1, v7.z
  74: mad r2.w, r12.w, r3.y, r2.w
  75: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.zwzz, t1.xxxx, s1, v7.z
  76: mad r1.w, r1.w, r3.y, r2.w
  77: add r2.w, -cb3[29].x, l(1.000000)
  78: mad r1.w, r1.w, cb3[29].x, r2.w
  79: ge r2.w, l(0.000000), v7.z
  80: ge r3.y, v7.z, l(1.000000)
  81: or r2.w, r2.w, r3.y
  82: movc r1.w, r2.w, l(1.000000), r1.w
  83: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  86: mul r2.w, r2.w, r2.w
  87: add r3.y, -r1.w, l(1.000000)
  88: mad r1.w, r2.w, r3.y, r1.w
  89: sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xzxx, t2.yzwx, s2
  90: add r3.x, r2.w, l(-1.000000)
  91: mad r3.x, cb0[6].w, r3.x, l(1.000000)
  92: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  93: min r2.w, r2.w, l(1.000000)
  94: dp3 r4.x, -r2.xyzx, r1.xyzx
  95: add r4.x, r4.x, r4.x
  96: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  97: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  98: add r4.w, r4.w, l(-1.000000)
  99: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 100: max r4.w, r4.w, l(0.000000)
 101: log r4.w, r4.w
 102: mul r4.w, r4.w, cb2[14].y
 103: exp r4.w, r4.w
 104: mul r4.w, r4.w, cb2[14].x
 105: mul r4.xyz, r4.xyzx, r4.wwww
 106: mul r4.xyz, r2.wwww, r4.xyzx
 107: mul r1.w, r1.w, cb2[10].z
 108: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 109: mul r1.w, r1.w, r2.w
 110: mul r3.yzw, r1.wwww, r3.yyzw
 111: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 112: dp3 r0.w, r5.xyzx, r5.xyzx
 113: max r0.w, r0.w, l(0.000000)
 114: rsq r0.w, r0.w
 115: mul r5.xyz, r0.wwww, r5.xyzx
 116: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 117: mul r0.w, r0.w, r0.w
 118: max r0.w, r0.w, l(0.100000)
 119: mul r0.w, r0.w, l(6.000120)
 120: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 121: mul r3.yzw, r3.yyzw, r0.wwww
 122: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
 123: min r0.w, cb0[7].x, cb2[10].y
 124: ftoi r0.w, r0.w
 125: mov r4.xyz, r3.yzwy
 126: mov r1.w, l(0)
 127: loop 
 128:   uge r2.w, r1.w, r0.w
 129:   breakc_nz r2.w
 130:   and r2.w, r1.w, l(3)
 131:   ushr r4.w, r1.w, l(2)
 132:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
 133:   ftoi r2.w, r2.w
 134:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 135:   dp3 r4.w, r5.xyzx, r5.xyzx
 136:   max r4.w, r4.w, l(0.000061)
 137:   rsq r5.w, r4.w
 138:   mul r6.xyz, r5.wwww, r5.xyzx
 139:   rcp r6.w, r4.w
 140:   mul r4.w, r4.w, cb1[r2.w + 512].x
 141:   mad r4.w, -r4.w, r4.w, l(1.000000)
 142:   max r4.w, r4.w, l(0.000000)
 143:   mul r4.w, r4.w, r4.w
 144:   mul r4.w, r4.w, r6.w
 145:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
 146:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 147:   mul r6.w, r6.w, r6.w
 148:   mul r4.w, r4.w, r6.w
 149:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
 150:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 151:   mul r2.w, r2.w, r4.w
 152:   mul r7.xyz, r2.wwww, r7.xyzx
 153:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 154:   dp3 r2.w, r5.xyzx, r5.xyzx
 155:   max r2.w, r2.w, l(0.000000)
 156:   rsq r2.w, r2.w
 157:   mul r5.xyz, r2.wwww, r5.xyzx
 158:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 159:   mul r2.w, r2.w, r2.w
 160:   max r2.w, r2.w, l(0.100000)
 161:   mul r2.w, r2.w, l(6.000120)
 162:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 163:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 164:   iadd r1.w, r1.w, l(1)
 165: endloop 
 166: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 104 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  14: add r2.w, -cb3[29].x, l(1.000000)
  15: mad r1.w, r1.w, cb3[29].x, r2.w
  16: ge r2.w, l(0.000000), v7.z
  17: ge r3.y, v7.z, l(1.000000)
  18: or r2.w, r2.w, r3.y
  19: movc r1.w, r2.w, l(1.000000), r1.w
  20: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  21: dp3 r2.w, r4.xyzx, r4.xyzx
  22: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  23: mul r2.w, r2.w, r2.w
  24: add r3.y, -r1.w, l(1.000000)
  25: mad r1.w, r2.w, r3.y, r1.w
  26: sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xzxx, t3.xyzw, s3
  27: add r3.y, r3.x, l(-1.000000)
  28: mad r3.y, cb0[6].w, r3.y, l(1.000000)
  29: mul r4.xyz, r3.yyyy, cb0[4].xyzx
  30: min r3.x, r3.x, l(1.000000)
  31: dp3 r3.z, -r2.xyzx, r1.xyzx
  32: add r3.z, r3.z, r3.z
  33: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
  34: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
  35: add r3.z, r5.w, l(-1.000000)
  36: mad r3.z, cb2[14].w, r3.z, l(1.000000)
  37: max r3.z, r3.z, l(0.000000)
  38: log r3.z, r3.z
  39: mul r3.z, r3.z, cb2[14].y
  40: exp r3.z, r3.z
  41: mul r3.z, r3.z, cb2[14].x
  42: mul r5.xyz, r5.xyzx, r3.zzzz
  43: mul r3.xzw, r3.xxxx, r5.xxyz
  44: mul r1.w, r1.w, cb2[10].z
  45: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
  46: mul r1.w, r1.w, r4.w
  47: mul r4.xyz, r1.wwww, r4.xyzx
  48: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  49: dp3 r0.w, r5.xyzx, r5.xyzx
  50: max r0.w, r0.w, l(0.000000)
  51: rsq r0.w, r0.w
  52: mul r5.xyz, r0.wwww, r5.xyzx
  53: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  54: mul r0.w, r0.w, r0.w
  55: max r0.w, r0.w, l(0.100000)
  56: mul r0.w, r0.w, l(6.000120)
  57: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  58: mul r4.xyz, r4.xyzx, r0.wwww
  59: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
  60: min r0.w, cb0[7].x, cb2[10].y
  61: ftoi r0.w, r0.w
  62: mov r4.xyz, r3.xzwx
  63: mov r1.w, l(0)
  64: loop 
  65:   uge r4.w, r1.w, r0.w
  66:   breakc_nz r4.w
  67:   and r4.w, r1.w, l(3)
  68:   ushr r5.x, r1.w, l(2)
  69:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  70:   ftoi r4.w, r4.w
  71:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  72:   dp3 r5.w, r5.xyzx, r5.xyzx
  73:   max r5.w, r5.w, l(0.000061)
  74:   rsq r6.x, r5.w
  75:   mul r6.yzw, r5.xxyz, r6.xxxx
  76:   rcp r7.x, r5.w
  77:   mul r5.w, r5.w, cb1[r4.w + 512].x
  78:   mad r5.w, -r5.w, r5.w, l(1.000000)
  79:   max r5.w, r5.w, l(0.000000)
  80:   mul r5.w, r5.w, r5.w
  81:   mul r5.w, r5.w, r7.x
  82:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  83:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  84:   mul r7.x, r7.x, r7.x
  85:   mul r5.w, r5.w, r7.x
  86:   ishl r7.x, r4.w, l(2)
  87:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  88:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  89:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  90:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  91:   div r7.xyz, r7.xyzx, r7.wwww
  92:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t2.xxxx, s2, r7.z
  93:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
  94:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
  95:   ge r7.y, l(0.000000), r7.z
  96:   ge r7.z, r7.z, l(1.000000)
  97:   or r7.y, r7.z, r7.y
  98:   movc r7.x, r7.y, l(1.000000), r7.x
  99:   add r7.y, -r7.x, l(1.000000)
 100:   mad r7.x, r2.w, r7.y, r7.x
 101:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 102:   mul r4.w, r5.w, r7.x
 103:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 104:   mul r4.w, r4.w, r5.w
 105:   mul r7.xyz, r4.wwww, r7.yzwy
 106:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 107:   dp3 r4.w, r5.xyzx, r5.xyzx
 108:   max r4.w, r4.w, l(0.000000)
 109:   rsq r4.w, r4.w
 110:   mul r5.xyz, r4.wwww, r5.xyzx
 111:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 112:   mul r4.w, r4.w, r4.w
 113:   max r4.w, r4.w, l(0.100000)
 114:   mul r4.w, r4.w, l(6.000120)
 115:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 116:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 117:   iadd r1.w, r1.w, l(1)
 118: endloop 
 119: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 120: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 192 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: mad r3.yw, v7.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  14: round_ni r3.yw, r3.yyyw
  15: mad r4.xy, v7.xyxx, cb3[30].zwzz, -r3.ywyy
  16: add r5.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  17: mul r6.xyzw, r5.xxzz, r5.xxzz
  18: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  19: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r4.xxyx
  20: add r6.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  21: min r6.zw, r4.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  22: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  23: max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  24: mad r4.xy, -r4.xyxx, r4.xyxx, r5.ywyy
  25: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  26: add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  27: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  29: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: mul r9.xy, r4.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  31: mul r4.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  32: mov r7.z, r6.x
  33: mov r7.w, r4.x
  34: mov r8.z, r9.x
  35: mov r8.w, r4.z
  36: add r5.xyzw, r7.zwxz, r8.zwxz
  37: mov r6.z, r7.y
  38: mov r6.w, r4.y
  39: mov r9.z, r8.y
  40: mov r9.w, r4.w
  41: add r4.xyz, r6.zywz, r9.zywz
  42: div r6.xyz, r8.xzwx, r5.zwyz
  43: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  44: div r7.xyz, r9.zywz, r4.xyzx
  45: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  46: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  47: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  48: mov r6.w, r7.x
  49: mad r8.xyzw, r3.ywyw, cb3[30].xyxy, r6.ywxw
  50: mad r9.xy, r3.ywyy, cb3[30].xyxx, r6.zwzz
  51: mov r7.w, r6.y
  52: mov r6.yw, r7.yyyz
  53: mad r10.xyzw, r3.ywyw, cb3[30].xyxy, r6.xyzy
  54: mad r7.xyzw, r3.ywyw, cb3[30].xyxy, r7.wywz
  55: mad r6.xyzw, r3.ywyw, cb3[30].xyxy, r6.xwzw
  56: mul r11.xyzw, r4.xxxy, r5.zwyz
  57: mul r12.xyzw, r4.yyzz, r5.xyzw
  58: mul r1.w, r4.z, r5.y
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, v7.z
  60: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r8.zwzz, t1.xxxx, s1, v7.z
  61: mul r3.y, r3.y, r11.y
  62: mad r2.w, r11.x, r2.w, r3.y
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r9.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.z, r3.y, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.xyxx, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.w, r3.y, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.xyxx, t1.xxxx, s1, v7.z
  68: mad r2.w, r12.x, r3.y, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.zwzz, t1.xxxx, s1, v7.z
  70: mad r2.w, r12.y, r3.y, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.zwzz, t1.xxxx, s1, v7.z
  72: mad r2.w, r12.z, r3.y, r2.w
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t1.xxxx, s1, v7.z
  74: mad r2.w, r12.w, r3.y, r2.w
  75: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.zwzz, t1.xxxx, s1, v7.z
  76: mad r1.w, r1.w, r3.y, r2.w
  77: add r2.w, -cb3[29].x, l(1.000000)
  78: mad r1.w, r1.w, cb3[29].x, r2.w
  79: ge r2.w, l(0.000000), v7.z
  80: ge r3.y, v7.z, l(1.000000)
  81: or r2.w, r2.w, r3.y
  82: movc r1.w, r2.w, l(1.000000), r1.w
  83: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  86: mul r2.w, r2.w, r2.w
  87: add r3.y, -r1.w, l(1.000000)
  88: mad r1.w, r2.w, r3.y, r1.w
  89: sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xzxx, t3.xyzw, s3
  90: add r3.y, r3.x, l(-1.000000)
  91: mad r3.y, cb0[6].w, r3.y, l(1.000000)
  92: mul r4.xyz, r3.yyyy, cb0[4].xyzx
  93: min r3.x, r3.x, l(1.000000)
  94: dp3 r3.z, -r2.xyzx, r1.xyzx
  95: add r3.z, r3.z, r3.z
  96: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
  97: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
  98: add r3.z, r5.w, l(-1.000000)
  99: mad r3.z, cb2[14].w, r3.z, l(1.000000)
 100: max r3.z, r3.z, l(0.000000)
 101: log r3.z, r3.z
 102: mul r3.z, r3.z, cb2[14].y
 103: exp r3.z, r3.z
 104: mul r3.z, r3.z, cb2[14].x
 105: mul r5.xyz, r5.xyzx, r3.zzzz
 106: mul r3.xzw, r3.xxxx, r5.xxyz
 107: mul r1.w, r1.w, cb2[10].z
 108: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
 109: mul r1.w, r1.w, r4.w
 110: mul r4.xyz, r1.wwww, r4.xyzx
 111: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 112: dp3 r0.w, r5.xyzx, r5.xyzx
 113: max r0.w, r0.w, l(0.000000)
 114: rsq r0.w, r0.w
 115: mul r5.xyz, r0.wwww, r5.xyzx
 116: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 117: mul r0.w, r0.w, r0.w
 118: max r0.w, r0.w, l(0.100000)
 119: mul r0.w, r0.w, l(6.000120)
 120: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 121: mul r4.xyz, r4.xyzx, r0.wwww
 122: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
 123: min r0.w, cb0[7].x, cb2[10].y
 124: ftoi r0.w, r0.w
 125: mov r4.xyz, r3.xzwx
 126: mov r1.w, l(0)
 127: loop 
 128:   uge r4.w, r1.w, r0.w
 129:   breakc_nz r4.w
 130:   and r4.w, r1.w, l(3)
 131:   ushr r5.x, r1.w, l(2)
 132:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
 133:   ftoi r4.w, r4.w
 134:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
 135:   dp3 r5.w, r5.xyzx, r5.xyzx
 136:   max r5.w, r5.w, l(0.000061)
 137:   rsq r6.x, r5.w
 138:   mul r6.yzw, r5.xxyz, r6.xxxx
 139:   rcp r7.x, r5.w
 140:   mul r5.w, r5.w, cb1[r4.w + 512].x
 141:   mad r5.w, -r5.w, r5.w, l(1.000000)
 142:   max r5.w, r5.w, l(0.000000)
 143:   mul r5.w, r5.w, r5.w
 144:   mul r5.w, r5.w, r7.x
 145:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
 146:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
 147:   mul r7.x, r7.x, r7.x
 148:   mul r5.w, r5.w, r7.x
 149:   ishl r7.x, r4.w, l(2)
 150:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
 151:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
 152:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
 153:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
 154:   div r7.xyz, r7.xyzx, r7.wwww
 155:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 156:   round_ni r8.xy, r8.xyxx
 157:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 158:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 159:   mul r10.xyzw, r9.xxzz, r9.xxzz
 160:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 161:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 162:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 163:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 164:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 165:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 166:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 167:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 168:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 169:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 170:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 171:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 172:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 173:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 174:   mov r11.z, r10.x
 175:   mov r11.w, r7.x
 176:   mov r12.z, r13.x
 177:   mov r12.w, r8.z
 178:   add r9.xyzw, r11.zwxz, r12.zwxz
 179:   mov r10.z, r11.y
 180:   mov r10.w, r7.y
 181:   mov r13.z, r12.y
 182:   mov r13.w, r8.w
 183:   add r7.xyw, r10.zyzw, r13.zyzw
 184:   div r10.xyz, r12.xzwx, r9.zwyz
 185:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 186:   div r11.xyz, r13.zywz, r7.xywx
 187:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 188:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 189:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 190:   mov r10.w, r11.x
 191:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 192:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 193:   mov r11.w, r10.y
 194:   mov r10.yw, r11.yyyz
 195:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 196:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 197:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 198:   mul r14.xyzw, r7.xxxy, r9.zwyz
 199:   mul r15.xyzw, r7.yyww, r9.xyzw
 200:   mul r7.x, r7.w, r9.y
 201:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t2.xxxx, s2, r7.z
 202:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t2.xxxx, s2, r7.z
 203:   mul r7.w, r7.w, r14.y
 204:   mad r7.y, r14.x, r7.y, r7.w
 205:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t2.xxxx, s2, r7.z
 206:   mad r7.y, r14.z, r7.w, r7.y
 207:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t2.xxxx, s2, r7.z
 208:   mad r7.y, r14.w, r7.w, r7.y
 209:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t2.xxxx, s2, r7.z
 210:   mad r7.y, r15.x, r7.w, r7.y
 211:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t2.xxxx, s2, r7.z
 212:   mad r7.y, r15.y, r7.w, r7.y
 213:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t2.xxxx, s2, r7.z
 214:   mad r7.y, r15.z, r7.w, r7.y
 215:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t2.xxxx, s2, r7.z
 216:   mad r7.y, r15.w, r7.w, r7.y
 217:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t2.xxxx, s2, r7.z
 218:   mad r7.x, r7.x, r7.w, r7.y
 219:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 220:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 221:   ge r7.y, l(0.000000), r7.z
 222:   ge r7.z, r7.z, l(1.000000)
 223:   or r7.y, r7.z, r7.y
 224:   movc r7.x, r7.y, l(1.000000), r7.x
 225:   add r7.y, -r7.x, l(1.000000)
 226:   mad r7.x, r2.w, r7.y, r7.x
 227:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 228:   mul r4.w, r5.w, r7.x
 229:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 230:   mul r4.w, r4.w, r5.w
 231:   mul r7.xyz, r4.wwww, r7.yzwy
 232:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 233:   dp3 r4.w, r5.xyzx, r5.xyzx
 234:   max r4.w, r4.w, l(0.000000)
 235:   rsq r4.w, r4.w
 236:   mul r5.xyz, r4.wwww, r5.xyzx
 237:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 238:   mul r4.w, r4.w, r4.w
 239:   max r4.w, r4.w, l(0.100000)
 240:   mul r4.w, r4.w, l(6.000120)
 241:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 242:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 243:   iadd r1.w, r1.w, l(1)
 244: endloop 
 245: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 246: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 109 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb4[1].w
  34: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  35: add r2.w, -cb3[29].x, l(1.000000)
  36: mad r1.w, r1.w, cb3[29].x, r2.w
  37: ge r2.w, l(0.000000), r3.z
  38: ge r3.x, r3.z, l(1.000000)
  39: or r2.w, r2.w, r3.x
  40: movc r1.w, r2.w, l(1.000000), r1.w
  41: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  42: dp3 r2.w, r3.xyzx, r3.xyzx
  43: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  44: mul r2.w, r2.w, r2.w
  45: add r3.x, -r1.w, l(1.000000)
  46: mad r1.w, r2.w, r3.x, r1.w
  47: sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xzxx, t2.yzwx, s2
  48: add r3.x, r2.w, l(-1.000000)
  49: mad r3.x, cb0[6].w, r3.x, l(1.000000)
  50: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  51: min r2.w, r2.w, l(1.000000)
  52: dp3 r4.x, -r2.xyzx, r1.xyzx
  53: add r4.x, r4.x, r4.x
  54: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  55: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  56: add r4.w, r4.w, l(-1.000000)
  57: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  58: max r4.w, r4.w, l(0.000000)
  59: log r4.w, r4.w
  60: mul r4.w, r4.w, cb2[14].y
  61: exp r4.w, r4.w
  62: mul r4.w, r4.w, cb2[14].x
  63: mul r4.xyz, r4.xyzx, r4.wwww
  64: mul r4.xyz, r2.wwww, r4.xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  67: mul r1.w, r1.w, r2.w
  68: mul r3.yzw, r1.wwww, r3.yyzw
  69: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  70: dp3 r0.w, r5.xyzx, r5.xyzx
  71: max r0.w, r0.w, l(0.000000)
  72: rsq r0.w, r0.w
  73: mul r5.xyz, r0.wwww, r5.xyzx
  74: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.100000)
  77: mul r0.w, r0.w, l(6.000120)
  78: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  79: mul r3.yzw, r3.yyzw, r0.wwww
  80: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
  81: min r0.w, cb0[7].x, cb2[10].y
  82: ftoi r0.w, r0.w
  83: mov r4.xyz, r3.yzwy
  84: mov r1.w, l(0)
  85: loop 
  86:   uge r2.w, r1.w, r0.w
  87:   breakc_nz r2.w
  88:   and r2.w, r1.w, l(3)
  89:   ushr r4.w, r1.w, l(2)
  90:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
  91:   ftoi r2.w, r2.w
  92:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  93:   dp3 r4.w, r5.xyzx, r5.xyzx
  94:   max r4.w, r4.w, l(0.000061)
  95:   rsq r5.w, r4.w
  96:   mul r6.xyz, r5.wwww, r5.xyzx
  97:   rcp r6.w, r4.w
  98:   mul r4.w, r4.w, cb1[r2.w + 512].x
  99:   mad r4.w, -r4.w, r4.w, l(1.000000)
 100:   max r4.w, r4.w, l(0.000000)
 101:   mul r4.w, r4.w, r4.w
 102:   mul r4.w, r4.w, r6.w
 103:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
 104:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 105:   mul r6.w, r6.w, r6.w
 106:   mul r4.w, r4.w, r6.w
 107:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
 108:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 109:   mul r2.w, r2.w, r4.w
 110:   mul r7.xyz, r2.wwww, r7.xyzx
 111:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 112:   dp3 r2.w, r5.xyzx, r5.xyzx
 113:   max r2.w, r2.w, l(0.000000)
 114:   rsq r2.w, r2.w
 115:   mul r5.xyz, r2.wwww, r5.xyzx
 116:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 117:   mul r2.w, r2.w, r2.w
 118:   max r2.w, r2.w, l(0.100000)
 119:   mul r2.w, r2.w, l(6.000120)
 120:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 121:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 122:   iadd r1.w, r1.w, l(1)
 123: endloop 
 124: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 125: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 13 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb4[1].w
  34: mad r4.yw, r3.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  35: round_ni r4.yw, r4.yyyw
  36: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.ywyy
  37: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  38: mul r6.xyzw, r5.xxzz, r5.xxzz
  39: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  40: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.xyxx
  41: add r6.zw, -r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  42: min r7.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  44: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  46: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  47: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  48: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  50: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  51: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  52: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  53: mov r8.z, r7.x
  54: mov r8.w, r3.x
  55: mov r6.z, r9.x
  56: mov r6.w, r5.x
  57: add r10.xyzw, r6.zwxz, r8.zwxz
  58: mov r7.z, r8.y
  59: mov r7.w, r3.y
  60: mov r9.z, r6.y
  61: mov r9.w, r5.z
  62: add r3.xyw, r7.zyzw, r9.zyzw
  63: div r5.xyz, r6.xzwx, r10.zwyz
  64: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  65: div r6.xyz, r9.zywz, r3.xywx
  66: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  67: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  68: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  69: mov r5.w, r6.x
  70: mad r7.xyzw, r4.ywyw, cb3[30].xyxy, r5.ywxw
  71: mad r8.xy, r4.ywyy, cb3[30].xyxx, r5.zwzz
  72: mov r6.w, r5.y
  73: mov r5.yw, r6.yyyz
  74: mad r9.xyzw, r4.ywyw, cb3[30].xyxy, r5.xyzy
  75: mad r6.xyzw, r4.ywyw, cb3[30].xyxy, r6.wywz
  76: mad r5.xyzw, r4.ywyw, cb3[30].xyxy, r5.xwzw
  77: mul r11.xyzw, r3.xxxy, r10.zwyz
  78: mul r12.xyzw, r3.yyww, r10.xyzw
  79: mul r1.w, r3.w, r10.y
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, r3.z
  81: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  82: mul r3.x, r3.x, r11.y
  83: mad r2.w, r11.x, r2.w, r3.x
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.z, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.w, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  89: mad r2.w, r12.x, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  91: mad r2.w, r12.y, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r2.w, r12.z, r3.x, r2.w
  94: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, r3.z
  95: mad r2.w, r12.w, r3.x, r2.w
  96: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, r3.z
  97: mad r1.w, r1.w, r3.x, r2.w
  98: add r2.w, -cb3[29].x, l(1.000000)
  99: mad r1.w, r1.w, cb3[29].x, r2.w
 100: ge r2.w, l(0.000000), r3.z
 101: ge r3.x, r3.z, l(1.000000)
 102: or r2.w, r2.w, r3.x
 103: movc r1.w, r2.w, l(1.000000), r1.w
 104: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 105: dp3 r2.w, r3.xyzx, r3.xyzx
 106: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 107: mul r2.w, r2.w, r2.w
 108: add r3.x, -r1.w, l(1.000000)
 109: mad r1.w, r2.w, r3.x, r1.w
 110: sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xzxx, t2.yzwx, s2
 111: add r3.x, r2.w, l(-1.000000)
 112: mad r3.x, cb0[6].w, r3.x, l(1.000000)
 113: mul r3.yzw, r3.xxxx, cb0[4].xxyz
 114: min r2.w, r2.w, l(1.000000)
 115: dp3 r4.x, -r2.xyzx, r1.xyzx
 116: add r4.x, r4.x, r4.x
 117: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
 118: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
 119: add r4.w, r4.w, l(-1.000000)
 120: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 121: max r4.w, r4.w, l(0.000000)
 122: log r4.w, r4.w
 123: mul r4.w, r4.w, cb2[14].y
 124: exp r4.w, r4.w
 125: mul r4.w, r4.w, cb2[14].x
 126: mul r4.xyz, r4.xyzx, r4.wwww
 127: mul r4.xyz, r2.wwww, r4.xyzx
 128: mul r1.w, r1.w, cb2[10].z
 129: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 130: mul r1.w, r1.w, r2.w
 131: mul r3.yzw, r1.wwww, r3.yyzw
 132: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 133: dp3 r0.w, r5.xyzx, r5.xyzx
 134: max r0.w, r0.w, l(0.000000)
 135: rsq r0.w, r0.w
 136: mul r5.xyz, r0.wwww, r5.xyzx
 137: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 138: mul r0.w, r0.w, r0.w
 139: max r0.w, r0.w, l(0.100000)
 140: mul r0.w, r0.w, l(6.000120)
 141: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 142: mul r3.yzw, r3.yyzw, r0.wwww
 143: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
 144: min r0.w, cb0[7].x, cb2[10].y
 145: ftoi r0.w, r0.w
 146: mov r4.xyz, r3.yzwy
 147: mov r1.w, l(0)
 148: loop 
 149:   uge r2.w, r1.w, r0.w
 150:   breakc_nz r2.w
 151:   and r2.w, r1.w, l(3)
 152:   ushr r4.w, r1.w, l(2)
 153:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
 154:   ftoi r2.w, r2.w
 155:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 156:   dp3 r4.w, r5.xyzx, r5.xyzx
 157:   max r4.w, r4.w, l(0.000061)
 158:   rsq r5.w, r4.w
 159:   mul r6.xyz, r5.wwww, r5.xyzx
 160:   rcp r6.w, r4.w
 161:   mul r4.w, r4.w, cb1[r2.w + 512].x
 162:   mad r4.w, -r4.w, r4.w, l(1.000000)
 163:   max r4.w, r4.w, l(0.000000)
 164:   mul r4.w, r4.w, r4.w
 165:   mul r4.w, r4.w, r6.w
 166:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
 167:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 168:   mul r6.w, r6.w, r6.w
 169:   mul r4.w, r4.w, r6.w
 170:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
 171:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 172:   mul r2.w, r2.w, r4.w
 173:   mul r7.xyz, r2.wwww, r7.xyzx
 174:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 175:   dp3 r2.w, r5.xyzx, r5.xyzx
 176:   max r2.w, r2.w, l(0.000000)
 177:   rsq r2.w, r2.w
 178:   mul r5.xyz, r2.wwww, r5.xyzx
 179:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 180:   mul r2.w, r2.w, r2.w
 181:   max r2.w, r2.w, l(0.100000)
 182:   mul r2.w, r2.w, l(6.000120)
 183:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 184:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 185:   iadd r1.w, r1.w, l(1)
 186: endloop 
 187: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 188: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb5[1].w
  34: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  35: add r2.w, -cb3[29].x, l(1.000000)
  36: mad r1.w, r1.w, cb3[29].x, r2.w
  37: ge r2.w, l(0.000000), r3.z
  38: ge r3.x, r3.z, l(1.000000)
  39: or r2.w, r2.w, r3.x
  40: movc r1.w, r2.w, l(1.000000), r1.w
  41: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  42: dp3 r2.w, r3.xyzx, r3.xyzx
  43: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  44: mul r2.w, r2.w, r2.w
  45: add r3.x, -r1.w, l(1.000000)
  46: mad r1.w, r2.w, r3.x, r1.w
  47: sample_indexable(texture2d)(float,float,float,float) r3.x, r4.xzxx, t3.xyzw, s3
  48: add r3.y, r3.x, l(-1.000000)
  49: mad r3.y, cb0[6].w, r3.y, l(1.000000)
  50: mul r4.xyz, r3.yyyy, cb0[4].xyzx
  51: min r3.x, r3.x, l(1.000000)
  52: dp3 r3.z, -r2.xyzx, r1.xyzx
  53: add r3.z, r3.z, r3.z
  54: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
  55: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
  56: add r3.z, r5.w, l(-1.000000)
  57: mad r3.z, cb2[14].w, r3.z, l(1.000000)
  58: max r3.z, r3.z, l(0.000000)
  59: log r3.z, r3.z
  60: mul r3.z, r3.z, cb2[14].y
  61: exp r3.z, r3.z
  62: mul r3.z, r3.z, cb2[14].x
  63: mul r5.xyz, r5.xyzx, r3.zzzz
  64: mul r3.xzw, r3.xxxx, r5.xxyz
  65: mul r1.w, r1.w, cb2[10].z
  66: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
  67: mul r1.w, r1.w, r4.w
  68: mul r4.xyz, r1.wwww, r4.xyzx
  69: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  70: dp3 r0.w, r5.xyzx, r5.xyzx
  71: max r0.w, r0.w, l(0.000000)
  72: rsq r0.w, r0.w
  73: mul r5.xyz, r0.wwww, r5.xyzx
  74: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.100000)
  77: mul r0.w, r0.w, l(6.000120)
  78: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  79: mul r4.xyz, r4.xyzx, r0.wwww
  80: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
  81: min r0.w, cb0[7].x, cb2[10].y
  82: ftoi r0.w, r0.w
  83: mov r4.xyz, r3.xzwx
  84: mov r1.w, l(0)
  85: loop 
  86:   uge r4.w, r1.w, r0.w
  87:   breakc_nz r4.w
  88:   and r4.w, r1.w, l(3)
  89:   ushr r5.x, r1.w, l(2)
  90:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  91:   ftoi r4.w, r4.w
  92:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  93:   dp3 r5.w, r5.xyzx, r5.xyzx
  94:   max r5.w, r5.w, l(0.000061)
  95:   rsq r6.x, r5.w
  96:   mul r6.yzw, r5.xxyz, r6.xxxx
  97:   rcp r7.x, r5.w
  98:   mul r5.w, r5.w, cb1[r4.w + 512].x
  99:   mad r5.w, -r5.w, r5.w, l(1.000000)
 100:   max r5.w, r5.w, l(0.000000)
 101:   mul r5.w, r5.w, r5.w
 102:   mul r5.w, r5.w, r7.x
 103:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
 104:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
 105:   mul r7.x, r7.x, r7.x
 106:   mul r5.w, r5.w, r7.x
 107:   ishl r7.x, r4.w, l(2)
 108:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
 109:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
 110:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
 111:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
 112:   div r7.xyz, r7.xyzx, r7.wwww
 113:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t2.xxxx, s2, r7.z
 114:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 115:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 116:   ge r7.y, l(0.000000), r7.z
 117:   ge r7.z, r7.z, l(1.000000)
 118:   or r7.y, r7.z, r7.y
 119:   movc r7.x, r7.y, l(1.000000), r7.x
 120:   add r7.y, -r7.x, l(1.000000)
 121:   mad r7.x, r2.w, r7.y, r7.x
 122:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 123:   mul r4.w, r5.w, r7.x
 124:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 125:   mul r4.w, r4.w, r5.w
 126:   mul r7.xyz, r4.wwww, r7.yzwy
 127:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 128:   dp3 r4.w, r5.xyzx, r5.xyzx
 129:   max r4.w, r4.w, l(0.000000)
 130:   rsq r4.w, r4.w
 131:   mul r5.xyz, r4.wwww, r5.xyzx
 132:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 133:   mul r4.w, r4.w, r4.w
 134:   max r4.w, r4.w, l(0.100000)
 135:   mul r4.w, r4.w, l(6.000120)
 136:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 137:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 138:   iadd r1.w, r1.w, l(1)
 139: endloop 
 140: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 141: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 211 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb5[1].w
  34: mad r4.yw, r3.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  35: round_ni r4.yw, r4.yyyw
  36: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.ywyy
  37: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  38: mul r6.xyzw, r5.xxzz, r5.xxzz
  39: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  40: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.xyxx
  41: add r6.zw, -r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  42: min r7.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  44: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  46: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  47: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  48: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  50: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  51: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  52: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  53: mov r8.z, r7.x
  54: mov r8.w, r3.x
  55: mov r6.z, r9.x
  56: mov r6.w, r5.x
  57: add r10.xyzw, r6.zwxz, r8.zwxz
  58: mov r7.z, r8.y
  59: mov r7.w, r3.y
  60: mov r9.z, r6.y
  61: mov r9.w, r5.z
  62: add r3.xyw, r7.zyzw, r9.zyzw
  63: div r5.xyz, r6.xzwx, r10.zwyz
  64: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  65: div r6.xyz, r9.zywz, r3.xywx
  66: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  67: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  68: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  69: mov r5.w, r6.x
  70: mad r7.xyzw, r4.ywyw, cb3[30].xyxy, r5.ywxw
  71: mad r8.xy, r4.ywyy, cb3[30].xyxx, r5.zwzz
  72: mov r6.w, r5.y
  73: mov r5.yw, r6.yyyz
  74: mad r9.xyzw, r4.ywyw, cb3[30].xyxy, r5.xyzy
  75: mad r6.xyzw, r4.ywyw, cb3[30].xyxy, r6.wywz
  76: mad r5.xyzw, r4.ywyw, cb3[30].xyxy, r5.xwzw
  77: mul r11.xyzw, r3.xxxy, r10.zwyz
  78: mul r12.xyzw, r3.yyww, r10.xyzw
  79: mul r1.w, r3.w, r10.y
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, r3.z
  81: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  82: mul r3.x, r3.x, r11.y
  83: mad r2.w, r11.x, r2.w, r3.x
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.z, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.w, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  89: mad r2.w, r12.x, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  91: mad r2.w, r12.y, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r2.w, r12.z, r3.x, r2.w
  94: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, r3.z
  95: mad r2.w, r12.w, r3.x, r2.w
  96: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, r3.z
  97: mad r1.w, r1.w, r3.x, r2.w
  98: add r2.w, -cb3[29].x, l(1.000000)
  99: mad r1.w, r1.w, cb3[29].x, r2.w
 100: ge r2.w, l(0.000000), r3.z
 101: ge r3.x, r3.z, l(1.000000)
 102: or r2.w, r2.w, r3.x
 103: movc r1.w, r2.w, l(1.000000), r1.w
 104: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 105: dp3 r2.w, r3.xyzx, r3.xyzx
 106: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 107: mul r2.w, r2.w, r2.w
 108: add r3.x, -r1.w, l(1.000000)
 109: mad r1.w, r2.w, r3.x, r1.w
 110: sample_indexable(texture2d)(float,float,float,float) r3.x, r4.xzxx, t3.xyzw, s3
 111: add r3.y, r3.x, l(-1.000000)
 112: mad r3.y, cb0[6].w, r3.y, l(1.000000)
 113: mul r4.xyz, r3.yyyy, cb0[4].xyzx
 114: min r3.x, r3.x, l(1.000000)
 115: dp3 r3.z, -r2.xyzx, r1.xyzx
 116: add r3.z, r3.z, r3.z
 117: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
 118: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
 119: add r3.z, r5.w, l(-1.000000)
 120: mad r3.z, cb2[14].w, r3.z, l(1.000000)
 121: max r3.z, r3.z, l(0.000000)
 122: log r3.z, r3.z
 123: mul r3.z, r3.z, cb2[14].y
 124: exp r3.z, r3.z
 125: mul r3.z, r3.z, cb2[14].x
 126: mul r5.xyz, r5.xyzx, r3.zzzz
 127: mul r3.xzw, r3.xxxx, r5.xxyz
 128: mul r1.w, r1.w, cb2[10].z
 129: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
 130: mul r1.w, r1.w, r4.w
 131: mul r4.xyz, r1.wwww, r4.xyzx
 132: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 133: dp3 r0.w, r5.xyzx, r5.xyzx
 134: max r0.w, r0.w, l(0.000000)
 135: rsq r0.w, r0.w
 136: mul r5.xyz, r0.wwww, r5.xyzx
 137: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 138: mul r0.w, r0.w, r0.w
 139: max r0.w, r0.w, l(0.100000)
 140: mul r0.w, r0.w, l(6.000120)
 141: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 142: mul r4.xyz, r4.xyzx, r0.wwww
 143: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
 144: min r0.w, cb0[7].x, cb2[10].y
 145: ftoi r0.w, r0.w
 146: mov r4.xyz, r3.xzwx
 147: mov r1.w, l(0)
 148: loop 
 149:   uge r4.w, r1.w, r0.w
 150:   breakc_nz r4.w
 151:   and r4.w, r1.w, l(3)
 152:   ushr r5.x, r1.w, l(2)
 153:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
 154:   ftoi r4.w, r4.w
 155:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
 156:   dp3 r5.w, r5.xyzx, r5.xyzx
 157:   max r5.w, r5.w, l(0.000061)
 158:   rsq r6.x, r5.w
 159:   mul r6.yzw, r5.xxyz, r6.xxxx
 160:   rcp r7.x, r5.w
 161:   mul r5.w, r5.w, cb1[r4.w + 512].x
 162:   mad r5.w, -r5.w, r5.w, l(1.000000)
 163:   max r5.w, r5.w, l(0.000000)
 164:   mul r5.w, r5.w, r5.w
 165:   mul r5.w, r5.w, r7.x
 166:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
 167:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
 168:   mul r7.x, r7.x, r7.x
 169:   mul r5.w, r5.w, r7.x
 170:   ishl r7.x, r4.w, l(2)
 171:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
 172:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
 173:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
 174:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
 175:   div r7.xyz, r7.xyzx, r7.wwww
 176:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 177:   round_ni r8.xy, r8.xyxx
 178:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 179:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 180:   mul r10.xyzw, r9.xxzz, r9.xxzz
 181:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 182:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 183:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 184:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 185:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 186:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 187:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 188:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 189:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 190:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 191:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 192:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 193:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 194:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 195:   mov r11.z, r10.x
 196:   mov r11.w, r7.x
 197:   mov r12.z, r13.x
 198:   mov r12.w, r8.z
 199:   add r9.xyzw, r11.zwxz, r12.zwxz
 200:   mov r10.z, r11.y
 201:   mov r10.w, r7.y
 202:   mov r13.z, r12.y
 203:   mov r13.w, r8.w
 204:   add r7.xyw, r10.zyzw, r13.zyzw
 205:   div r10.xyz, r12.xzwx, r9.zwyz
 206:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 207:   div r11.xyz, r13.zywz, r7.xywx
 208:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 209:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 210:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 211:   mov r10.w, r11.x
 212:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 213:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 214:   mov r11.w, r10.y
 215:   mov r10.yw, r11.yyyz
 216:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 217:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 218:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 219:   mul r14.xyzw, r7.xxxy, r9.zwyz
 220:   mul r15.xyzw, r7.yyww, r9.xyzw
 221:   mul r7.x, r7.w, r9.y
 222:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t2.xxxx, s2, r7.z
 223:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t2.xxxx, s2, r7.z
 224:   mul r7.w, r7.w, r14.y
 225:   mad r7.y, r14.x, r7.y, r7.w
 226:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t2.xxxx, s2, r7.z
 227:   mad r7.y, r14.z, r7.w, r7.y
 228:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t2.xxxx, s2, r7.z
 229:   mad r7.y, r14.w, r7.w, r7.y
 230:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t2.xxxx, s2, r7.z
 231:   mad r7.y, r15.x, r7.w, r7.y
 232:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t2.xxxx, s2, r7.z
 233:   mad r7.y, r15.y, r7.w, r7.y
 234:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t2.xxxx, s2, r7.z
 235:   mad r7.y, r15.z, r7.w, r7.y
 236:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t2.xxxx, s2, r7.z
 237:   mad r7.y, r15.w, r7.w, r7.y
 238:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t2.xxxx, s2, r7.z
 239:   mad r7.x, r7.x, r7.w, r7.y
 240:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 241:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 242:   ge r7.y, l(0.000000), r7.z
 243:   ge r7.z, r7.z, l(1.000000)
 244:   or r7.y, r7.z, r7.y
 245:   movc r7.x, r7.y, l(1.000000), r7.x
 246:   add r7.y, -r7.x, l(1.000000)
 247:   mad r7.x, r2.w, r7.y, r7.x
 248:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 249:   mul r4.w, r5.w, r7.x
 250:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 251:   mul r4.w, r4.w, r5.w
 252:   mul r7.xyz, r4.wwww, r7.yzwy
 253:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 254:   dp3 r4.w, r5.xyzx, r5.xyzx
 255:   max r4.w, r4.w, l(0.000000)
 256:   rsq r4.w, r4.w
 257:   mul r5.xyz, r4.wwww, r5.xyzx
 258:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 259:   mul r4.w, r4.w, r4.w
 260:   max r4.w, r4.w, l(0.100000)
 261:   mul r4.w, r4.w, l(6.000120)
 262:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 263:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 264:   iadd r1.w, r1.w, l(1)
 265: endloop 
 266: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 267: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 96 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.xxxx, s1, r7.z
  83:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
  84:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
  85:   ge r7.y, l(0.000000), r7.z
  86:   ge r7.z, r7.z, l(1.000000)
  87:   or r7.y, r7.z, r7.y
  88:   movc r7.x, r7.y, l(1.000000), r7.x
  89:   add r7.y, -r7.x, l(1.000000)
  90:   mad r7.x, r1.w, r7.y, r7.x
  91:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
  92:   mul r4.w, r5.w, r7.x
  93:   dp3_sat r5.w, r1.xyzx, r6.yzwy
  94:   mul r4.w, r4.w, r5.w
  95:   mul r7.xyz, r4.wwww, r7.yzwy
  96:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
  97:   dp3 r4.w, r5.xyzx, r5.xyzx
  98:   max r4.w, r4.w, l(0.000000)
  99:   rsq r4.w, r4.w
 100:   mul r5.xyz, r4.wwww, r5.xyzx
 101:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 102:   mul r4.w, r4.w, r4.w
 103:   max r4.w, r4.w, l(0.100000)
 104:   mul r4.w, r4.w, l(6.000120)
 105:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 106:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 107:   iadd r3.w, r3.w, l(1)
 108: endloop 
 109: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 140 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  83:   round_ni r8.xy, r8.xyxx
  84:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  85:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  86:   mul r10.xyzw, r9.xxzz, r9.xxzz
  87:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  88:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  89:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  90:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  91:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  92:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  94:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  95:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  96:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  98:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  99:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 100:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 101:   mov r11.z, r10.x
 102:   mov r11.w, r7.x
 103:   mov r12.z, r13.x
 104:   mov r12.w, r8.z
 105:   add r9.xyzw, r11.zwxz, r12.zwxz
 106:   mov r10.z, r11.y
 107:   mov r10.w, r7.y
 108:   mov r13.z, r12.y
 109:   mov r13.w, r8.w
 110:   add r7.xyw, r10.zyzw, r13.zyzw
 111:   div r10.xyz, r12.xzwx, r9.zwyz
 112:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 113:   div r11.xyz, r13.zywz, r7.xywx
 114:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 115:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 116:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 117:   mov r10.w, r11.x
 118:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 119:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 120:   mov r11.w, r10.y
 121:   mov r10.yw, r11.yyyz
 122:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 123:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 124:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 125:   mul r14.xyzw, r7.xxxy, r9.zwyz
 126:   mul r15.xyzw, r7.yyww, r9.xyzw
 127:   mul r7.x, r7.w, r9.y
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t1.xxxx, s1, r7.z
 129:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t1.xxxx, s1, r7.z
 130:   mul r7.w, r7.w, r14.y
 131:   mad r7.y, r14.x, r7.y, r7.w
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t1.xxxx, s1, r7.z
 133:   mad r7.y, r14.z, r7.w, r7.y
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t1.xxxx, s1, r7.z
 135:   mad r7.y, r14.w, r7.w, r7.y
 136:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t1.xxxx, s1, r7.z
 137:   mad r7.y, r15.x, r7.w, r7.y
 138:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t1.xxxx, s1, r7.z
 139:   mad r7.y, r15.y, r7.w, r7.y
 140:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t1.xxxx, s1, r7.z
 141:   mad r7.y, r15.z, r7.w, r7.y
 142:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t1.xxxx, s1, r7.z
 143:   mad r7.y, r15.w, r7.w, r7.y
 144:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t1.xxxx, s1, r7.z
 145:   mad r7.x, r7.x, r7.w, r7.y
 146:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 147:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 148:   ge r7.y, l(0.000000), r7.z
 149:   ge r7.z, r7.z, l(1.000000)
 150:   or r7.y, r7.z, r7.y
 151:   movc r7.x, r7.y, l(1.000000), r7.x
 152:   add r7.y, -r7.x, l(1.000000)
 153:   mad r7.x, r1.w, r7.y, r7.x
 154:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
 155:   mul r4.w, r5.w, r7.x
 156:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 157:   mul r4.w, r4.w, r5.w
 158:   mul r7.xyz, r4.wwww, r7.yzwy
 159:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 160:   dp3 r4.w, r5.xyzx, r5.xyzx
 161:   max r4.w, r4.w, l(0.000000)
 162:   rsq r4.w, r4.w
 163:   mul r5.xyz, r4.wwww, r5.xyzx
 164:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 165:   mul r4.w, r4.w, r4.w
 166:   max r4.w, r4.w, l(0.100000)
 167:   mul r4.w, r4.w, l(6.000120)
 168:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 169:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 170:   iadd r3.w, r3.w, l(1)
 171: endloop 
 172: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 173: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 78 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb3[0].xxxx, cb3[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb3[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t1.yzwx, s1
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: mov r4.xyz, r3.xyzx
  49: mov r1.w, l(0)
  50: loop 
  51:   uge r3.w, r1.w, r0.w
  52:   breakc_nz r3.w
  53:   and r3.w, r1.w, l(3)
  54:   ushr r4.w, r1.w, l(2)
  55:   dp4 r3.w, cb2[r4.w + 11].xyzw, icb[r3.w + 0].xyzw
  56:   ftoi r3.w, r3.w
  57:   mad r5.xyz, -v1.xyzx, cb1[r3.w + 0].wwww, cb1[r3.w + 0].xyzx
  58:   dp3 r4.w, r5.xyzx, r5.xyzx
  59:   max r4.w, r4.w, l(0.000061)
  60:   rsq r5.w, r4.w
  61:   mul r6.xyz, r5.wwww, r5.xyzx
  62:   rcp r6.w, r4.w
  63:   mul r4.w, r4.w, cb1[r3.w + 512].x
  64:   mad r4.w, -r4.w, r4.w, l(1.000000)
  65:   max r4.w, r4.w, l(0.000000)
  66:   mul r4.w, r4.w, r4.w
  67:   mul r4.w, r4.w, r6.w
  68:   dp3 r6.w, cb1[r3.w + 768].xyzx, r6.xyzx
  69:   mad_sat r6.w, r6.w, cb1[r3.w + 512].z, cb1[r3.w + 512].w
  70:   mul r6.w, r6.w, r6.w
  71:   mul r4.w, r4.w, r6.w
  72:   mul r7.xyz, r2.wwww, cb1[r3.w + 256].xyzx
  73:   dp3_sat r3.w, r1.xyzx, r6.xyzx
  74:   mul r3.w, r3.w, r4.w
  75:   mul r7.xyz, r3.wwww, r7.xyzx
  76:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  77:   dp3 r3.w, r5.xyzx, r5.xyzx
  78:   max r3.w, r3.w, l(0.000000)
  79:   rsq r3.w, r3.w
  80:   mul r5.xyz, r3.wwww, r5.xyzx
  81:   dp3_sat r3.w, r6.xyzx, r5.xyzx
  82:   mul r3.w, r3.w, r3.w
  83:   max r3.w, r3.w, l(0.100000)
  84:   mul r3.w, r3.w, l(6.000120)
  85:   div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  86:   mad r4.xyz, r3.wwww, r7.xyzx, r4.xyzx
  87:   iadd r1.w, r1.w, l(1)
  88: endloop 
  89: mad o0.xyz, r0.xyzx, cb3[1].wwww, r4.xyzx
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 96 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t1.xxxx, s1, r7.z
  83:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
  84:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
  85:   ge r7.y, l(0.000000), r7.z
  86:   ge r7.z, r7.z, l(1.000000)
  87:   or r7.y, r7.z, r7.y
  88:   movc r7.x, r7.y, l(1.000000), r7.x
  89:   add r7.y, -r7.x, l(1.000000)
  90:   mad r7.x, r1.w, r7.y, r7.x
  91:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
  92:   mul r4.w, r5.w, r7.x
  93:   dp3_sat r5.w, r1.xyzx, r6.yzwy
  94:   mul r4.w, r4.w, r5.w
  95:   mul r7.xyz, r4.wwww, r7.yzwy
  96:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
  97:   dp3 r4.w, r5.xyzx, r5.xyzx
  98:   max r4.w, r4.w, l(0.000000)
  99:   rsq r4.w, r4.w
 100:   mul r5.xyz, r4.wwww, r5.xyzx
 101:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 102:   mul r4.w, r4.w, r4.w
 103:   max r4.w, r4.w, l(0.100000)
 104:   mul r4.w, r4.w, l(6.000120)
 105:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 106:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 107:   iadd r3.w, r3.w, l(1)
 108: endloop 
 109: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 140 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xzxx, t2.yzwx, s2
  14: add r2.w, r1.w, l(-1.000000)
  15: mad r2.w, cb0[6].w, r2.w, l(1.000000)
  16: mul r3.xyz, r2.wwww, cb0[4].xyzx
  17: min r1.w, r1.w, l(1.000000)
  18: dp3 r3.w, -r2.xyzx, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  21: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  22: add r3.w, r4.w, l(-1.000000)
  23: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  24: max r3.w, r3.w, l(0.000000)
  25: log r3.w, r3.w
  26: mul r3.w, r3.w, cb2[14].y
  27: exp r3.w, r3.w
  28: mul r3.w, r3.w, cb2[14].x
  29: mul r4.xyz, r4.xyzx, r3.wwww
  30: mul r4.xyz, r1.wwww, r4.xyzx
  31: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  32: mul r1.w, r1.w, cb2[10].z
  33: mul r3.xyz, r1.wwww, r3.xyzx
  34: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  35: dp3 r0.w, r5.xyzx, r5.xyzx
  36: max r0.w, r0.w, l(0.000000)
  37: rsq r0.w, r0.w
  38: mul r5.xyz, r0.wwww, r5.xyzx
  39: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  40: mul r0.w, r0.w, r0.w
  41: max r0.w, r0.w, l(0.100000)
  42: mul r0.w, r0.w, l(6.000120)
  43: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  44: mul r3.xyz, r3.xyzx, r0.wwww
  45: mad r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
  46: min r0.w, cb0[7].x, cb2[10].y
  47: ftoi r0.w, r0.w
  48: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: mad_sat r1.w, r1.w, cb3[29].z, cb3[29].w
  51: mul r1.w, r1.w, r1.w
  52: mov r4.xyz, r3.xyzx
  53: mov r3.w, l(0)
  54: loop 
  55:   uge r4.w, r3.w, r0.w
  56:   breakc_nz r4.w
  57:   and r4.w, r3.w, l(3)
  58:   ushr r5.x, r3.w, l(2)
  59:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  60:   ftoi r4.w, r4.w
  61:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  62:   dp3 r5.w, r5.xyzx, r5.xyzx
  63:   max r5.w, r5.w, l(0.000061)
  64:   rsq r6.x, r5.w
  65:   mul r6.yzw, r5.xxyz, r6.xxxx
  66:   rcp r7.x, r5.w
  67:   mul r5.w, r5.w, cb1[r4.w + 512].x
  68:   mad r5.w, -r5.w, r5.w, l(1.000000)
  69:   max r5.w, r5.w, l(0.000000)
  70:   mul r5.w, r5.w, r5.w
  71:   mul r5.w, r5.w, r7.x
  72:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  73:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  74:   mul r7.x, r7.x, r7.x
  75:   mul r5.w, r5.w, r7.x
  76:   ishl r7.x, r4.w, l(2)
  77:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  78:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  79:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  80:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  83:   round_ni r8.xy, r8.xyxx
  84:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
  85:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  86:   mul r10.xyzw, r9.xxzz, r9.xxzz
  87:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  88:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  89:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  90:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  91:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
  92:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  94:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  95:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  96:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  98:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  99:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 100:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 101:   mov r11.z, r10.x
 102:   mov r11.w, r7.x
 103:   mov r12.z, r13.x
 104:   mov r12.w, r8.z
 105:   add r9.xyzw, r11.zwxz, r12.zwxz
 106:   mov r10.z, r11.y
 107:   mov r10.w, r7.y
 108:   mov r13.z, r12.y
 109:   mov r13.w, r8.w
 110:   add r7.xyw, r10.zyzw, r13.zyzw
 111:   div r10.xyz, r12.xzwx, r9.zwyz
 112:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 113:   div r11.xyz, r13.zywz, r7.xywx
 114:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 115:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 116:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 117:   mov r10.w, r11.x
 118:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 119:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 120:   mov r11.w, r10.y
 121:   mov r10.yw, r11.yyyz
 122:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 123:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 124:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 125:   mul r14.xyzw, r7.xxxy, r9.zwyz
 126:   mul r15.xyzw, r7.yyww, r9.xyzw
 127:   mul r7.x, r7.w, r9.y
 128:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t1.xxxx, s1, r7.z
 129:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t1.xxxx, s1, r7.z
 130:   mul r7.w, r7.w, r14.y
 131:   mad r7.y, r14.x, r7.y, r7.w
 132:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t1.xxxx, s1, r7.z
 133:   mad r7.y, r14.z, r7.w, r7.y
 134:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t1.xxxx, s1, r7.z
 135:   mad r7.y, r14.w, r7.w, r7.y
 136:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t1.xxxx, s1, r7.z
 137:   mad r7.y, r15.x, r7.w, r7.y
 138:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t1.xxxx, s1, r7.z
 139:   mad r7.y, r15.y, r7.w, r7.y
 140:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t1.xxxx, s1, r7.z
 141:   mad r7.y, r15.z, r7.w, r7.y
 142:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t1.xxxx, s1, r7.z
 143:   mad r7.y, r15.w, r7.w, r7.y
 144:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t1.xxxx, s1, r7.z
 145:   mad r7.x, r7.x, r7.w, r7.y
 146:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 147:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 148:   ge r7.y, l(0.000000), r7.z
 149:   ge r7.z, r7.z, l(1.000000)
 150:   or r7.y, r7.z, r7.y
 151:   movc r7.x, r7.y, l(1.000000), r7.x
 152:   add r7.y, -r7.x, l(1.000000)
 153:   mad r7.x, r1.w, r7.y, r7.x
 154:   mul r7.yzw, r2.wwww, cb1[r4.w + 256].xxyz
 155:   mul r4.w, r5.w, r7.x
 156:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 157:   mul r4.w, r4.w, r5.w
 158:   mul r7.xyz, r4.wwww, r7.yzwy
 159:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 160:   dp3 r4.w, r5.xyzx, r5.xyzx
 161:   max r4.w, r4.w, l(0.000000)
 162:   rsq r4.w, r4.w
 163:   mul r5.xyz, r4.wwww, r5.xyzx
 164:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 165:   mul r4.w, r4.w, r4.w
 166:   max r4.w, r4.w, l(0.100000)
 167:   mul r4.w, r4.w, l(6.000120)
 168:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 169:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 170:   iadd r3.w, r3.w, l(1)
 171: endloop 
 172: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 173: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 1

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 2 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v4.xyzx, v4.xyzx
   1: max r0.x, r0.x, l(0.000000)
   2: rsq r0.x, r0.x
   3: mul r0.yzw, r0.xxxx, v4.xxyz
   4: mad r1.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
   5: dp3 r0.x, v2.xyzx, v2.xyzx
   6: rsq r0.x, r0.x
   7: mul r2.xyz, r0.xxxx, v2.xyzx
   8: dp3 r0.x, -r0.yzwy, r2.xyzx
   9: add r0.x, r0.x, r0.x
  10: mad r0.xyz, r2.xyzx, -r0.xxxx, -r0.yzwy
  11: dp3_sat r0.w, r2.xyzx, cb0[3].xyzx
  12: mul r0.w, r0.w, cb1[10].z
  13: sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  14: add r0.x, r2.w, l(-1.000000)
  15: mad r0.x, cb1[14].w, r0.x, l(1.000000)
  16: max r0.x, r0.x, l(0.000000)
  17: log r0.x, r0.x
  18: mul r0.x, r0.x, cb1[14].y
  19: exp r0.x, r0.x
  20: mul r0.x, r0.x, cb1[14].x
  21: mul r0.xyz, r2.xyzx, r0.xxxx
  22: rcp r2.xy, cb0[2].xyxx
  23: mul r2.xy, r2.xyxx, v0.xyxx
  24: mad r1.w, r2.y, cb0[19].x, cb0[19].y
  25: add r2.z, -r1.w, l(1.000000)
  26: sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xzxx, t1.yzwx, s1
  27: min r2.x, r1.w, l(1.000000)
  28: add r1.w, r1.w, l(-1.000000)
  29: mad r1.w, cb0[6].w, r1.w, l(1.000000)
  30: mul r2.yzw, r1.wwww, cb0[4].xxyz
  31: mul r2.yzw, r0.wwww, r2.yyzw
  32: mul r0.xyz, r0.xyzx, r2.xxxx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: rsq r0.w, r0.w
  36: mul r1.xyz, r0.wwww, r1.xyzx
  37: dp3_sat r0.w, cb0[3].xyzx, r1.xyzx
  38: mul r0.w, r0.w, r0.w
  39: max r0.w, r0.w, l(0.100000)
  40: mul r0.w, r0.w, l(6.000120)
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r1.xyz, r2.yzwy, r0.wwww
  43: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
  44: mul r1.xyz, cb2[0].xxxx, cb2[1].xyzx
  45: mad o0.xyz, r1.xyzx, cb2[1].wwww, r0.xyzx
  46: mov_sat o0.w, cb2[1].w
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mul r2.xyz, r0.yyyy, cb3[1].xyzx
  60: mad r2.xyz, cb3[0].xyzx, r0.xxxx, r2.xyzx
  61: mad r2.xyz, cb3[2].xyzx, r0.zzzz, r2.xyzx
  62: add o7.xyz, r2.xyzx, cb3[3].xyzx
  63: mov o3.w, v2.w
  64: mov o6.x, l(0)
  65: mov o7.w, l(0)
  66: mov o1.xyz, r0.xyzx
  67: mov o2.xyz, r1.xyzx
  68: mov o5.xyz, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 90 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb4[1].w
  13: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  14: add r2.w, -cb3[29].x, l(1.000000)
  15: mad r1.w, r1.w, cb3[29].x, r2.w
  16: ge r2.w, l(0.000000), v7.z
  17: ge r3.y, v7.z, l(1.000000)
  18: or r2.w, r2.w, r3.y
  19: movc r1.w, r2.w, l(1.000000), r1.w
  20: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  21: dp3 r2.w, r4.xyzx, r4.xyzx
  22: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  23: mul r2.w, r2.w, r2.w
  24: add r3.y, -r1.w, l(1.000000)
  25: mad r1.w, r2.w, r3.y, r1.w
  26: sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xzxx, t2.yzwx, s2
  27: add r3.x, r2.w, l(-1.000000)
  28: mad r3.x, cb0[6].w, r3.x, l(1.000000)
  29: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  30: min r2.w, r2.w, l(1.000000)
  31: dp3 r4.x, -r2.xyzx, r1.xyzx
  32: add r4.x, r4.x, r4.x
  33: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  34: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  35: add r4.w, r4.w, l(-1.000000)
  36: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  37: max r4.w, r4.w, l(0.000000)
  38: log r4.w, r4.w
  39: mul r4.w, r4.w, cb2[14].y
  40: exp r4.w, r4.w
  41: mul r4.w, r4.w, cb2[14].x
  42: mul r4.xyz, r4.xyzx, r4.wwww
  43: mul r4.xyz, r2.wwww, r4.xyzx
  44: mul r1.w, r1.w, cb2[10].z
  45: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  46: mul r1.w, r1.w, r2.w
  47: mul r3.yzw, r1.wwww, r3.yyzw
  48: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  49: dp3 r0.w, r5.xyzx, r5.xyzx
  50: max r0.w, r0.w, l(0.000000)
  51: rsq r0.w, r0.w
  52: mul r5.xyz, r0.wwww, r5.xyzx
  53: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  54: mul r0.w, r0.w, r0.w
  55: max r0.w, r0.w, l(0.100000)
  56: mul r0.w, r0.w, l(6.000120)
  57: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  58: mul r3.yzw, r3.yyzw, r0.wwww
  59: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
  60: min r0.w, cb0[7].x, cb2[10].y
  61: ftoi r0.w, r0.w
  62: mov r4.xyz, r3.yzwy
  63: mov r1.w, l(0)
  64: loop 
  65:   uge r2.w, r1.w, r0.w
  66:   breakc_nz r2.w
  67:   and r2.w, r1.w, l(3)
  68:   ushr r4.w, r1.w, l(2)
  69:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
  70:   ftoi r2.w, r2.w
  71:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  72:   dp3 r4.w, r5.xyzx, r5.xyzx
  73:   max r4.w, r4.w, l(0.000061)
  74:   rsq r5.w, r4.w
  75:   mul r6.xyz, r5.wwww, r5.xyzx
  76:   rcp r6.w, r4.w
  77:   mul r4.w, r4.w, cb1[r2.w + 512].x
  78:   mad r4.w, -r4.w, r4.w, l(1.000000)
  79:   max r4.w, r4.w, l(0.000000)
  80:   mul r4.w, r4.w, r4.w
  81:   mul r4.w, r4.w, r6.w
  82:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
  83:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  84:   mul r6.w, r6.w, r6.w
  85:   mul r4.w, r4.w, r6.w
  86:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
  87:   dp3_sat r2.w, r1.xyzx, r6.xyzx
  88:   mul r2.w, r2.w, r4.w
  89:   mul r7.xyz, r2.wwww, r7.xyzx
  90:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
  91:   dp3 r2.w, r5.xyzx, r5.xyzx
  92:   max r2.w, r2.w, l(0.000000)
  93:   rsq r2.w, r2.w
  94:   mul r5.xyz, r2.wwww, r5.xyzx
  95:   dp3_sat r2.w, r6.xyzx, r5.xyzx
  96:   mul r2.w, r2.w, r2.w
  97:   max r2.w, r2.w, l(0.100000)
  98:   mul r2.w, r2.w, l(6.000120)
  99:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 100:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 101:   iadd r1.w, r1.w, l(1)
 102: endloop 
 103: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 134 math, 13 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb4[1].w
  13: mad r3.yw, v7.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  14: round_ni r3.yw, r3.yyyw
  15: mad r4.xy, v7.xyxx, cb3[30].zwzz, -r3.ywyy
  16: add r5.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  17: mul r6.xyzw, r5.xxzz, r5.xxzz
  18: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  19: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r4.xxyx
  20: add r6.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  21: min r6.zw, r4.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  22: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  23: max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  24: mad r4.xy, -r4.xyxx, r4.xyxx, r5.ywyy
  25: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  26: add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  27: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  29: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: mul r9.xy, r4.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  31: mul r4.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  32: mov r7.z, r6.x
  33: mov r7.w, r4.x
  34: mov r8.z, r9.x
  35: mov r8.w, r4.z
  36: add r5.xyzw, r7.zwxz, r8.zwxz
  37: mov r6.z, r7.y
  38: mov r6.w, r4.y
  39: mov r9.z, r8.y
  40: mov r9.w, r4.w
  41: add r4.xyz, r6.zywz, r9.zywz
  42: div r6.xyz, r8.xzwx, r5.zwyz
  43: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  44: div r7.xyz, r9.zywz, r4.xyzx
  45: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  46: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  47: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  48: mov r6.w, r7.x
  49: mad r8.xyzw, r3.ywyw, cb3[30].xyxy, r6.ywxw
  50: mad r9.xy, r3.ywyy, cb3[30].xyxx, r6.zwzz
  51: mov r7.w, r6.y
  52: mov r6.yw, r7.yyyz
  53: mad r10.xyzw, r3.ywyw, cb3[30].xyxy, r6.xyzy
  54: mad r7.xyzw, r3.ywyw, cb3[30].xyxy, r7.wywz
  55: mad r6.xyzw, r3.ywyw, cb3[30].xyxy, r6.xwzw
  56: mul r11.xyzw, r4.xxxy, r5.zwyz
  57: mul r12.xyzw, r4.yyzz, r5.xyzw
  58: mul r1.w, r4.z, r5.y
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, v7.z
  60: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r8.zwzz, t1.xxxx, s1, v7.z
  61: mul r3.y, r3.y, r11.y
  62: mad r2.w, r11.x, r2.w, r3.y
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r9.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.z, r3.y, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.xyxx, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.w, r3.y, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.xyxx, t1.xxxx, s1, v7.z
  68: mad r2.w, r12.x, r3.y, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.zwzz, t1.xxxx, s1, v7.z
  70: mad r2.w, r12.y, r3.y, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.zwzz, t1.xxxx, s1, v7.z
  72: mad r2.w, r12.z, r3.y, r2.w
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t1.xxxx, s1, v7.z
  74: mad r2.w, r12.w, r3.y, r2.w
  75: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.zwzz, t1.xxxx, s1, v7.z
  76: mad r1.w, r1.w, r3.y, r2.w
  77: add r2.w, -cb3[29].x, l(1.000000)
  78: mad r1.w, r1.w, cb3[29].x, r2.w
  79: ge r2.w, l(0.000000), v7.z
  80: ge r3.y, v7.z, l(1.000000)
  81: or r2.w, r2.w, r3.y
  82: movc r1.w, r2.w, l(1.000000), r1.w
  83: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  86: mul r2.w, r2.w, r2.w
  87: add r3.y, -r1.w, l(1.000000)
  88: mad r1.w, r2.w, r3.y, r1.w
  89: sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xzxx, t2.yzwx, s2
  90: add r3.x, r2.w, l(-1.000000)
  91: mad r3.x, cb0[6].w, r3.x, l(1.000000)
  92: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  93: min r2.w, r2.w, l(1.000000)
  94: dp3 r4.x, -r2.xyzx, r1.xyzx
  95: add r4.x, r4.x, r4.x
  96: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  97: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  98: add r4.w, r4.w, l(-1.000000)
  99: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 100: max r4.w, r4.w, l(0.000000)
 101: log r4.w, r4.w
 102: mul r4.w, r4.w, cb2[14].y
 103: exp r4.w, r4.w
 104: mul r4.w, r4.w, cb2[14].x
 105: mul r4.xyz, r4.xyzx, r4.wwww
 106: mul r4.xyz, r2.wwww, r4.xyzx
 107: mul r1.w, r1.w, cb2[10].z
 108: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 109: mul r1.w, r1.w, r2.w
 110: mul r3.yzw, r1.wwww, r3.yyzw
 111: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 112: dp3 r0.w, r5.xyzx, r5.xyzx
 113: max r0.w, r0.w, l(0.000000)
 114: rsq r0.w, r0.w
 115: mul r5.xyz, r0.wwww, r5.xyzx
 116: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 117: mul r0.w, r0.w, r0.w
 118: max r0.w, r0.w, l(0.100000)
 119: mul r0.w, r0.w, l(6.000120)
 120: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 121: mul r3.yzw, r3.yyzw, r0.wwww
 122: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
 123: min r0.w, cb0[7].x, cb2[10].y
 124: ftoi r0.w, r0.w
 125: mov r4.xyz, r3.yzwy
 126: mov r1.w, l(0)
 127: loop 
 128:   uge r2.w, r1.w, r0.w
 129:   breakc_nz r2.w
 130:   and r2.w, r1.w, l(3)
 131:   ushr r4.w, r1.w, l(2)
 132:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
 133:   ftoi r2.w, r2.w
 134:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 135:   dp3 r4.w, r5.xyzx, r5.xyzx
 136:   max r4.w, r4.w, l(0.000061)
 137:   rsq r5.w, r4.w
 138:   mul r6.xyz, r5.wwww, r5.xyzx
 139:   rcp r6.w, r4.w
 140:   mul r4.w, r4.w, cb1[r2.w + 512].x
 141:   mad r4.w, -r4.w, r4.w, l(1.000000)
 142:   max r4.w, r4.w, l(0.000000)
 143:   mul r4.w, r4.w, r4.w
 144:   mul r4.w, r4.w, r6.w
 145:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
 146:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 147:   mul r6.w, r6.w, r6.w
 148:   mul r4.w, r4.w, r6.w
 149:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
 150:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 151:   mul r2.w, r2.w, r4.w
 152:   mul r7.xyz, r2.wwww, r7.xyzx
 153:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 154:   dp3 r2.w, r5.xyzx, r5.xyzx
 155:   max r2.w, r2.w, l(0.000000)
 156:   rsq r2.w, r2.w
 157:   mul r5.xyz, r2.wwww, r5.xyzx
 158:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 159:   mul r2.w, r2.w, r2.w
 160:   max r2.w, r2.w, l(0.100000)
 161:   mul r2.w, r2.w, l(6.000120)
 162:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 163:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 164:   iadd r1.w, r1.w, l(1)
 165: endloop 
 166: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 104 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t1.xxxx, s1, v7.z
  14: add r2.w, -cb3[29].x, l(1.000000)
  15: mad r1.w, r1.w, cb3[29].x, r2.w
  16: ge r2.w, l(0.000000), v7.z
  17: ge r3.y, v7.z, l(1.000000)
  18: or r2.w, r2.w, r3.y
  19: movc r1.w, r2.w, l(1.000000), r1.w
  20: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  21: dp3 r2.w, r4.xyzx, r4.xyzx
  22: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  23: mul r2.w, r2.w, r2.w
  24: add r3.y, -r1.w, l(1.000000)
  25: mad r1.w, r2.w, r3.y, r1.w
  26: sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xzxx, t3.xyzw, s3
  27: add r3.y, r3.x, l(-1.000000)
  28: mad r3.y, cb0[6].w, r3.y, l(1.000000)
  29: mul r4.xyz, r3.yyyy, cb0[4].xyzx
  30: min r3.x, r3.x, l(1.000000)
  31: dp3 r3.z, -r2.xyzx, r1.xyzx
  32: add r3.z, r3.z, r3.z
  33: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
  34: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
  35: add r3.z, r5.w, l(-1.000000)
  36: mad r3.z, cb2[14].w, r3.z, l(1.000000)
  37: max r3.z, r3.z, l(0.000000)
  38: log r3.z, r3.z
  39: mul r3.z, r3.z, cb2[14].y
  40: exp r3.z, r3.z
  41: mul r3.z, r3.z, cb2[14].x
  42: mul r5.xyz, r5.xyzx, r3.zzzz
  43: mul r3.xzw, r3.xxxx, r5.xxyz
  44: mul r1.w, r1.w, cb2[10].z
  45: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
  46: mul r1.w, r1.w, r4.w
  47: mul r4.xyz, r1.wwww, r4.xyzx
  48: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  49: dp3 r0.w, r5.xyzx, r5.xyzx
  50: max r0.w, r0.w, l(0.000000)
  51: rsq r0.w, r0.w
  52: mul r5.xyz, r0.wwww, r5.xyzx
  53: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  54: mul r0.w, r0.w, r0.w
  55: max r0.w, r0.w, l(0.100000)
  56: mul r0.w, r0.w, l(6.000120)
  57: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  58: mul r4.xyz, r4.xyzx, r0.wwww
  59: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
  60: min r0.w, cb0[7].x, cb2[10].y
  61: ftoi r0.w, r0.w
  62: mov r4.xyz, r3.xzwx
  63: mov r1.w, l(0)
  64: loop 
  65:   uge r4.w, r1.w, r0.w
  66:   breakc_nz r4.w
  67:   and r4.w, r1.w, l(3)
  68:   ushr r5.x, r1.w, l(2)
  69:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  70:   ftoi r4.w, r4.w
  71:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  72:   dp3 r5.w, r5.xyzx, r5.xyzx
  73:   max r5.w, r5.w, l(0.000061)
  74:   rsq r6.x, r5.w
  75:   mul r6.yzw, r5.xxyz, r6.xxxx
  76:   rcp r7.x, r5.w
  77:   mul r5.w, r5.w, cb1[r4.w + 512].x
  78:   mad r5.w, -r5.w, r5.w, l(1.000000)
  79:   max r5.w, r5.w, l(0.000000)
  80:   mul r5.w, r5.w, r5.w
  81:   mul r5.w, r5.w, r7.x
  82:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
  83:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
  84:   mul r7.x, r7.x, r7.x
  85:   mul r5.w, r5.w, r7.x
  86:   ishl r7.x, r4.w, l(2)
  87:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
  88:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
  89:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
  90:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
  91:   div r7.xyz, r7.xyzx, r7.wwww
  92:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t2.xxxx, s2, r7.z
  93:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
  94:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
  95:   ge r7.y, l(0.000000), r7.z
  96:   ge r7.z, r7.z, l(1.000000)
  97:   or r7.y, r7.z, r7.y
  98:   movc r7.x, r7.y, l(1.000000), r7.x
  99:   add r7.y, -r7.x, l(1.000000)
 100:   mad r7.x, r2.w, r7.y, r7.x
 101:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 102:   mul r4.w, r5.w, r7.x
 103:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 104:   mul r4.w, r4.w, r5.w
 105:   mul r7.xyz, r4.wwww, r7.yzwy
 106:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 107:   dp3 r4.w, r5.xyzx, r5.xyzx
 108:   max r4.w, r4.w, l(0.000000)
 109:   rsq r4.w, r4.w
 110:   mul r5.xyz, r4.wwww, r5.xyzx
 111:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 112:   mul r4.w, r4.w, r4.w
 113:   max r4.w, r4.w, l(0.100000)
 114:   mul r4.w, r4.w, l(6.000120)
 115:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 116:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 117:   iadd r1.w, r1.w, l(1)
 118: endloop 
 119: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 120: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 192 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: rcp r3.xy, cb0[2].xyxx
   9: mul r3.xy, r3.xyxx, v0.xyxx
  10: mad r1.w, r3.y, cb0[19].x, cb0[19].y
  11: add r3.z, -r1.w, l(1.000000)
  12: mov_sat o0.w, cb5[1].w
  13: mad r3.yw, v7.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  14: round_ni r3.yw, r3.yyyw
  15: mad r4.xy, v7.xyxx, cb3[30].zwzz, -r3.ywyy
  16: add r5.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  17: mul r6.xyzw, r5.xxzz, r5.xxzz
  18: mul r4.zw, r6.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  19: mad r5.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r4.xxyx
  20: add r6.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  21: min r6.zw, r4.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  22: mad r6.zw, -r6.zzzw, r6.zzzw, r6.xxxy
  23: max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  24: mad r4.xy, -r4.xyxx, r4.xyxx, r5.ywyy
  25: add r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  26: add r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  27: mul r7.xy, r5.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  29: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: mul r9.xy, r4.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  31: mul r4.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  32: mov r7.z, r6.x
  33: mov r7.w, r4.x
  34: mov r8.z, r9.x
  35: mov r8.w, r4.z
  36: add r5.xyzw, r7.zwxz, r8.zwxz
  37: mov r6.z, r7.y
  38: mov r6.w, r4.y
  39: mov r9.z, r8.y
  40: mov r9.w, r4.w
  41: add r4.xyz, r6.zywz, r9.zywz
  42: div r6.xyz, r8.xzwx, r5.zwyz
  43: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  44: div r7.xyz, r9.zywz, r4.xyzx
  45: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  46: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  47: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  48: mov r6.w, r7.x
  49: mad r8.xyzw, r3.ywyw, cb3[30].xyxy, r6.ywxw
  50: mad r9.xy, r3.ywyy, cb3[30].xyxx, r6.zwzz
  51: mov r7.w, r6.y
  52: mov r6.yw, r7.yyyz
  53: mad r10.xyzw, r3.ywyw, cb3[30].xyxy, r6.xyzy
  54: mad r7.xyzw, r3.ywyw, cb3[30].xyxy, r7.wywz
  55: mad r6.xyzw, r3.ywyw, cb3[30].xyxy, r6.xwzw
  56: mul r11.xyzw, r4.xxxy, r5.zwyz
  57: mul r12.xyzw, r4.yyzz, r5.xyzw
  58: mul r1.w, r4.z, r5.y
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r8.xyxx, t1.xxxx, s1, v7.z
  60: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r8.zwzz, t1.xxxx, s1, v7.z
  61: mul r3.y, r3.y, r11.y
  62: mad r2.w, r11.x, r2.w, r3.y
  63: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r9.xyxx, t1.xxxx, s1, v7.z
  64: mad r2.w, r11.z, r3.y, r2.w
  65: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.xyxx, t1.xxxx, s1, v7.z
  66: mad r2.w, r11.w, r3.y, r2.w
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.xyxx, t1.xxxx, s1, v7.z
  68: mad r2.w, r12.x, r3.y, r2.w
  69: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r10.zwzz, t1.xxxx, s1, v7.z
  70: mad r2.w, r12.y, r3.y, r2.w
  71: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r7.zwzz, t1.xxxx, s1, v7.z
  72: mad r2.w, r12.z, r3.y, r2.w
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.xyxx, t1.xxxx, s1, v7.z
  74: mad r2.w, r12.w, r3.y, r2.w
  75: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.y, r6.zwzz, t1.xxxx, s1, v7.z
  76: mad r1.w, r1.w, r3.y, r2.w
  77: add r2.w, -cb3[29].x, l(1.000000)
  78: mad r1.w, r1.w, cb3[29].x, r2.w
  79: ge r2.w, l(0.000000), v7.z
  80: ge r3.y, v7.z, l(1.000000)
  81: or r2.w, r2.w, r3.y
  82: movc r1.w, r2.w, l(1.000000), r1.w
  83: add r4.xyz, v1.xyzx, -cb0[13].xyzx
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  86: mul r2.w, r2.w, r2.w
  87: add r3.y, -r1.w, l(1.000000)
  88: mad r1.w, r2.w, r3.y, r1.w
  89: sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xzxx, t3.xyzw, s3
  90: add r3.y, r3.x, l(-1.000000)
  91: mad r3.y, cb0[6].w, r3.y, l(1.000000)
  92: mul r4.xyz, r3.yyyy, cb0[4].xyzx
  93: min r3.x, r3.x, l(1.000000)
  94: dp3 r3.z, -r2.xyzx, r1.xyzx
  95: add r3.z, r3.z, r3.z
  96: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
  97: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
  98: add r3.z, r5.w, l(-1.000000)
  99: mad r3.z, cb2[14].w, r3.z, l(1.000000)
 100: max r3.z, r3.z, l(0.000000)
 101: log r3.z, r3.z
 102: mul r3.z, r3.z, cb2[14].y
 103: exp r3.z, r3.z
 104: mul r3.z, r3.z, cb2[14].x
 105: mul r5.xyz, r5.xyzx, r3.zzzz
 106: mul r3.xzw, r3.xxxx, r5.xxyz
 107: mul r1.w, r1.w, cb2[10].z
 108: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
 109: mul r1.w, r1.w, r4.w
 110: mul r4.xyz, r1.wwww, r4.xyzx
 111: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 112: dp3 r0.w, r5.xyzx, r5.xyzx
 113: max r0.w, r0.w, l(0.000000)
 114: rsq r0.w, r0.w
 115: mul r5.xyz, r0.wwww, r5.xyzx
 116: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 117: mul r0.w, r0.w, r0.w
 118: max r0.w, r0.w, l(0.100000)
 119: mul r0.w, r0.w, l(6.000120)
 120: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 121: mul r4.xyz, r4.xyzx, r0.wwww
 122: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
 123: min r0.w, cb0[7].x, cb2[10].y
 124: ftoi r0.w, r0.w
 125: mov r4.xyz, r3.xzwx
 126: mov r1.w, l(0)
 127: loop 
 128:   uge r4.w, r1.w, r0.w
 129:   breakc_nz r4.w
 130:   and r4.w, r1.w, l(3)
 131:   ushr r5.x, r1.w, l(2)
 132:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
 133:   ftoi r4.w, r4.w
 134:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
 135:   dp3 r5.w, r5.xyzx, r5.xyzx
 136:   max r5.w, r5.w, l(0.000061)
 137:   rsq r6.x, r5.w
 138:   mul r6.yzw, r5.xxyz, r6.xxxx
 139:   rcp r7.x, r5.w
 140:   mul r5.w, r5.w, cb1[r4.w + 512].x
 141:   mad r5.w, -r5.w, r5.w, l(1.000000)
 142:   max r5.w, r5.w, l(0.000000)
 143:   mul r5.w, r5.w, r5.w
 144:   mul r5.w, r5.w, r7.x
 145:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
 146:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
 147:   mul r7.x, r7.x, r7.x
 148:   mul r5.w, r5.w, r7.x
 149:   ishl r7.x, r4.w, l(2)
 150:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
 151:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
 152:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
 153:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
 154:   div r7.xyz, r7.xyzx, r7.wwww
 155:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 156:   round_ni r8.xy, r8.xyxx
 157:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 158:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 159:   mul r10.xyzw, r9.xxzz, r9.xxzz
 160:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 161:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 162:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 163:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 164:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 165:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 166:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 167:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 168:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 169:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 170:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 171:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 172:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 173:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 174:   mov r11.z, r10.x
 175:   mov r11.w, r7.x
 176:   mov r12.z, r13.x
 177:   mov r12.w, r8.z
 178:   add r9.xyzw, r11.zwxz, r12.zwxz
 179:   mov r10.z, r11.y
 180:   mov r10.w, r7.y
 181:   mov r13.z, r12.y
 182:   mov r13.w, r8.w
 183:   add r7.xyw, r10.zyzw, r13.zyzw
 184:   div r10.xyz, r12.xzwx, r9.zwyz
 185:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 186:   div r11.xyz, r13.zywz, r7.xywx
 187:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 188:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 189:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 190:   mov r10.w, r11.x
 191:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 192:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 193:   mov r11.w, r10.y
 194:   mov r10.yw, r11.yyyz
 195:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 196:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 197:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 198:   mul r14.xyzw, r7.xxxy, r9.zwyz
 199:   mul r15.xyzw, r7.yyww, r9.xyzw
 200:   mul r7.x, r7.w, r9.y
 201:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t2.xxxx, s2, r7.z
 202:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t2.xxxx, s2, r7.z
 203:   mul r7.w, r7.w, r14.y
 204:   mad r7.y, r14.x, r7.y, r7.w
 205:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t2.xxxx, s2, r7.z
 206:   mad r7.y, r14.z, r7.w, r7.y
 207:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t2.xxxx, s2, r7.z
 208:   mad r7.y, r14.w, r7.w, r7.y
 209:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t2.xxxx, s2, r7.z
 210:   mad r7.y, r15.x, r7.w, r7.y
 211:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t2.xxxx, s2, r7.z
 212:   mad r7.y, r15.y, r7.w, r7.y
 213:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t2.xxxx, s2, r7.z
 214:   mad r7.y, r15.z, r7.w, r7.y
 215:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t2.xxxx, s2, r7.z
 216:   mad r7.y, r15.w, r7.w, r7.y
 217:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t2.xxxx, s2, r7.z
 218:   mad r7.x, r7.x, r7.w, r7.y
 219:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 220:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 221:   ge r7.y, l(0.000000), r7.z
 222:   ge r7.z, r7.z, l(1.000000)
 223:   or r7.y, r7.z, r7.y
 224:   movc r7.x, r7.y, l(1.000000), r7.x
 225:   add r7.y, -r7.x, l(1.000000)
 226:   mad r7.x, r2.w, r7.y, r7.x
 227:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 228:   mul r4.w, r5.w, r7.x
 229:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 230:   mul r4.w, r4.w, r5.w
 231:   mul r7.xyz, r4.wwww, r7.yzwy
 232:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 233:   dp3 r4.w, r5.xyzx, r5.xyzx
 234:   max r4.w, r4.w, l(0.000000)
 235:   rsq r4.w, r4.w
 236:   mul r5.xyz, r4.wwww, r5.xyzx
 237:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 238:   mul r4.w, r4.w, r4.w
 239:   max r4.w, r4.w, l(0.100000)
 240:   mul r4.w, r4.w, l(6.000120)
 241:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 242:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 243:   iadd r1.w, r1.w, l(1)
 244: endloop 
 245: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 246: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb0[13].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: mad_sat r0.x, r0.x, cb2[29].z, cb2[29].w
   3: mul r0.x, r0.x, r0.x
   4: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, v7.xyxx, t1.xxxx, s1, v7.z
   5: add r0.z, -cb2[29].x, l(1.000000)
   6: mad r0.y, r0.y, cb2[29].x, r0.z
   7: ge r0.z, l(0.000000), v7.z
   8: ge r0.w, v7.z, l(1.000000)
   9: or r0.z, r0.w, r0.z
  10: movc r0.y, r0.z, l(1.000000), r0.y
  11: add r0.z, -r0.y, l(1.000000)
  12: mad r0.x, r0.x, r0.z, r0.y
  13: mul r0.x, r0.x, cb1[10].z
  14: dp3 r0.y, v2.xyzx, v2.xyzx
  15: rsq r0.y, r0.y
  16: mul r0.yzw, r0.yyyy, v2.xxyz
  17: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  18: mul r0.x, r0.x, r1.x
  19: rcp r1.xy, cb0[2].xyxx
  20: mul r1.xy, r1.xyxx, v0.xyxx
  21: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  22: add r1.z, -r1.y, l(1.000000)
  23: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  24: add r1.y, r1.x, l(-1.000000)
  25: min r1.x, r1.x, l(1.000000)
  26: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  27: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  28: mul r1.yzw, r0.xxxx, r1.yyzw
  29: dp3 r0.x, v4.xyzx, v4.xyzx
  30: max r0.x, r0.x, l(0.000000)
  31: rsq r0.x, r0.x
  32: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  33: mul r3.xyz, r0.xxxx, v4.xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: max r0.x, r0.x, l(0.000000)
  36: rsq r0.x, r0.x
  37: mul r2.xyz, r0.xxxx, r2.xyzx
  38: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  39: mul r0.x, r0.x, r0.x
  40: max r0.x, r0.x, l(0.100000)
  41: mul r0.x, r0.x, l(6.000120)
  42: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  43: mul r1.yzw, r1.yyzw, r0.xxxx
  44: dp3 r0.x, -r3.xyzx, r0.yzwy
  45: add r0.x, r0.x, r0.x
  46: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  47: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  48: add r0.w, r0.w, l(-1.000000)
  49: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  50: max r0.w, r0.w, l(0.000000)
  51: log r0.w, r0.w
  52: mul r0.w, r0.w, cb1[14].y
  53: exp r0.w, r0.w
  54: mul r0.w, r0.w, cb1[14].x
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mul r0.xyz, r1.xxxx, r0.xyzx
  57: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  58: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  59: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  60: mov_sat o0.w, cb3[1].w
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v7.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v7.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.xxxx, s1, v7.z
  37: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, v7.z
  38: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.zwzz, t1.xxxx, s1, v7.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r6.xyxx, t1.xxxx, s1, v7.z
  47: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r6.zwzz, t1.xxxx, s1, v7.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t1.xxxx, s1, v7.z
  52: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r2.zwzz, t1.xxxx, s1, v7.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t1.xxxx, s1, v7.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.z, r3.zwzz, t1.xxxx, s1, v7.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v7.z
  65: ge r0.z, v7.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  70: dp3 r0.z, r1.xyzx, r1.xyzx
  71: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  72: mul r0.z, r0.z, r0.z
  73: mad r0.x, r0.z, r0.y, r0.x
  74: mul r0.x, r0.x, cb1[10].z
  75: dp3 r0.y, v2.xyzx, v2.xyzx
  76: rsq r0.y, r0.y
  77: mul r0.yzw, r0.yyyy, v2.xxyz
  78: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  79: mul r0.x, r0.x, r1.x
  80: rcp r1.xy, cb0[2].xyxx
  81: mul r1.xy, r1.xyxx, v0.xyxx
  82: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  83: add r1.z, -r1.y, l(1.000000)
  84: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  85: add r1.y, r1.x, l(-1.000000)
  86: min r1.x, r1.x, l(1.000000)
  87: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  88: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  89: mul r1.yzw, r0.xxxx, r1.yyzw
  90: dp3 r0.x, v4.xyzx, v4.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  94: mul r3.xyz, r0.xxxx, v4.xyzx
  95: dp3 r0.x, r2.xyzx, r2.xyzx
  96: max r0.x, r0.x, l(0.000000)
  97: rsq r0.x, r0.x
  98: mul r2.xyz, r0.xxxx, r2.xyzx
  99: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 100: mul r0.x, r0.x, r0.x
 101: max r0.x, r0.x, l(0.100000)
 102: mul r0.x, r0.x, l(6.000120)
 103: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 104: mul r1.yzw, r1.yyzw, r0.xxxx
 105: dp3 r0.x, -r3.xyzx, r0.yzwy
 106: add r0.x, r0.x, r0.x
 107: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 108: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 109: add r0.w, r0.w, l(-1.000000)
 110: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 111: max r0.w, r0.w, l(0.000000)
 112: log r0.w, r0.w
 113: mul r0.w, r0.w, cb1[14].y
 114: exp r0.w, r0.w
 115: mul r0.w, r0.w, cb1[14].x
 116: mul r0.xyz, r0.xyzx, r0.wwww
 117: mul r0.xyz, r1.xxxx, r0.xyzx
 118: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 119: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 120: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 121: mov_sat o0.w, cb3[1].w
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[13], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[70].xyzw
  19: mad r2.xyzw, cb0[69].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[71].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[72].xyzw
  22: eq r0.w, cb0[17].w, l(0.000000)
  23: add r2.xyz, -r0.xyzx, cb0[13].xyzx
  24: movc o4.x, r0.w, r2.x, cb0[57].z
  25: movc o4.y, r0.w, r2.y, cb0[58].z
  26: movc o4.z, r0.w, r2.z, cb0[59].z
  27: min r0.w, cb0[7].x, cb2[10].y
  28: ftoi r0.w, r0.w
  29: mov r2.xyz, l(0,0,0,0)
  30: mov r1.w, l(0)
  31: loop 
  32:   uge r2.w, r1.w, r0.w
  33:   breakc_nz r2.w
  34:   and r2.w, r1.w, l(3)
  35:   ushr r3.x, r1.w, l(2)
  36:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  37:   ftoi r2.w, r2.w
  38:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  39:   dp3 r3.w, r3.xyzx, r3.xyzx
  40:   max r3.w, r3.w, l(0.000061)
  41:   rsq r4.x, r3.w
  42:   mul r3.xyz, r3.xyzx, r4.xxxx
  43:   rcp r4.x, r3.w
  44:   mul r3.w, r3.w, cb1[r2.w + 512].x
  45:   mad r3.w, -r3.w, r3.w, l(1.000000)
  46:   max r3.w, r3.w, l(0.000000)
  47:   mul r3.w, r3.w, r3.w
  48:   mul r3.w, r3.w, r4.x
  49:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  50:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  51:   mul r4.x, r4.x, r4.x
  52:   mul r3.w, r3.w, r4.x
  53:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  54:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  55:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  56:   iadd r1.w, r1.w, l(1)
  57: endloop 
  58: mov o6.yzw, r2.xxyz
  59: mov o3.w, v2.w
  60: mov o6.x, l(0)
  61: mov o7.xyzw, l(0,0,0,0)
  62: mov o1.xyz, r0.xyzx
  63: mov o2.xyz, r1.xyzx
  64: mov o5.xyz, l(0,0,0,0)
  65: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 109 math, 8 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb4[1].w
  34: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  35: add r2.w, -cb3[29].x, l(1.000000)
  36: mad r1.w, r1.w, cb3[29].x, r2.w
  37: ge r2.w, l(0.000000), r3.z
  38: ge r3.x, r3.z, l(1.000000)
  39: or r2.w, r2.w, r3.x
  40: movc r1.w, r2.w, l(1.000000), r1.w
  41: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  42: dp3 r2.w, r3.xyzx, r3.xyzx
  43: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  44: mul r2.w, r2.w, r2.w
  45: add r3.x, -r1.w, l(1.000000)
  46: mad r1.w, r2.w, r3.x, r1.w
  47: sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xzxx, t2.yzwx, s2
  48: add r3.x, r2.w, l(-1.000000)
  49: mad r3.x, cb0[6].w, r3.x, l(1.000000)
  50: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  51: min r2.w, r2.w, l(1.000000)
  52: dp3 r4.x, -r2.xyzx, r1.xyzx
  53: add r4.x, r4.x, r4.x
  54: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  55: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
  56: add r4.w, r4.w, l(-1.000000)
  57: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  58: max r4.w, r4.w, l(0.000000)
  59: log r4.w, r4.w
  60: mul r4.w, r4.w, cb2[14].y
  61: exp r4.w, r4.w
  62: mul r4.w, r4.w, cb2[14].x
  63: mul r4.xyz, r4.xyzx, r4.wwww
  64: mul r4.xyz, r2.wwww, r4.xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  67: mul r1.w, r1.w, r2.w
  68: mul r3.yzw, r1.wwww, r3.yyzw
  69: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  70: dp3 r0.w, r5.xyzx, r5.xyzx
  71: max r0.w, r0.w, l(0.000000)
  72: rsq r0.w, r0.w
  73: mul r5.xyz, r0.wwww, r5.xyzx
  74: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.100000)
  77: mul r0.w, r0.w, l(6.000120)
  78: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  79: mul r3.yzw, r3.yyzw, r0.wwww
  80: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
  81: min r0.w, cb0[7].x, cb2[10].y
  82: ftoi r0.w, r0.w
  83: mov r4.xyz, r3.yzwy
  84: mov r1.w, l(0)
  85: loop 
  86:   uge r2.w, r1.w, r0.w
  87:   breakc_nz r2.w
  88:   and r2.w, r1.w, l(3)
  89:   ushr r4.w, r1.w, l(2)
  90:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
  91:   ftoi r2.w, r2.w
  92:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  93:   dp3 r4.w, r5.xyzx, r5.xyzx
  94:   max r4.w, r4.w, l(0.000061)
  95:   rsq r5.w, r4.w
  96:   mul r6.xyz, r5.wwww, r5.xyzx
  97:   rcp r6.w, r4.w
  98:   mul r4.w, r4.w, cb1[r2.w + 512].x
  99:   mad r4.w, -r4.w, r4.w, l(1.000000)
 100:   max r4.w, r4.w, l(0.000000)
 101:   mul r4.w, r4.w, r4.w
 102:   mul r4.w, r4.w, r6.w
 103:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
 104:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 105:   mul r6.w, r6.w, r6.w
 106:   mul r4.w, r4.w, r6.w
 107:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
 108:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 109:   mul r2.w, r2.w, r4.w
 110:   mul r7.xyz, r2.wwww, r7.xyzx
 111:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 112:   dp3 r2.w, r5.xyzx, r5.xyzx
 113:   max r2.w, r2.w, l(0.000000)
 114:   rsq r2.w, r2.w
 115:   mul r5.xyz, r2.wwww, r5.xyzx
 116:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 117:   mul r2.w, r2.w, r2.w
 118:   max r2.w, r2.w, l(0.100000)
 119:   mul r2.w, r2.w, l(6.000120)
 120:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 121:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 122:   iadd r1.w, r1.w, l(1)
 123: endloop 
 124: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 125: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 13 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 4 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: mul r0.xyz, cb4[0].xxxx, cb4[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb4[1].w
  34: mad r4.yw, r3.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  35: round_ni r4.yw, r4.yyyw
  36: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.ywyy
  37: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  38: mul r6.xyzw, r5.xxzz, r5.xxzz
  39: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  40: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.xyxx
  41: add r6.zw, -r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  42: min r7.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  44: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  46: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  47: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  48: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  50: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  51: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  52: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  53: mov r8.z, r7.x
  54: mov r8.w, r3.x
  55: mov r6.z, r9.x
  56: mov r6.w, r5.x
  57: add r10.xyzw, r6.zwxz, r8.zwxz
  58: mov r7.z, r8.y
  59: mov r7.w, r3.y
  60: mov r9.z, r6.y
  61: mov r9.w, r5.z
  62: add r3.xyw, r7.zyzw, r9.zyzw
  63: div r5.xyz, r6.xzwx, r10.zwyz
  64: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  65: div r6.xyz, r9.zywz, r3.xywx
  66: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  67: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  68: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  69: mov r5.w, r6.x
  70: mad r7.xyzw, r4.ywyw, cb3[30].xyxy, r5.ywxw
  71: mad r8.xy, r4.ywyy, cb3[30].xyxx, r5.zwzz
  72: mov r6.w, r5.y
  73: mov r5.yw, r6.yyyz
  74: mad r9.xyzw, r4.ywyw, cb3[30].xyxy, r5.xyzy
  75: mad r6.xyzw, r4.ywyw, cb3[30].xyxy, r6.wywz
  76: mad r5.xyzw, r4.ywyw, cb3[30].xyxy, r5.xwzw
  77: mul r11.xyzw, r3.xxxy, r10.zwyz
  78: mul r12.xyzw, r3.yyww, r10.xyzw
  79: mul r1.w, r3.w, r10.y
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, r3.z
  81: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  82: mul r3.x, r3.x, r11.y
  83: mad r2.w, r11.x, r2.w, r3.x
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.z, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.w, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  89: mad r2.w, r12.x, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  91: mad r2.w, r12.y, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r2.w, r12.z, r3.x, r2.w
  94: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, r3.z
  95: mad r2.w, r12.w, r3.x, r2.w
  96: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, r3.z
  97: mad r1.w, r1.w, r3.x, r2.w
  98: add r2.w, -cb3[29].x, l(1.000000)
  99: mad r1.w, r1.w, cb3[29].x, r2.w
 100: ge r2.w, l(0.000000), r3.z
 101: ge r3.x, r3.z, l(1.000000)
 102: or r2.w, r2.w, r3.x
 103: movc r1.w, r2.w, l(1.000000), r1.w
 104: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 105: dp3 r2.w, r3.xyzx, r3.xyzx
 106: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 107: mul r2.w, r2.w, r2.w
 108: add r3.x, -r1.w, l(1.000000)
 109: mad r1.w, r2.w, r3.x, r1.w
 110: sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xzxx, t2.yzwx, s2
 111: add r3.x, r2.w, l(-1.000000)
 112: mad r3.x, cb0[6].w, r3.x, l(1.000000)
 113: mul r3.yzw, r3.xxxx, cb0[4].xxyz
 114: min r2.w, r2.w, l(1.000000)
 115: dp3 r4.x, -r2.xyzx, r1.xyzx
 116: add r4.x, r4.x, r4.x
 117: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
 118: sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0, l(6.000000)
 119: add r4.w, r4.w, l(-1.000000)
 120: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 121: max r4.w, r4.w, l(0.000000)
 122: log r4.w, r4.w
 123: mul r4.w, r4.w, cb2[14].y
 124: exp r4.w, r4.w
 125: mul r4.w, r4.w, cb2[14].x
 126: mul r4.xyz, r4.xyzx, r4.wwww
 127: mul r4.xyz, r2.wwww, r4.xyzx
 128: mul r1.w, r1.w, cb2[10].z
 129: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 130: mul r1.w, r1.w, r2.w
 131: mul r3.yzw, r1.wwww, r3.yyzw
 132: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 133: dp3 r0.w, r5.xyzx, r5.xyzx
 134: max r0.w, r0.w, l(0.000000)
 135: rsq r0.w, r0.w
 136: mul r5.xyz, r0.wwww, r5.xyzx
 137: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 138: mul r0.w, r0.w, r0.w
 139: max r0.w, r0.w, l(0.100000)
 140: mul r0.w, r0.w, l(6.000120)
 141: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 142: mul r3.yzw, r3.yyzw, r0.wwww
 143: mad r3.yzw, r4.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r3.yyzw
 144: min r0.w, cb0[7].x, cb2[10].y
 145: ftoi r0.w, r0.w
 146: mov r4.xyz, r3.yzwy
 147: mov r1.w, l(0)
 148: loop 
 149:   uge r2.w, r1.w, r0.w
 150:   breakc_nz r2.w
 151:   and r2.w, r1.w, l(3)
 152:   ushr r4.w, r1.w, l(2)
 153:   dp4 r2.w, cb2[r4.w + 11].xyzw, icb[r2.w + 0].xyzw
 154:   ftoi r2.w, r2.w
 155:   mad r5.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 156:   dp3 r4.w, r5.xyzx, r5.xyzx
 157:   max r4.w, r4.w, l(0.000061)
 158:   rsq r5.w, r4.w
 159:   mul r6.xyz, r5.wwww, r5.xyzx
 160:   rcp r6.w, r4.w
 161:   mul r4.w, r4.w, cb1[r2.w + 512].x
 162:   mad r4.w, -r4.w, r4.w, l(1.000000)
 163:   max r4.w, r4.w, l(0.000000)
 164:   mul r4.w, r4.w, r4.w
 165:   mul r4.w, r4.w, r6.w
 166:   dp3 r6.w, cb1[r2.w + 768].xyzx, r6.xyzx
 167:   mad_sat r6.w, r6.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 168:   mul r6.w, r6.w, r6.w
 169:   mul r4.w, r4.w, r6.w
 170:   mul r7.xyz, r3.xxxx, cb1[r2.w + 256].xyzx
 171:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 172:   mul r2.w, r2.w, r4.w
 173:   mul r7.xyz, r2.wwww, r7.xyzx
 174:   mad r5.xyz, r5.xyzx, r5.wwww, r2.xyzx
 175:   dp3 r2.w, r5.xyzx, r5.xyzx
 176:   max r2.w, r2.w, l(0.000000)
 177:   rsq r2.w, r2.w
 178:   mul r5.xyz, r2.wwww, r5.xyzx
 179:   dp3_sat r2.w, r6.xyzx, r5.xyzx
 180:   mul r2.w, r2.w, r2.w
 181:   max r2.w, r2.w, l(0.100000)
 182:   mul r2.w, r2.w, l(6.000120)
 183:   div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 184:   mad r4.xyz, r2.wwww, r7.xyzx, r4.xyzx
 185:   iadd r1.w, r1.w, l(1)
 186: endloop 
 187: mad o0.xyz, r0.xyzx, cb4[1].wwww, r4.xyzx
 188: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 9 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb5[1].w
  34: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  35: add r2.w, -cb3[29].x, l(1.000000)
  36: mad r1.w, r1.w, cb3[29].x, r2.w
  37: ge r2.w, l(0.000000), r3.z
  38: ge r3.x, r3.z, l(1.000000)
  39: or r2.w, r2.w, r3.x
  40: movc r1.w, r2.w, l(1.000000), r1.w
  41: add r3.xyz, v1.xyzx, -cb0[13].xyzx
  42: dp3 r2.w, r3.xyzx, r3.xyzx
  43: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
  44: mul r2.w, r2.w, r2.w
  45: add r3.x, -r1.w, l(1.000000)
  46: mad r1.w, r2.w, r3.x, r1.w
  47: sample_indexable(texture2d)(float,float,float,float) r3.x, r4.xzxx, t3.xyzw, s3
  48: add r3.y, r3.x, l(-1.000000)
  49: mad r3.y, cb0[6].w, r3.y, l(1.000000)
  50: mul r4.xyz, r3.yyyy, cb0[4].xyzx
  51: min r3.x, r3.x, l(1.000000)
  52: dp3 r3.z, -r2.xyzx, r1.xyzx
  53: add r3.z, r3.z, r3.z
  54: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
  55: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
  56: add r3.z, r5.w, l(-1.000000)
  57: mad r3.z, cb2[14].w, r3.z, l(1.000000)
  58: max r3.z, r3.z, l(0.000000)
  59: log r3.z, r3.z
  60: mul r3.z, r3.z, cb2[14].y
  61: exp r3.z, r3.z
  62: mul r3.z, r3.z, cb2[14].x
  63: mul r5.xyz, r5.xyzx, r3.zzzz
  64: mul r3.xzw, r3.xxxx, r5.xxyz
  65: mul r1.w, r1.w, cb2[10].z
  66: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
  67: mul r1.w, r1.w, r4.w
  68: mul r4.xyz, r1.wwww, r4.xyzx
  69: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
  70: dp3 r0.w, r5.xyzx, r5.xyzx
  71: max r0.w, r0.w, l(0.000000)
  72: rsq r0.w, r0.w
  73: mul r5.xyz, r0.wwww, r5.xyzx
  74: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.100000)
  77: mul r0.w, r0.w, l(6.000120)
  78: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  79: mul r4.xyz, r4.xyzx, r0.wwww
  80: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
  81: min r0.w, cb0[7].x, cb2[10].y
  82: ftoi r0.w, r0.w
  83: mov r4.xyz, r3.xzwx
  84: mov r1.w, l(0)
  85: loop 
  86:   uge r4.w, r1.w, r0.w
  87:   breakc_nz r4.w
  88:   and r4.w, r1.w, l(3)
  89:   ushr r5.x, r1.w, l(2)
  90:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
  91:   ftoi r4.w, r4.w
  92:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
  93:   dp3 r5.w, r5.xyzx, r5.xyzx
  94:   max r5.w, r5.w, l(0.000061)
  95:   rsq r6.x, r5.w
  96:   mul r6.yzw, r5.xxyz, r6.xxxx
  97:   rcp r7.x, r5.w
  98:   mul r5.w, r5.w, cb1[r4.w + 512].x
  99:   mad r5.w, -r5.w, r5.w, l(1.000000)
 100:   max r5.w, r5.w, l(0.000000)
 101:   mul r5.w, r5.w, r5.w
 102:   mul r5.w, r5.w, r7.x
 103:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
 104:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
 105:   mul r7.x, r7.x, r7.x
 106:   mul r5.w, r5.w, r7.x
 107:   ishl r7.x, r4.w, l(2)
 108:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
 109:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
 110:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
 111:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
 112:   div r7.xyz, r7.xyzx, r7.wwww
 113:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t2.xxxx, s2, r7.z
 114:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 115:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 116:   ge r7.y, l(0.000000), r7.z
 117:   ge r7.z, r7.z, l(1.000000)
 118:   or r7.y, r7.z, r7.y
 119:   movc r7.x, r7.y, l(1.000000), r7.x
 120:   add r7.y, -r7.x, l(1.000000)
 121:   mad r7.x, r2.w, r7.y, r7.x
 122:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 123:   mul r4.w, r5.w, r7.x
 124:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 125:   mul r4.w, r4.w, r5.w
 126:   mul r7.xyz, r4.wwww, r7.yzwy
 127:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 128:   dp3 r4.w, r5.xyzx, r5.xyzx
 129:   max r4.w, r4.w, l(0.000000)
 130:   rsq r4.w, r4.w
 131:   mul r5.xyz, r4.wwww, r5.xyzx
 132:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 133:   mul r4.w, r4.w, r4.w
 134:   max r4.w, r4.w, l(0.100000)
 135:   mul r4.w, r4.w, l(6.000120)
 136:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 137:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 138:   iadd r1.w, r1.w, l(1)
 139: endloop 
 140: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 141: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 211 math, 16 temp registers, 1 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 3

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector4 _AdditionalLightsCount at 112
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 5 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 16
   0: mul r0.xyz, cb5[0].xxxx, cb5[1].xyzx
   1: dp3 r0.w, v2.xyzx, v2.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, v2.xyzx
   4: dp3 r0.w, v4.xyzx, v4.xyzx
   5: max r0.w, r0.w, l(0.000000)
   6: rsq r0.w, r0.w
   7: mul r2.xyz, r0.wwww, v4.xyzx
   8: add r3.xyz, v1.xyzx, -cb3[20].xyzx
   9: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  10: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  11: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  12: dp3 r3.x, r3.xyzx, r3.xyzx
  13: dp3 r3.y, r4.xyzx, r4.xyzx
  14: dp3 r3.z, r5.xyzx, r5.xyzx
  15: dp3 r3.w, r6.xyzx, r6.xyzx
  16: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  17: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  18: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  19: add r3.xyz, r3.xyzx, r4.yzwy
  20: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  21: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  22: add r1.w, -r1.w, l(4.000000)
  23: ftou r1.w, r1.w
  24: ishl r1.w, r1.w, l(2)
  25: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  26: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  27: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  28: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  29: rcp r4.xy, cb0[2].xyxx
  30: mul r4.xy, r4.xyxx, v0.xyxx
  31: mad r1.w, r4.y, cb0[19].x, cb0[19].y
  32: add r4.z, -r1.w, l(1.000000)
  33: mov_sat o0.w, cb5[1].w
  34: mad r4.yw, r3.xxxy, cb3[30].zzzw, l(0.000000, 0.500000, 0.000000, 0.500000)
  35: round_ni r4.yw, r4.yyyw
  36: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r4.ywyy
  37: add r5.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  38: mul r6.xyzw, r5.xxzz, r5.xxzz
  39: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  40: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r3.xyxx
  41: add r6.zw, -r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  42: min r7.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  44: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mad r3.xy, -r3.xyxx, r3.xyxx, r5.ywyy
  46: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  47: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  48: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  49: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  50: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  51: mul r9.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  52: mul r3.xy, r5.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  53: mov r8.z, r7.x
  54: mov r8.w, r3.x
  55: mov r6.z, r9.x
  56: mov r6.w, r5.x
  57: add r10.xyzw, r6.zwxz, r8.zwxz
  58: mov r7.z, r8.y
  59: mov r7.w, r3.y
  60: mov r9.z, r6.y
  61: mov r9.w, r5.z
  62: add r3.xyw, r7.zyzw, r9.zyzw
  63: div r5.xyz, r6.xzwx, r10.zwyz
  64: add r5.xyz, r5.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  65: div r6.xyz, r9.zywz, r3.xywx
  66: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  67: mul r5.xyz, r5.yxzy, cb3[30].xxxx
  68: mul r6.xyz, r6.xyzx, cb3[30].yyyy
  69: mov r5.w, r6.x
  70: mad r7.xyzw, r4.ywyw, cb3[30].xyxy, r5.ywxw
  71: mad r8.xy, r4.ywyy, cb3[30].xyxx, r5.zwzz
  72: mov r6.w, r5.y
  73: mov r5.yw, r6.yyyz
  74: mad r9.xyzw, r4.ywyw, cb3[30].xyxy, r5.xyzy
  75: mad r6.xyzw, r4.ywyw, cb3[30].xyxy, r6.wywz
  76: mad r5.xyzw, r4.ywyw, cb3[30].xyxy, r5.xwzw
  77: mul r11.xyzw, r3.xxxy, r10.zwyz
  78: mul r12.xyzw, r3.yyww, r10.xyzw
  79: mul r1.w, r3.w, r10.y
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t1.xxxx, s1, r3.z
  81: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r7.zwzz, t1.xxxx, s1, r3.z
  82: mul r3.x, r3.x, r11.y
  83: mad r2.w, r11.x, r2.w, r3.x
  84: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r8.xyxx, t1.xxxx, s1, r3.z
  85: mad r2.w, r11.z, r3.x, r2.w
  86: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.xyxx, t1.xxxx, s1, r3.z
  87: mad r2.w, r11.w, r3.x, r2.w
  88: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.xyxx, t1.xxxx, s1, r3.z
  89: mad r2.w, r12.x, r3.x, r2.w
  90: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r9.zwzz, t1.xxxx, s1, r3.z
  91: mad r2.w, r12.y, r3.x, r2.w
  92: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r6.zwzz, t1.xxxx, s1, r3.z
  93: mad r2.w, r12.z, r3.x, r2.w
  94: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.xyxx, t1.xxxx, s1, r3.z
  95: mad r2.w, r12.w, r3.x, r2.w
  96: sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r5.zwzz, t1.xxxx, s1, r3.z
  97: mad r1.w, r1.w, r3.x, r2.w
  98: add r2.w, -cb3[29].x, l(1.000000)
  99: mad r1.w, r1.w, cb3[29].x, r2.w
 100: ge r2.w, l(0.000000), r3.z
 101: ge r3.x, r3.z, l(1.000000)
 102: or r2.w, r2.w, r3.x
 103: movc r1.w, r2.w, l(1.000000), r1.w
 104: add r3.xyz, v1.xyzx, -cb0[13].xyzx
 105: dp3 r2.w, r3.xyzx, r3.xyzx
 106: mad_sat r2.w, r2.w, cb3[29].z, cb3[29].w
 107: mul r2.w, r2.w, r2.w
 108: add r3.x, -r1.w, l(1.000000)
 109: mad r1.w, r2.w, r3.x, r1.w
 110: sample_indexable(texture2d)(float,float,float,float) r3.x, r4.xzxx, t3.xyzw, s3
 111: add r3.y, r3.x, l(-1.000000)
 112: mad r3.y, cb0[6].w, r3.y, l(1.000000)
 113: mul r4.xyz, r3.yyyy, cb0[4].xyzx
 114: min r3.x, r3.x, l(1.000000)
 115: dp3 r3.z, -r2.xyzx, r1.xyzx
 116: add r3.z, r3.z, r3.z
 117: mad r5.xyz, r1.xyzx, -r3.zzzz, -r2.xyzx
 118: sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(6.000000)
 119: add r3.z, r5.w, l(-1.000000)
 120: mad r3.z, cb2[14].w, r3.z, l(1.000000)
 121: max r3.z, r3.z, l(0.000000)
 122: log r3.z, r3.z
 123: mul r3.z, r3.z, cb2[14].y
 124: exp r3.z, r3.z
 125: mul r3.z, r3.z, cb2[14].x
 126: mul r5.xyz, r5.xyzx, r3.zzzz
 127: mul r3.xzw, r3.xxxx, r5.xxyz
 128: mul r1.w, r1.w, cb2[10].z
 129: dp3_sat r4.w, r1.xyzx, cb0[3].xyzx
 130: mul r1.w, r1.w, r4.w
 131: mul r4.xyz, r1.wwww, r4.xyzx
 132: mad r5.xyz, v4.xyzx, r0.wwww, cb0[3].xyzx
 133: dp3 r0.w, r5.xyzx, r5.xyzx
 134: max r0.w, r0.w, l(0.000000)
 135: rsq r0.w, r0.w
 136: mul r5.xyz, r0.wwww, r5.xyzx
 137: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 138: mul r0.w, r0.w, r0.w
 139: max r0.w, r0.w, l(0.100000)
 140: mul r0.w, r0.w, l(6.000120)
 141: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 142: mul r4.xyz, r4.xyzx, r0.wwww
 143: mad r3.xzw, r3.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000), r4.xxyz
 144: min r0.w, cb0[7].x, cb2[10].y
 145: ftoi r0.w, r0.w
 146: mov r4.xyz, r3.xzwx
 147: mov r1.w, l(0)
 148: loop 
 149:   uge r4.w, r1.w, r0.w
 150:   breakc_nz r4.w
 151:   and r4.w, r1.w, l(3)
 152:   ushr r5.x, r1.w, l(2)
 153:   dp4 r4.w, cb2[r5.x + 11].xyzw, icb[r4.w + 0].xyzw
 154:   ftoi r4.w, r4.w
 155:   mad r5.xyz, -v1.xyzx, cb1[r4.w + 0].wwww, cb1[r4.w + 0].xyzx
 156:   dp3 r5.w, r5.xyzx, r5.xyzx
 157:   max r5.w, r5.w, l(0.000061)
 158:   rsq r6.x, r5.w
 159:   mul r6.yzw, r5.xxyz, r6.xxxx
 160:   rcp r7.x, r5.w
 161:   mul r5.w, r5.w, cb1[r4.w + 512].x
 162:   mad r5.w, -r5.w, r5.w, l(1.000000)
 163:   max r5.w, r5.w, l(0.000000)
 164:   mul r5.w, r5.w, r5.w
 165:   mul r5.w, r5.w, r7.x
 166:   dp3 r7.x, cb1[r4.w + 768].xyzx, r6.yzwy
 167:   mad_sat r7.x, r7.x, cb1[r4.w + 512].z, cb1[r4.w + 512].w
 168:   mul r7.x, r7.x, r7.x
 169:   mul r5.w, r5.w, r7.x
 170:   ishl r7.x, r4.w, l(2)
 171:   mul r8.xyzw, v1.yyyy, cb4[r7.x + 1].xyzw
 172:   mad r8.xyzw, cb4[r7.x + 0].xyzw, v1.xxxx, r8.xyzw
 173:   mad r8.xyzw, cb4[r7.x + 2].xyzw, v1.zzzz, r8.xyzw
 174:   add r7.xyzw, r8.xyzw, cb4[r7.x + 3].xyzw
 175:   div r7.xyz, r7.xyzx, r7.wwww
 176:   mad r8.xy, r7.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 177:   round_ni r8.xy, r8.xyxx
 178:   mad r7.xy, r7.xyxx, cb4[1284].zwzz, -r8.xyxx
 179:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 180:   mul r10.xyzw, r9.xxzz, r9.xxzz
 181:   mul r8.zw, r10.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 182:   mad r9.xz, r10.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
 183:   add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 184:   min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 185:   mad r10.zw, -r10.zzzw, r10.zzzw, r10.xxxy
 186:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 187:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
 188:   add r10.zw, r10.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 189:   add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 190:   mul r11.xy, r9.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 191:   mul r12.xy, r10.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 192:   mul r10.xy, r10.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 193:   mul r13.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 194:   mul r7.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 195:   mov r11.z, r10.x
 196:   mov r11.w, r7.x
 197:   mov r12.z, r13.x
 198:   mov r12.w, r8.z
 199:   add r9.xyzw, r11.zwxz, r12.zwxz
 200:   mov r10.z, r11.y
 201:   mov r10.w, r7.y
 202:   mov r13.z, r12.y
 203:   mov r13.w, r8.w
 204:   add r7.xyw, r10.zyzw, r13.zyzw
 205:   div r10.xyz, r12.xzwx, r9.zwyz
 206:   add r10.xyz, r10.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 207:   div r11.xyz, r13.zywz, r7.xywx
 208:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 209:   mul r10.xyz, r10.yxzy, cb4[1284].xxxx
 210:   mul r11.xyz, r11.xyzx, cb4[1284].yyyy
 211:   mov r10.w, r11.x
 212:   mad r12.xyzw, r8.xyxy, cb4[1284].xyxy, r10.ywxw
 213:   mad r8.zw, r8.xxxy, cb4[1284].xxxy, r10.zzzw
 214:   mov r11.w, r10.y
 215:   mov r10.yw, r11.yyyz
 216:   mad r13.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xyzy
 217:   mad r11.xyzw, r8.xyxy, cb4[1284].xyxy, r11.wywz
 218:   mad r10.xyzw, r8.xyxy, cb4[1284].xyxy, r10.xwzw
 219:   mul r14.xyzw, r7.xxxy, r9.zwyz
 220:   mul r15.xyzw, r7.yyww, r9.xyzw
 221:   mul r7.x, r7.w, r9.y
 222:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r12.xyxx, t2.xxxx, s2, r7.z
 223:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r12.zwzz, t2.xxxx, s2, r7.z
 224:   mul r7.w, r7.w, r14.y
 225:   mad r7.y, r14.x, r7.y, r7.w
 226:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t2.xxxx, s2, r7.z
 227:   mad r7.y, r14.z, r7.w, r7.y
 228:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.xyxx, t2.xxxx, s2, r7.z
 229:   mad r7.y, r14.w, r7.w, r7.y
 230:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.xyxx, t2.xxxx, s2, r7.z
 231:   mad r7.y, r15.x, r7.w, r7.y
 232:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r13.zwzz, t2.xxxx, s2, r7.z
 233:   mad r7.y, r15.y, r7.w, r7.y
 234:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r11.zwzz, t2.xxxx, s2, r7.z
 235:   mad r7.y, r15.z, r7.w, r7.y
 236:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.xyxx, t2.xxxx, s2, r7.z
 237:   mad r7.y, r15.w, r7.w, r7.y
 238:   sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r10.zwzz, t2.xxxx, s2, r7.z
 239:   mad r7.x, r7.x, r7.w, r7.y
 240:   add r7.y, l(1.000000), -cb4[r4.w + 1024].x
 241:   mad r7.x, r7.x, cb4[r4.w + 1024].x, r7.y
 242:   ge r7.y, l(0.000000), r7.z
 243:   ge r7.z, r7.z, l(1.000000)
 244:   or r7.y, r7.z, r7.y
 245:   movc r7.x, r7.y, l(1.000000), r7.x
 246:   add r7.y, -r7.x, l(1.000000)
 247:   mad r7.x, r2.w, r7.y, r7.x
 248:   mul r7.yzw, r3.yyyy, cb1[r4.w + 256].xxyz
 249:   mul r4.w, r5.w, r7.x
 250:   dp3_sat r5.w, r1.xyzx, r6.yzwy
 251:   mul r4.w, r4.w, r5.w
 252:   mul r7.xyz, r4.wwww, r7.yzwy
 253:   mad r5.xyz, r5.xyzx, r6.xxxx, r2.xyzx
 254:   dp3 r4.w, r5.xyzx, r5.xyzx
 255:   max r4.w, r4.w, l(0.000000)
 256:   rsq r4.w, r4.w
 257:   mul r5.xyz, r4.wwww, r5.xyzx
 258:   dp3_sat r4.w, r6.yzwy, r5.xyzx
 259:   mul r4.w, r4.w, r4.w
 260:   max r4.w, r4.w, l(0.100000)
 261:   mul r4.w, r4.w, l(6.000120)
 262:   div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
 263:   mad r4.xyz, r4.wwww, r7.xyzx, r4.xyzx
 264:   iadd r1.w, r1.w, l(1)
 265: endloop 
 266: mad o0.xyz, r0.xyzx, cb5[1].wwww, r4.xyzx
 267: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 74 math, 4 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xxxx, s1, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  30: dp3 r0.z, r1.xyzx, r1.xyzx
  31: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  32: mul r0.z, r0.z, r0.z
  33: mad r0.x, r0.z, r0.y, r0.x
  34: mul r0.x, r0.x, cb1[10].z
  35: dp3 r0.y, v2.xyzx, v2.xyzx
  36: rsq r0.y, r0.y
  37: mul r0.yzw, r0.yyyy, v2.xxyz
  38: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
  39: mul r0.x, r0.x, r1.x
  40: rcp r1.xy, cb0[2].xyxx
  41: mul r1.xy, r1.xyxx, v0.xyxx
  42: mad r1.y, r1.y, cb0[19].x, cb0[19].y
  43: add r1.z, -r1.y, l(1.000000)
  44: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
  45: add r1.y, r1.x, l(-1.000000)
  46: min r1.x, r1.x, l(1.000000)
  47: mad r1.y, cb0[6].w, r1.y, l(1.000000)
  48: mul r1.yzw, r1.yyyy, cb0[4].xxyz
  49: mul r1.yzw, r0.xxxx, r1.yyzw
  50: dp3 r0.x, v4.xyzx, v4.xyzx
  51: max r0.x, r0.x, l(0.000000)
  52: rsq r0.x, r0.x
  53: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
  54: mul r3.xyz, r0.xxxx, v4.xyzx
  55: dp3 r0.x, r2.xyzx, r2.xyzx
  56: max r0.x, r0.x, l(0.000000)
  57: rsq r0.x, r0.x
  58: mul r2.xyz, r0.xxxx, r2.xyzx
  59: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
  60: mul r0.x, r0.x, r0.x
  61: max r0.x, r0.x, l(0.100000)
  62: mul r0.x, r0.x, l(6.000120)
  63: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  64: mul r1.yzw, r1.yyzw, r0.xxxx
  65: dp3 r0.x, -r3.xyzx, r0.yzwy
  66: add r0.x, r0.x, r0.x
  67: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
  68: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  69: add r0.w, r0.w, l(-1.000000)
  70: mad r0.w, cb1[14].w, r0.w, l(1.000000)
  71: max r0.w, r0.w, l(0.000000)
  72: log r0.w, r0.w
  73: mul r0.w, r0.w, cb1[14].y
  74: exp r0.w, r0.w
  75: mul r0.w, r0.w, cb1[14].x
  76: mul r0.xyz, r0.xyzx, r0.wwww
  77: mul r0.xyz, r1.xxxx, r0.xyzx
  78: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
  79: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
  80: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
  81: mov_sat o0.w, cb3[1].w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SCREEN_SPACE_OCCLUSION _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 1 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_ScreenSpaceOcclusionTexture" to slot 2

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector4 _ScaledScreenParams at 32
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AmbientOcclusionParam at 96
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 _ScaleBiasRt at 304
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 3 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: add r1.xyz, v1.xyzx, -cb0[13].xyzx
  91: dp3 r0.z, r1.xyzx, r1.xyzx
  92: mad_sat r0.z, r0.z, cb2[29].z, cb2[29].w
  93: mul r0.z, r0.z, r0.z
  94: mad r0.x, r0.z, r0.y, r0.x
  95: mul r0.x, r0.x, cb1[10].z
  96: dp3 r0.y, v2.xyzx, v2.xyzx
  97: rsq r0.y, r0.y
  98: mul r0.yzw, r0.yyyy, v2.xxyz
  99: dp3_sat r1.x, r0.yzwy, cb0[3].xyzx
 100: mul r0.x, r0.x, r1.x
 101: rcp r1.xy, cb0[2].xyxx
 102: mul r1.xy, r1.xyxx, v0.xyxx
 103: mad r1.y, r1.y, cb0[19].x, cb0[19].y
 104: add r1.z, -r1.y, l(1.000000)
 105: sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t2.xyzw, s2
 106: add r1.y, r1.x, l(-1.000000)
 107: min r1.x, r1.x, l(1.000000)
 108: mad r1.y, cb0[6].w, r1.y, l(1.000000)
 109: mul r1.yzw, r1.yyyy, cb0[4].xxyz
 110: mul r1.yzw, r0.xxxx, r1.yyzw
 111: dp3 r0.x, v4.xyzx, v4.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mad r2.xyz, v4.xyzx, r0.xxxx, cb0[3].xyzx
 115: mul r3.xyz, r0.xxxx, v4.xyzx
 116: dp3 r0.x, r2.xyzx, r2.xyzx
 117: max r0.x, r0.x, l(0.000000)
 118: rsq r0.x, r0.x
 119: mul r2.xyz, r0.xxxx, r2.xyzx
 120: dp3_sat r0.x, cb0[3].xyzx, r2.xyzx
 121: mul r0.x, r0.x, r0.x
 122: max r0.x, r0.x, l(0.100000)
 123: mul r0.x, r0.x, l(6.000120)
 124: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
 125: mul r1.yzw, r1.yyzw, r0.xxxx
 126: dp3 r0.x, -r3.xyzx, r0.yzwy
 127: add r0.x, r0.x, r0.x
 128: mad r0.xyz, r0.yzwy, -r0.xxxx, -r3.xyzx
 129: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
 130: add r0.w, r0.w, l(-1.000000)
 131: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 132: max r0.w, r0.w, l(0.000000)
 133: log r0.w, r0.w
 134: mul r0.w, r0.w, cb1[14].y
 135: exp r0.w, r0.w
 136: mul r0.w, r0.w, cb1[14].x
 137: mul r0.xyz, r0.xyzx, r0.wwww
 138: mul r0.xyz, r1.xxxx, r0.xyzx
 139: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.yzwy
 140: mul r1.xyz, cb3[0].xxxx, cb3[1].xyzx
 141: mad o0.xyz, r1.xyzx, cb3[1].wwww, r0.xyzx
 142: mov_sat o0.w, cb3[1].w
 143: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 25 avg math (24..28)
 // Stats for Fragment shader:
 //        d3d11: 26 avg math (21..32)
 Pass {
  Name "GBuffer"
  Tags { "LIGHTMODE"="UniversalGBuffer" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: add r1.xyz, -r0.xyzx, cb0[13].xyzx
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r1.x, cb0[57].z
  27: movc o4.y, r0.w, r1.y, cb0[58].z
  28: movc o4.z, r0.w, r1.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mul r1.xyz, r0.yyyy, cb2[1].xyzx
  32: mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
  33: mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
  34: add o7.xyz, r0.xyzx, cb2[3].xyzx
  35: mov o7.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 2 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: mov o2.w, l(-1.000000)
   3: dp3 r0.x, v2.xyzx, v2.xyzx
   4: rsq r0.x, r0.x
   5: mul r0.xyz, r0.xxxx, v2.xyzx
   6: mov o2.xyz, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, v4.xyzx
  11: dp3 r0.w, -r1.xyzx, r0.xyzx
  12: add r0.w, r0.w, r0.w
  13: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  14: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  15: add r0.w, r0.w, l(-1.000000)
  16: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  17: max r0.w, r0.w, l(0.000000)
  18: log r0.w, r0.w
  19: mul r0.w, r0.w, cb0[14].y
  20: exp r0.w, r0.w
  21: mul r0.w, r0.w, cb0[14].x
  22: mul r0.xyz, r0.xyzx, r0.wwww
  23: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  24: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  25: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  26: mov o3.w, l(0)
  27: mov o4.xyzw, cb0[13].xyzw
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _GBUFFER_NORMALS_OCT _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
  Matrix4x4 unity_MatrixVP at 1104
  Vector3 _WorldSpaceCameraPos at 208
  Vector4 unity_OrthoParams at 272
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[72].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add r0.xyz, -r0.xyzx, cb0[13].xyzx
  10: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r1.xyzx
  24: mov o3.w, v2.w
  25: eq r0.w, cb0[17].w, l(0.000000)
  26: movc o4.x, r0.w, r0.x, cb0[57].z
  27: movc o4.y, r0.w, r0.y, cb0[58].z
  28: movc o4.z, r0.w, r0.z, cb0[59].z
  29: mov o5.xyz, l(0,0,0,0)
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 3 temp registers
Set CUBE Texture "unity_SpecCube0" to slot 0

Constant Buffer "UnityPerDraw" (400 bytes) on slot 0 {
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Float Vector1_453db91ee3354896b399fd0535907cf3 at 0
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xyz         5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 3
   0: mov o0.xyzw, l(0,0,0,0)
   1: mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
   2: dp3 r0.x, v2.xyzx, v2.xyzx
   3: rsq r0.x, r0.x
   4: mul r0.xyz, r0.xxxx, v2.xyzx
   5: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   6: rcp r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r0.zxyz
   8: mov_sat r1.x, -r1.x
   9: ge r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: movc r1.xy, r1.yzyy, r1.xxxx, -r1.xxxx
  11: mad r1.xy, r0.xyxx, r0.wwww, r1.xyxx
  12: mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r1.xy, r1.xyxx, l(4095.500000, 4095.500000, 0.000000, 0.000000)
  14: ftou r1.xy, r1.xyxx
  15: ushr r1.zw, r1.xxxy, l(0, 0, 8, 8)
  16: and r1.xy, r1.xyxx, l(255, 255, 0, 0)
  17: utof r2.xy, r1.xyxx
  18: ishl r0.w, r1.w, l(4)
  19: or r0.w, r0.w, r1.z
  20: utof r2.z, r0.w
  21: mul o2.xyz, r2.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
  22: mov o2.w, l(0)
  23: dp3 r0.w, v4.xyzx, v4.xyzx
  24: max r0.w, r0.w, l(0.000000)
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v4.xyzx
  27: dp3 r0.w, -r1.xyzx, r0.xyzx
  28: add r0.w, r0.w, r0.w
  29: mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
  30: sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, l(6.000000)
  31: add r0.w, r0.w, l(-1.000000)
  32: mad r0.w, cb0[14].w, r0.w, l(1.000000)
  33: max r0.w, r0.w, l(0.000000)
  34: log r0.w, r0.w
  35: mul r0.w, r0.w, cb0[14].y
  36: exp r0.w, r0.w
  37: mul r0.w, r0.w, cb0[14].x
  38: mul r0.xyz, r0.xyzx, r0.wwww
  39: mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  40: mul r1.xyz, cb1[0].xxxx, cb1[1].xyzx
  41: mad o3.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
  42: mov o3.w, l(0)
  43: mov o4.xyzw, cb0[13].xyzw
  44: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 21 math
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "$Globals" (1968 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _ShadowBias at 1936
  Vector3 _LightDirection at 1952
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[123], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mad r0.xyz, cb0[122].xyzx, cb0[121].xxxx, r0.xyzx
   5: dp3 r1.x, v1.xyzx, cb1[4].xyzx
   6: dp3 r1.y, v1.xyzx, cb1[5].xyzx
   7: dp3 r1.z, v1.xyzx, cb1[6].xyzx
   8: dp3 r0.w, r1.xyzx, r1.xyzx
   9: max r0.w, r0.w, l(0.000000)
  10: rsq r0.w, r0.w
  11: mul r1.xyz, r0.wwww, r1.xyzx
  12: dp3_sat r0.w, cb0[122].xyzx, r1.xyzx
  13: add r0.w, -r0.w, l(1.000000)
  14: mul r0.w, r0.w, cb0[121].y
  15: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  16: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
  17: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
  18: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
  19: add r0.xyzw, r0.xyzw, cb0[72].xyzw
  20: min o0.z, r0.w, r0.z
  21: mov o0.xyw, r0.xyxw
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 8 math
 Pass {
  Name "DepthOnly"
  Tags { "LIGHTMODE"="DepthOnly" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 8 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 22 math
 // Stats for Fragment shader:
 //        d3d11: 12 math
 Pass {
  Name "DepthNormals"
  Tags { "LIGHTMODE"="DepthNormals" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  16: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  17: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: max r0.w, r0.w, l(0.000000)
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, v2.w
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 1 temp registers
Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixV at 912
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[60], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: mul r0.xyz, v1.yyyy, cb0[58].xyzx
   1: mad r0.xyz, cb0[57].xyzx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[59].xyzx, v1.zzzz, r0.xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   7: rcp r0.w, r0.w
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mad r0.w, -r0.x, l(0.500000), l(0.500000)
  10: mad_sat r0.w, r0.y, l(0.500000), r0.w
  11: ge r0.z, r0.z, l(0.000000)
  12: add o0.y, r0.y, r0.x
  13: movc o0.x, r0.z, r0.w, -r0.w
  14: mov o0.zw, l(0,0,0,0)
  15: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 8 math
 Pass {
  Tags { "LIGHTMODE"="Universal2D" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 8 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (400 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 0 {
  Vector4 Color_122854f14d5940b1af97e43cdbfbb7df at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_output o0.xyzw
   0: mov o0.xyzw, cb0[1].xyzw
   1: ret 
// Approximately 0 instruction slots used


 }
}
SubShader { 
 Tags { "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
 Pass {
  Name "Universal Forward"
  Tags { "LIGHTMODE"="UniversalForward" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
 }
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
 }
 Pass {
  Name "DepthOnly"
  Tags { "LIGHTMODE"="DepthOnly" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
 }
 Pass {
  Name "DepthNormals"
  Tags { "LIGHTMODE"="DepthNormals" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
 }
 Pass {
  Tags { "LIGHTMODE"="Universal2D" "QUEUE"="Transparent" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Lit" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
 }
}
CustomEditor "ShaderGraph.PBRMasterGUI"
Fallback "Hidden/Shader Graph/FallbackError"
}